{
  "version": 3,
  "sources": ["../../@thatopen/components/dist/index.mjs"],
  "sourcesContent": ["var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nimport * as FRAGS from \"@thatopen/fragments\";\nimport { DataMap as DataMap$1, FragmentsModels } from \"@thatopen/fragments\";\nimport * as THREE$1 from \"three\";\nimport { BufferAttribute, Vector3, Plane, Line3, Vector2, Triangle, Sphere, Matrix4, Box3, BackSide, DoubleSide, FrontSide, Ray, Mesh, Controls, Quaternion, Raycaster, Object3D, MeshBasicMaterial, LineBasicMaterial, CylinderGeometry, BoxGeometry, BufferGeometry, Float32BufferAttribute, OctahedronGeometry, Line, TorusGeometry, SphereGeometry, Euler, PlaneGeometry } from \"three\";\nimport * as WEBIFC from \"web-ifc\";\nclass Event {\n  constructor() {\n    /**\n     * Whether this event is active or not. If not, it won't trigger.\n     */\n    __publicField(this, \"enabled\", true);\n    /** Triggers all the callbacks assigned to this event. */\n    __publicField(this, \"trigger\", (data) => {\n      if (!this.enabled) {\n        return;\n      }\n      const handlers = this.handlers.slice(0);\n      for (const handler of handlers) {\n        handler(data);\n      }\n    });\n    __publicField(this, \"handlers\", []);\n  }\n  /**\n   * Add a callback to this event instance.\n   * @param handler - the callback to be added to this event.\n   */\n  add(handler) {\n    this.handlers.push(handler);\n  }\n  /**\n   * Removes a callback from this event instance.\n   * @param handler - the callback to be removed from this event.\n   */\n  remove(handler) {\n    this.handlers = this.handlers.filter((h) => h !== handler);\n  }\n  /** Gets rid of all the suscribed events. */\n  reset() {\n    this.handlers.length = 0;\n  }\n}\nclass AsyncEvent {\n  constructor() {\n    /**\n     * Whether this event is active or not. If not, it won't trigger.\n     */\n    __publicField(this, \"enabled\", true);\n    /** Triggers all the callbacks assigned to this event. */\n    __publicField(this, \"trigger\", async (data) => {\n      if (!this.enabled) {\n        return;\n      }\n      const handlers = this.handlers.slice(0);\n      for (const handler of handlers) {\n        await handler(data);\n      }\n    });\n    __publicField(this, \"handlers\", []);\n  }\n  /**\n   * Add a callback to this event instance.\n   * @param handler - the callback to be added to this event.\n   */\n  add(handler) {\n    this.handlers.push(handler);\n  }\n  /**\n   * Removes a callback from this event instance.\n   * @param handler - the callback to be removed from this event.\n   */\n  remove(handler) {\n    this.handlers = this.handlers.filter((h) => h !== handler);\n  }\n  /** Gets rid of all the suscribed events. */\n  reset() {\n    this.handlers.length = 0;\n  }\n}\nclass Base {\n  constructor(components) {\n    /** Whether is component is {@link Disposable}. */\n    __publicField(this, \"isDisposeable\", () => {\n      return \"dispose\" in this && \"onDisposed\" in this;\n    });\n    /** Whether is component is {@link Resizeable}. */\n    __publicField(this, \"isResizeable\", () => {\n      return \"resize\" in this && \"getSize\" in this;\n    });\n    /** Whether is component is {@link Updateable}. */\n    __publicField(this, \"isUpdateable\", () => {\n      return \"onAfterUpdate\" in this && \"onBeforeUpdate\" in this && \"update\" in this;\n    });\n    /** Whether is component is {@link Hideable}. */\n    __publicField(this, \"isHideable\", () => {\n      return \"visible\" in this;\n    });\n    /** Whether is component is {@link Configurable}. */\n    __publicField(this, \"isConfigurable\", () => {\n      return \"setup\" in this && \"config\" in this && \"onSetup\" in this;\n    });\n    this.components = components;\n  }\n}\nclass Component extends Base {\n}\nclass BaseWorldItem extends Base {\n  constructor(components) {\n    super(components);\n    __publicField(this, \"worlds\", new DataMap$1());\n    /**\n     * Event that is triggered when a world is added or removed from the `worlds` map.\n     * The event payload contains the world instance and the action (\"added\" or \"removed\").\n     */\n    __publicField(this, \"onWorldChanged\", new Event());\n    __publicField(this, \"_currentWorld\", null);\n    this.onWorldChanged.add(({ world, action }) => {\n      if (action === \"removed\") {\n        this.worlds.delete(world.uuid);\n      }\n    });\n  }\n  /**\n   * The current world this item is associated with. It can be null if no world is currently active.\n   */\n  set currentWorld(value) {\n    this._currentWorld = value;\n  }\n  get currentWorld() {\n    return this._currentWorld;\n  }\n}\nclass BaseCamera extends BaseWorldItem {\n  constructor() {\n    super(...arguments);\n    /**\n     * Checks whether the instance is {@link CameraControllable}.\n     *\n     * @returns True if the instance is controllable, false otherwise.\n     */\n    __publicField(this, \"hasCameraControls\", () => {\n      return \"controls\" in this;\n    });\n  }\n}\nclass BaseRenderer extends BaseWorldItem {\n  constructor() {\n    super(...arguments);\n    /** {@link Updateable.onBeforeUpdate} */\n    __publicField(this, \"onAfterUpdate\", new Event());\n    /** {@link Updateable.onAfterUpdate} */\n    __publicField(this, \"onBeforeUpdate\", new Event());\n    /** {@link Disposable.onDisposed} */\n    __publicField(this, \"onDisposed\", new Event());\n    /** {@link Resizeable.onResize} */\n    __publicField(this, \"onResize\", new Event());\n    /**\n     * Event that fires when there has been a change to the list of clipping\n     * planes used by the active renderer.\n     */\n    __publicField(this, \"onClippingPlanesUpdated\", new Event());\n    /**\n     * The list of [clipping planes](https://threejs.org/docs/#api/en/renderers/WebGLRenderer.clippingPlanes) used by this instance of the renderer.\n     */\n    __publicField(this, \"clippingPlanes\", []);\n  }\n  /**\n   * Updates the clipping planes and triggers the `onClippingPlanesUpdated` event.\n   *\n   * @remarks\n   * This method is typically called when there is a change to the list of clipping planes\n   * used by the active renderer.\n   */\n  updateClippingPlanes() {\n    this.onClippingPlanesUpdated.trigger();\n  }\n  /**\n   * Sets or removes a clipping plane from the renderer.\n   *\n   * @param active - A boolean indicating whether the clipping plane should be active or not.\n   * @param plane - The clipping plane to be added or removed.\n   * @param isLocal - An optional boolean indicating whether the clipping plane is local to the object. If not provided, it defaults to `false`.\n   *\n   * @remarks\n   * This method adds or removes a clipping plane from the `clippingPlanes` array.\n   * If `active` is `true` and the plane is not already in the array, it is added.\n   * If `active` is `false` and the plane is in the array, it is removed.\n   * The `three.clippingPlanes` property is then updated to reflect the current state of the `clippingPlanes` array,\n   * excluding any planes marked as local.\n   */\n  setPlane(active, plane, isLocal) {\n    plane.isLocal = isLocal;\n    const index = this.clippingPlanes.indexOf(plane);\n    if (active && index === -1) {\n      this.clippingPlanes.push(plane);\n    } else if (!active && index > -1) {\n      this.clippingPlanes.splice(index, 1);\n    }\n    this.three.clippingPlanes = this.clippingPlanes.filter(\n      (plane2) => !plane2.isLocal\n    );\n  }\n}\nconst _Disposer = class _Disposer extends Component {\n  constructor(components) {\n    super(components);\n    __publicField(this, \"_disposedComponents\", /* @__PURE__ */ new Set());\n    /** {@link Component.enabled} */\n    __publicField(this, \"enabled\", true);\n    components.add(_Disposer.uuid, this);\n  }\n  // TODO: Remove this?\n  /**\n   * Return the UUIDs of all disposed components.\n   */\n  get() {\n    return this._disposedComponents;\n  }\n  /**\n   * Removes a mesh, its geometry and its materials from memory. If you are\n   * using any of these in other parts of the application, make sure that you\n   * remove them from the mesh before disposing it.\n   *\n   * @param object - the [object](https://threejs.org/docs/#api/en/core/Object3D)\n   * to remove.\n   *\n   * @param materials - whether to dispose the materials of the mesh.\n   *\n   * @param recursive - whether to recursively dispose the children of the mesh.\n   */\n  destroy(object, materials = true, recursive = true) {\n    object.removeFromParent();\n    const item = object;\n    if (item.dispose) {\n      item.dispose();\n    }\n    this.disposeGeometryAndMaterials(object, materials);\n    if (recursive && item.children && item.children.length) {\n      this.disposeChildren(item);\n    }\n    object.children.length = 0;\n  }\n  /**\n   * Disposes a geometry from memory.\n   *\n   * @param geometry - the\n   * [geometry](https://threejs.org/docs/#api/en/core/BufferGeometry)\n   * to remove.\n   */\n  disposeGeometry(geometry) {\n    if (geometry.boundsTree && geometry.disposeBoundsTree) {\n      geometry.disposeBoundsTree();\n    }\n    geometry.dispose();\n  }\n  disposeGeometryAndMaterials(mesh, materials) {\n    const item = mesh;\n    if (item.geometry) {\n      this.disposeGeometry(item.geometry);\n    }\n    if (materials && item.material) {\n      _Disposer.disposeMaterial(item);\n    }\n    item.material = [];\n    item.geometry = null;\n  }\n  disposeChildren(mesh) {\n    for (const child of mesh.children) {\n      this.destroy(child);\n    }\n  }\n  static disposeMaterial(mesh) {\n    if (mesh.material) {\n      if (Array.isArray(mesh.material)) {\n        for (const mat of mesh.material) {\n          mat.dispose();\n        }\n      } else {\n        mesh.material.dispose();\n      }\n    }\n  }\n};\n/**\n * A unique identifier for the component.\n * This UUID is used to register the component within the Components system.\n */\n__publicField(_Disposer, \"uuid\", \"76e9cd8e-ad8f-4753-9ef6-cbc60f7247fe\");\nlet Disposer = _Disposer;\nclass BaseScene extends BaseWorldItem {\n  constructor(components) {\n    super(components);\n    /** {@link Disposable.onDisposed} */\n    __publicField(this, \"onDisposed\", new Event());\n    /** The set of directional lights managed by this scene component. */\n    __publicField(this, \"directionalLights\", /* @__PURE__ */ new Map());\n    /** The set of ambient lights managed by this scene component. */\n    __publicField(this, \"ambientLights\", /* @__PURE__ */ new Map());\n  }\n  /** {@link Disposable.dispose} */\n  dispose() {\n    const disposer = this.components.get(Disposer);\n    for (const child of this.three.children) {\n      const mesh = child;\n      if (mesh.geometry) {\n        disposer.destroy(mesh);\n      }\n    }\n    this.deleteAllLights();\n    this.three.children = [];\n    this.onDisposed.trigger();\n    this.onDisposed.reset();\n  }\n  deleteAllLights() {\n    for (const [, light] of this.directionalLights) {\n      light.removeFromParent();\n      light.target.removeFromParent();\n      light.dispose();\n    }\n    this.directionalLights.clear();\n    for (const [, light] of this.ambientLights) {\n      light.removeFromParent();\n      light.dispose();\n    }\n    this.ambientLights.clear();\n  }\n}\nclass DataSet extends Set {\n  /**\n   * Constructs a new instance of the DataSet class.\n   *\n   * @param iterable - An optional iterable object to initialize the set with.\n   */\n  constructor(iterable) {\n    super(iterable);\n    /**\n     * An event that is triggered when a new item is added to the set.\n     */\n    __publicField(this, \"onItemAdded\", new Event());\n    /**\n     * An event that is triggered when an item is deleted from the set.\n     */\n    __publicField(this, \"onItemDeleted\", new Event());\n    /**\n     * An event that is triggered when the set is cleared.\n     */\n    __publicField(this, \"onCleared\", new Event());\n    /**\n     * A function that acts as a guard for adding items to the set.\n     * It determines whether a given value should be allowed to be added to the set.\n     *\n     * @param value - The value to be checked against the guard.\n     * @returns A boolean indicating whether the value should be allowed to be added to the set.\n     *          By default, this function always returns true, allowing all values to be added.\n     *          You can override this behavior by providing a custom implementation.\n     */\n    __publicField(this, \"guard\", () => true);\n  }\n  /**\n   * Clears the set and triggers the onCleared event.\n   */\n  clear() {\n    super.clear();\n    this.onCleared.trigger();\n  }\n  /**\n   * Adds one or multiple values to the set and triggers the onItemAdded event per each.\n   *\n   * @param value - The value to add to the set.\n   * @returns - The set instance.\n   */\n  add(...value) {\n    for (const item of value) {\n      const existing = this.has(item);\n      if (existing)\n        continue;\n      const isValid = this.guard(item);\n      if (!isValid)\n        continue;\n      super.add(item);\n      if (!this.onItemAdded)\n        this.onItemAdded = new Event();\n      this.onItemAdded.trigger(item);\n    }\n    return this;\n  }\n  /**\n   * Deletes a value from the set and triggers the onItemDeleted event.\n   *\n   * @param value - The value to delete from the set.\n   * @returns - True if the value was successfully deleted, false otherwise.\n   */\n  delete(value) {\n    const deleted = super.delete(value);\n    if (deleted)\n      this.onItemDeleted.trigger();\n    return deleted;\n  }\n  /**\n   * Clears the set and resets the onItemAdded, onItemDeleted, and onCleared events.\n   */\n  dispose() {\n    this.clear();\n    this.onItemAdded.reset();\n    this.onItemDeleted.reset();\n    this.onCleared.reset();\n  }\n}\nconst _UUID = class _UUID {\n  // Copied from three.js source\n  // Original source: http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\n  static create() {\n    const d0 = Math.random() * 4294967295 | 0;\n    const d1 = Math.random() * 4294967295 | 0;\n    const d2 = Math.random() * 4294967295 | 0;\n    const d3 = Math.random() * 4294967295 | 0;\n    const uuid = `${_UUID._lut[d0 & 255] + _UUID._lut[d0 >> 8 & 255] + _UUID._lut[d0 >> 16 & 255] + _UUID._lut[d0 >> 24 & 255]}-${_UUID._lut[d1 & 255]}${_UUID._lut[d1 >> 8 & 255]}-${_UUID._lut[d1 >> 16 & 15 | 64]}${_UUID._lut[d1 >> 24 & 255]}-${_UUID._lut[d2 & 63 | 128]}${_UUID._lut[d2 >> 8 & 255]}-${_UUID._lut[d2 >> 16 & 255]}${_UUID._lut[d2 >> 24 & 255]}${_UUID._lut[d3 & 255]}${_UUID._lut[d3 >> 8 & 255]}${_UUID._lut[d3 >> 16 & 255]}${_UUID._lut[d3 >> 24 & 255]}`;\n    return uuid.toLowerCase();\n  }\n  static validate(uuid) {\n    if (!_UUID._pattern.test(uuid))\n      throw new Error(\n        `${uuid} is not a valid UUID v4.\n\n- If you're the tool creator, you can take one from https://www.uuidgenerator.net/.\n\n- If you're using a platform tool, verify the uuid isn't misspelled or contact the tool creator.`\n      );\n  }\n};\n__publicField(_UUID, \"_pattern\", /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-4[0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$/);\n// prettier-ignore\n__publicField(_UUID, \"_lut\", [\n  \"00\",\n  \"01\",\n  \"02\",\n  \"03\",\n  \"04\",\n  \"05\",\n  \"06\",\n  \"07\",\n  \"08\",\n  \"09\",\n  \"0a\",\n  \"0b\",\n  \"0c\",\n  \"0d\",\n  \"0e\",\n  \"0f\",\n  \"10\",\n  \"11\",\n  \"12\",\n  \"13\",\n  \"14\",\n  \"15\",\n  \"16\",\n  \"17\",\n  \"18\",\n  \"19\",\n  \"1a\",\n  \"1b\",\n  \"1c\",\n  \"1d\",\n  \"1e\",\n  \"1f\",\n  \"20\",\n  \"21\",\n  \"22\",\n  \"23\",\n  \"24\",\n  \"25\",\n  \"26\",\n  \"27\",\n  \"28\",\n  \"29\",\n  \"2a\",\n  \"2b\",\n  \"2c\",\n  \"2d\",\n  \"2e\",\n  \"2f\",\n  \"30\",\n  \"31\",\n  \"32\",\n  \"33\",\n  \"34\",\n  \"35\",\n  \"36\",\n  \"37\",\n  \"38\",\n  \"39\",\n  \"3a\",\n  \"3b\",\n  \"3c\",\n  \"3d\",\n  \"3e\",\n  \"3f\",\n  \"40\",\n  \"41\",\n  \"42\",\n  \"43\",\n  \"44\",\n  \"45\",\n  \"46\",\n  \"47\",\n  \"48\",\n  \"49\",\n  \"4a\",\n  \"4b\",\n  \"4c\",\n  \"4d\",\n  \"4e\",\n  \"4f\",\n  \"50\",\n  \"51\",\n  \"52\",\n  \"53\",\n  \"54\",\n  \"55\",\n  \"56\",\n  \"57\",\n  \"58\",\n  \"59\",\n  \"5a\",\n  \"5b\",\n  \"5c\",\n  \"5d\",\n  \"5e\",\n  \"5f\",\n  \"60\",\n  \"61\",\n  \"62\",\n  \"63\",\n  \"64\",\n  \"65\",\n  \"66\",\n  \"67\",\n  \"68\",\n  \"69\",\n  \"6a\",\n  \"6b\",\n  \"6c\",\n  \"6d\",\n  \"6e\",\n  \"6f\",\n  \"70\",\n  \"71\",\n  \"72\",\n  \"73\",\n  \"74\",\n  \"75\",\n  \"76\",\n  \"77\",\n  \"78\",\n  \"79\",\n  \"7a\",\n  \"7b\",\n  \"7c\",\n  \"7d\",\n  \"7e\",\n  \"7f\",\n  \"80\",\n  \"81\",\n  \"82\",\n  \"83\",\n  \"84\",\n  \"85\",\n  \"86\",\n  \"87\",\n  \"88\",\n  \"89\",\n  \"8a\",\n  \"8b\",\n  \"8c\",\n  \"8d\",\n  \"8e\",\n  \"8f\",\n  \"90\",\n  \"91\",\n  \"92\",\n  \"93\",\n  \"94\",\n  \"95\",\n  \"96\",\n  \"97\",\n  \"98\",\n  \"99\",\n  \"9a\",\n  \"9b\",\n  \"9c\",\n  \"9d\",\n  \"9e\",\n  \"9f\",\n  \"a0\",\n  \"a1\",\n  \"a2\",\n  \"a3\",\n  \"a4\",\n  \"a5\",\n  \"a6\",\n  \"a7\",\n  \"a8\",\n  \"a9\",\n  \"aa\",\n  \"ab\",\n  \"ac\",\n  \"ad\",\n  \"ae\",\n  \"af\",\n  \"b0\",\n  \"b1\",\n  \"b2\",\n  \"b3\",\n  \"b4\",\n  \"b5\",\n  \"b6\",\n  \"b7\",\n  \"b8\",\n  \"b9\",\n  \"ba\",\n  \"bb\",\n  \"bc\",\n  \"bd\",\n  \"be\",\n  \"bf\",\n  \"c0\",\n  \"c1\",\n  \"c2\",\n  \"c3\",\n  \"c4\",\n  \"c5\",\n  \"c6\",\n  \"c7\",\n  \"c8\",\n  \"c9\",\n  \"ca\",\n  \"cb\",\n  \"cc\",\n  \"cd\",\n  \"ce\",\n  \"cf\",\n  \"d0\",\n  \"d1\",\n  \"d2\",\n  \"d3\",\n  \"d4\",\n  \"d5\",\n  \"d6\",\n  \"d7\",\n  \"d8\",\n  \"d9\",\n  \"da\",\n  \"db\",\n  \"dc\",\n  \"dd\",\n  \"de\",\n  \"df\",\n  \"e0\",\n  \"e1\",\n  \"e2\",\n  \"e3\",\n  \"e4\",\n  \"e5\",\n  \"e6\",\n  \"e7\",\n  \"e8\",\n  \"e9\",\n  \"ea\",\n  \"eb\",\n  \"ec\",\n  \"ed\",\n  \"ee\",\n  \"ef\",\n  \"f0\",\n  \"f1\",\n  \"f2\",\n  \"f3\",\n  \"f4\",\n  \"f5\",\n  \"f6\",\n  \"f7\",\n  \"f8\",\n  \"f9\",\n  \"fa\",\n  \"fb\",\n  \"fc\",\n  \"fd\",\n  \"fe\",\n  \"ff\"\n]);\nlet UUID = _UUID;\nvar commonjsGlobal = typeof globalThis !== \"undefined\" ? globalThis : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : {};\nfunction getDefaultExportFromCjs(x) {\n  return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, \"default\") ? x[\"default\"] : x;\n}\nvar validator$2 = {};\nvar util$3 = {};\n(function(exports) {\n  const nameStartChar = \":A-Za-z_\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD\";\n  const nameChar = nameStartChar + \"\\\\-.\\\\d\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040\";\n  const nameRegexp = \"[\" + nameStartChar + \"][\" + nameChar + \"]*\";\n  const regexName = new RegExp(\"^\" + nameRegexp + \"$\");\n  const getAllMatches = function(string, regex) {\n    const matches = [];\n    let match = regex.exec(string);\n    while (match) {\n      const allmatches = [];\n      allmatches.startIndex = regex.lastIndex - match[0].length;\n      const len = match.length;\n      for (let index = 0; index < len; index++) {\n        allmatches.push(match[index]);\n      }\n      matches.push(allmatches);\n      match = regex.exec(string);\n    }\n    return matches;\n  };\n  const isName = function(string) {\n    const match = regexName.exec(string);\n    return !(match === null || typeof match === \"undefined\");\n  };\n  exports.isExist = function(v) {\n    return typeof v !== \"undefined\";\n  };\n  exports.isEmptyObject = function(obj) {\n    return Object.keys(obj).length === 0;\n  };\n  exports.merge = function(target, a, arrayMode) {\n    if (a) {\n      const keys = Object.keys(a);\n      const len = keys.length;\n      for (let i = 0; i < len; i++) {\n        if (arrayMode === \"strict\") {\n          target[keys[i]] = [a[keys[i]]];\n        } else {\n          target[keys[i]] = a[keys[i]];\n        }\n      }\n    }\n  };\n  exports.getValue = function(v) {\n    if (exports.isExist(v)) {\n      return v;\n    } else {\n      return \"\";\n    }\n  };\n  exports.isName = isName;\n  exports.getAllMatches = getAllMatches;\n  exports.nameRegexp = nameRegexp;\n})(util$3);\nconst util$2 = util$3;\nconst defaultOptions$2 = {\n  allowBooleanAttributes: false,\n  //A tag can have attributes without any value\n  unpairedTags: []\n};\nvalidator$2.validate = function(xmlData, options) {\n  options = Object.assign({}, defaultOptions$2, options);\n  const tags = [];\n  let tagFound = false;\n  let reachedRoot = false;\n  if (xmlData[0] === \"\\uFEFF\") {\n    xmlData = xmlData.substr(1);\n  }\n  for (let i = 0; i < xmlData.length; i++) {\n    if (xmlData[i] === \"<\" && xmlData[i + 1] === \"?\") {\n      i += 2;\n      i = readPI(xmlData, i);\n      if (i.err)\n        return i;\n    } else if (xmlData[i] === \"<\") {\n      let tagStartPos = i;\n      i++;\n      if (xmlData[i] === \"!\") {\n        i = readCommentAndCDATA(xmlData, i);\n        continue;\n      } else {\n        let closingTag = false;\n        if (xmlData[i] === \"/\") {\n          closingTag = true;\n          i++;\n        }\n        let tagName = \"\";\n        for (; i < xmlData.length && xmlData[i] !== \">\" && xmlData[i] !== \" \" && xmlData[i] !== \"\t\" && xmlData[i] !== \"\\n\" && xmlData[i] !== \"\\r\"; i++) {\n          tagName += xmlData[i];\n        }\n        tagName = tagName.trim();\n        if (tagName[tagName.length - 1] === \"/\") {\n          tagName = tagName.substring(0, tagName.length - 1);\n          i--;\n        }\n        if (!validateTagName(tagName)) {\n          let msg;\n          if (tagName.trim().length === 0) {\n            msg = \"Invalid space after '<'.\";\n          } else {\n            msg = \"Tag '\" + tagName + \"' is an invalid name.\";\n          }\n          return getErrorObject(\"InvalidTag\", msg, getLineNumberForPosition(xmlData, i));\n        }\n        const result = readAttributeStr(xmlData, i);\n        if (result === false) {\n          return getErrorObject(\"InvalidAttr\", \"Attributes for '\" + tagName + \"' have open quote.\", getLineNumberForPosition(xmlData, i));\n        }\n        let attrStr = result.value;\n        i = result.index;\n        if (attrStr[attrStr.length - 1] === \"/\") {\n          const attrStrStart = i - attrStr.length;\n          attrStr = attrStr.substring(0, attrStr.length - 1);\n          const isValid = validateAttributeString(attrStr, options);\n          if (isValid === true) {\n            tagFound = true;\n          } else {\n            return getErrorObject(isValid.err.code, isValid.err.msg, getLineNumberForPosition(xmlData, attrStrStart + isValid.err.line));\n          }\n        } else if (closingTag) {\n          if (!result.tagClosed) {\n            return getErrorObject(\"InvalidTag\", \"Closing tag '\" + tagName + \"' doesn't have proper closing.\", getLineNumberForPosition(xmlData, i));\n          } else if (attrStr.trim().length > 0) {\n            return getErrorObject(\"InvalidTag\", \"Closing tag '\" + tagName + \"' can't have attributes or invalid starting.\", getLineNumberForPosition(xmlData, tagStartPos));\n          } else if (tags.length === 0) {\n            return getErrorObject(\"InvalidTag\", \"Closing tag '\" + tagName + \"' has not been opened.\", getLineNumberForPosition(xmlData, tagStartPos));\n          } else {\n            const otg = tags.pop();\n            if (tagName !== otg.tagName) {\n              let openPos = getLineNumberForPosition(xmlData, otg.tagStartPos);\n              return getErrorObject(\n                \"InvalidTag\",\n                \"Expected closing tag '\" + otg.tagName + \"' (opened in line \" + openPos.line + \", col \" + openPos.col + \") instead of closing tag '\" + tagName + \"'.\",\n                getLineNumberForPosition(xmlData, tagStartPos)\n              );\n            }\n            if (tags.length == 0) {\n              reachedRoot = true;\n            }\n          }\n        } else {\n          const isValid = validateAttributeString(attrStr, options);\n          if (isValid !== true) {\n            return getErrorObject(isValid.err.code, isValid.err.msg, getLineNumberForPosition(xmlData, i - attrStr.length + isValid.err.line));\n          }\n          if (reachedRoot === true) {\n            return getErrorObject(\"InvalidXml\", \"Multiple possible root nodes found.\", getLineNumberForPosition(xmlData, i));\n          } else if (options.unpairedTags.indexOf(tagName) !== -1)\n            ;\n          else {\n            tags.push({ tagName, tagStartPos });\n          }\n          tagFound = true;\n        }\n        for (i++; i < xmlData.length; i++) {\n          if (xmlData[i] === \"<\") {\n            if (xmlData[i + 1] === \"!\") {\n              i++;\n              i = readCommentAndCDATA(xmlData, i);\n              continue;\n            } else if (xmlData[i + 1] === \"?\") {\n              i = readPI(xmlData, ++i);\n              if (i.err)\n                return i;\n            } else {\n              break;\n            }\n          } else if (xmlData[i] === \"&\") {\n            const afterAmp = validateAmpersand(xmlData, i);\n            if (afterAmp == -1)\n              return getErrorObject(\"InvalidChar\", \"char '&' is not expected.\", getLineNumberForPosition(xmlData, i));\n            i = afterAmp;\n          } else {\n            if (reachedRoot === true && !isWhiteSpace(xmlData[i])) {\n              return getErrorObject(\"InvalidXml\", \"Extra text at the end\", getLineNumberForPosition(xmlData, i));\n            }\n          }\n        }\n        if (xmlData[i] === \"<\") {\n          i--;\n        }\n      }\n    } else {\n      if (isWhiteSpace(xmlData[i])) {\n        continue;\n      }\n      return getErrorObject(\"InvalidChar\", \"char '\" + xmlData[i] + \"' is not expected.\", getLineNumberForPosition(xmlData, i));\n    }\n  }\n  if (!tagFound) {\n    return getErrorObject(\"InvalidXml\", \"Start tag expected.\", 1);\n  } else if (tags.length == 1) {\n    return getErrorObject(\"InvalidTag\", \"Unclosed tag '\" + tags[0].tagName + \"'.\", getLineNumberForPosition(xmlData, tags[0].tagStartPos));\n  } else if (tags.length > 0) {\n    return getErrorObject(\"InvalidXml\", \"Invalid '\" + JSON.stringify(tags.map((t) => t.tagName), null, 4).replace(/\\r?\\n/g, \"\") + \"' found.\", { line: 1, col: 1 });\n  }\n  return true;\n};\nfunction isWhiteSpace(char) {\n  return char === \" \" || char === \"\t\" || char === \"\\n\" || char === \"\\r\";\n}\nfunction readPI(xmlData, i) {\n  const start = i;\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] == \"?\" || xmlData[i] == \" \") {\n      const tagname = xmlData.substr(start, i - start);\n      if (i > 5 && tagname === \"xml\") {\n        return getErrorObject(\"InvalidXml\", \"XML declaration allowed only at the start of the document.\", getLineNumberForPosition(xmlData, i));\n      } else if (xmlData[i] == \"?\" && xmlData[i + 1] == \">\") {\n        i++;\n        break;\n      } else {\n        continue;\n      }\n    }\n  }\n  return i;\n}\nfunction readCommentAndCDATA(xmlData, i) {\n  if (xmlData.length > i + 5 && xmlData[i + 1] === \"-\" && xmlData[i + 2] === \"-\") {\n    for (i += 3; i < xmlData.length; i++) {\n      if (xmlData[i] === \"-\" && xmlData[i + 1] === \"-\" && xmlData[i + 2] === \">\") {\n        i += 2;\n        break;\n      }\n    }\n  } else if (xmlData.length > i + 8 && xmlData[i + 1] === \"D\" && xmlData[i + 2] === \"O\" && xmlData[i + 3] === \"C\" && xmlData[i + 4] === \"T\" && xmlData[i + 5] === \"Y\" && xmlData[i + 6] === \"P\" && xmlData[i + 7] === \"E\") {\n    let angleBracketsCount = 1;\n    for (i += 8; i < xmlData.length; i++) {\n      if (xmlData[i] === \"<\") {\n        angleBracketsCount++;\n      } else if (xmlData[i] === \">\") {\n        angleBracketsCount--;\n        if (angleBracketsCount === 0) {\n          break;\n        }\n      }\n    }\n  } else if (xmlData.length > i + 9 && xmlData[i + 1] === \"[\" && xmlData[i + 2] === \"C\" && xmlData[i + 3] === \"D\" && xmlData[i + 4] === \"A\" && xmlData[i + 5] === \"T\" && xmlData[i + 6] === \"A\" && xmlData[i + 7] === \"[\") {\n    for (i += 8; i < xmlData.length; i++) {\n      if (xmlData[i] === \"]\" && xmlData[i + 1] === \"]\" && xmlData[i + 2] === \">\") {\n        i += 2;\n        break;\n      }\n    }\n  }\n  return i;\n}\nconst doubleQuote = '\"';\nconst singleQuote = \"'\";\nfunction readAttributeStr(xmlData, i) {\n  let attrStr = \"\";\n  let startChar = \"\";\n  let tagClosed = false;\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] === doubleQuote || xmlData[i] === singleQuote) {\n      if (startChar === \"\") {\n        startChar = xmlData[i];\n      } else if (startChar !== xmlData[i])\n        ;\n      else {\n        startChar = \"\";\n      }\n    } else if (xmlData[i] === \">\") {\n      if (startChar === \"\") {\n        tagClosed = true;\n        break;\n      }\n    }\n    attrStr += xmlData[i];\n  }\n  if (startChar !== \"\") {\n    return false;\n  }\n  return {\n    value: attrStr,\n    index: i,\n    tagClosed\n  };\n}\nconst validAttrStrRegxp = new RegExp(`(\\\\s*)([^\\\\s=]+)(\\\\s*=)?(\\\\s*(['\"])(([\\\\s\\\\S])*?)\\\\5)?`, \"g\");\nfunction validateAttributeString(attrStr, options) {\n  const matches = util$2.getAllMatches(attrStr, validAttrStrRegxp);\n  const attrNames = {};\n  for (let i = 0; i < matches.length; i++) {\n    if (matches[i][1].length === 0) {\n      return getErrorObject(\"InvalidAttr\", \"Attribute '\" + matches[i][2] + \"' has no space in starting.\", getPositionFromMatch(matches[i]));\n    } else if (matches[i][3] !== void 0 && matches[i][4] === void 0) {\n      return getErrorObject(\"InvalidAttr\", \"Attribute '\" + matches[i][2] + \"' is without value.\", getPositionFromMatch(matches[i]));\n    } else if (matches[i][3] === void 0 && !options.allowBooleanAttributes) {\n      return getErrorObject(\"InvalidAttr\", \"boolean attribute '\" + matches[i][2] + \"' is not allowed.\", getPositionFromMatch(matches[i]));\n    }\n    const attrName = matches[i][2];\n    if (!validateAttrName(attrName)) {\n      return getErrorObject(\"InvalidAttr\", \"Attribute '\" + attrName + \"' is an invalid name.\", getPositionFromMatch(matches[i]));\n    }\n    if (!attrNames.hasOwnProperty(attrName)) {\n      attrNames[attrName] = 1;\n    } else {\n      return getErrorObject(\"InvalidAttr\", \"Attribute '\" + attrName + \"' is repeated.\", getPositionFromMatch(matches[i]));\n    }\n  }\n  return true;\n}\nfunction validateNumberAmpersand(xmlData, i) {\n  let re = /\\d/;\n  if (xmlData[i] === \"x\") {\n    i++;\n    re = /[\\da-fA-F]/;\n  }\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] === \";\")\n      return i;\n    if (!xmlData[i].match(re))\n      break;\n  }\n  return -1;\n}\nfunction validateAmpersand(xmlData, i) {\n  i++;\n  if (xmlData[i] === \";\")\n    return -1;\n  if (xmlData[i] === \"#\") {\n    i++;\n    return validateNumberAmpersand(xmlData, i);\n  }\n  let count = 0;\n  for (; i < xmlData.length; i++, count++) {\n    if (xmlData[i].match(/\\w/) && count < 20)\n      continue;\n    if (xmlData[i] === \";\")\n      break;\n    return -1;\n  }\n  return i;\n}\nfunction getErrorObject(code, message, lineNumber) {\n  return {\n    err: {\n      code,\n      msg: message,\n      line: lineNumber.line || lineNumber,\n      col: lineNumber.col\n    }\n  };\n}\nfunction validateAttrName(attrName) {\n  return util$2.isName(attrName);\n}\nfunction validateTagName(tagname) {\n  return util$2.isName(tagname);\n}\nfunction getLineNumberForPosition(xmlData, index) {\n  const lines = xmlData.substring(0, index).split(/\\r?\\n/);\n  return {\n    line: lines.length,\n    // column number is last line's length + 1, because column numbering starts at 1:\n    col: lines[lines.length - 1].length + 1\n  };\n}\nfunction getPositionFromMatch(match) {\n  return match.startIndex + match[1].length;\n}\nvar OptionsBuilder = {};\nconst defaultOptions$1 = {\n  preserveOrder: false,\n  attributeNamePrefix: \"@_\",\n  attributesGroupName: false,\n  textNodeName: \"#text\",\n  ignoreAttributes: true,\n  removeNSPrefix: false,\n  // remove NS from tag name or attribute name if true\n  allowBooleanAttributes: false,\n  //a tag can have attributes without any value\n  //ignoreRootElement : false,\n  parseTagValue: true,\n  parseAttributeValue: false,\n  trimValues: true,\n  //Trim string values of tag and attributes\n  cdataPropName: false,\n  numberParseOptions: {\n    hex: true,\n    leadingZeros: true,\n    eNotation: true\n  },\n  tagValueProcessor: function(tagName, val2) {\n    return val2;\n  },\n  attributeValueProcessor: function(attrName, val2) {\n    return val2;\n  },\n  stopNodes: [],\n  //nested tags will not be parsed even for errors\n  alwaysCreateTextNode: false,\n  isArray: () => false,\n  commentPropName: false,\n  unpairedTags: [],\n  processEntities: true,\n  htmlEntities: false,\n  ignoreDeclaration: false,\n  ignorePiTags: false,\n  transformTagName: false,\n  transformAttributeName: false,\n  updateTag: function(tagName, jPath, attrs) {\n    return tagName;\n  }\n  // skipEmptyListItem: false\n};\nconst buildOptions$1 = function(options) {\n  return Object.assign({}, defaultOptions$1, options);\n};\nOptionsBuilder.buildOptions = buildOptions$1;\nOptionsBuilder.defaultOptions = defaultOptions$1;\nclass XmlNode {\n  constructor(tagname) {\n    this.tagname = tagname;\n    this.child = [];\n    this[\":@\"] = {};\n  }\n  add(key, val2) {\n    if (key === \"__proto__\")\n      key = \"#__proto__\";\n    this.child.push({ [key]: val2 });\n  }\n  addChild(node) {\n    if (node.tagname === \"__proto__\")\n      node.tagname = \"#__proto__\";\n    if (node[\":@\"] && Object.keys(node[\":@\"]).length > 0) {\n      this.child.push({ [node.tagname]: node.child, [\":@\"]: node[\":@\"] });\n    } else {\n      this.child.push({ [node.tagname]: node.child });\n    }\n  }\n}\nvar xmlNode$1 = XmlNode;\nconst util$1 = util$3;\nfunction readDocType$1(xmlData, i) {\n  const entities = {};\n  if (xmlData[i + 3] === \"O\" && xmlData[i + 4] === \"C\" && xmlData[i + 5] === \"T\" && xmlData[i + 6] === \"Y\" && xmlData[i + 7] === \"P\" && xmlData[i + 8] === \"E\") {\n    i = i + 9;\n    let angleBracketsCount = 1;\n    let hasBody = false, comment = false;\n    let exp = \"\";\n    for (; i < xmlData.length; i++) {\n      if (xmlData[i] === \"<\" && !comment) {\n        if (hasBody && isEntity(xmlData, i)) {\n          i += 7;\n          [entityName, val, i] = readEntityExp(xmlData, i + 1);\n          if (val.indexOf(\"&\") === -1)\n            entities[validateEntityName(entityName)] = {\n              regx: RegExp(`&${entityName};`, \"g\"),\n              val\n            };\n        } else if (hasBody && isElement(xmlData, i))\n          i += 8;\n        else if (hasBody && isAttlist(xmlData, i))\n          i += 8;\n        else if (hasBody && isNotation(xmlData, i))\n          i += 9;\n        else if (isComment)\n          comment = true;\n        else\n          throw new Error(\"Invalid DOCTYPE\");\n        angleBracketsCount++;\n        exp = \"\";\n      } else if (xmlData[i] === \">\") {\n        if (comment) {\n          if (xmlData[i - 1] === \"-\" && xmlData[i - 2] === \"-\") {\n            comment = false;\n            angleBracketsCount--;\n          }\n        } else {\n          angleBracketsCount--;\n        }\n        if (angleBracketsCount === 0) {\n          break;\n        }\n      } else if (xmlData[i] === \"[\") {\n        hasBody = true;\n      } else {\n        exp += xmlData[i];\n      }\n    }\n    if (angleBracketsCount !== 0) {\n      throw new Error(`Unclosed DOCTYPE`);\n    }\n  } else {\n    throw new Error(`Invalid Tag instead of DOCTYPE`);\n  }\n  return { entities, i };\n}\nfunction readEntityExp(xmlData, i) {\n  let entityName2 = \"\";\n  for (; i < xmlData.length && (xmlData[i] !== \"'\" && xmlData[i] !== '\"'); i++) {\n    entityName2 += xmlData[i];\n  }\n  entityName2 = entityName2.trim();\n  if (entityName2.indexOf(\" \") !== -1)\n    throw new Error(\"External entites are not supported\");\n  const startChar = xmlData[i++];\n  let val2 = \"\";\n  for (; i < xmlData.length && xmlData[i] !== startChar; i++) {\n    val2 += xmlData[i];\n  }\n  return [entityName2, val2, i];\n}\nfunction isComment(xmlData, i) {\n  if (xmlData[i + 1] === \"!\" && xmlData[i + 2] === \"-\" && xmlData[i + 3] === \"-\")\n    return true;\n  return false;\n}\nfunction isEntity(xmlData, i) {\n  if (xmlData[i + 1] === \"!\" && xmlData[i + 2] === \"E\" && xmlData[i + 3] === \"N\" && xmlData[i + 4] === \"T\" && xmlData[i + 5] === \"I\" && xmlData[i + 6] === \"T\" && xmlData[i + 7] === \"Y\")\n    return true;\n  return false;\n}\nfunction isElement(xmlData, i) {\n  if (xmlData[i + 1] === \"!\" && xmlData[i + 2] === \"E\" && xmlData[i + 3] === \"L\" && xmlData[i + 4] === \"E\" && xmlData[i + 5] === \"M\" && xmlData[i + 6] === \"E\" && xmlData[i + 7] === \"N\" && xmlData[i + 8] === \"T\")\n    return true;\n  return false;\n}\nfunction isAttlist(xmlData, i) {\n  if (xmlData[i + 1] === \"!\" && xmlData[i + 2] === \"A\" && xmlData[i + 3] === \"T\" && xmlData[i + 4] === \"T\" && xmlData[i + 5] === \"L\" && xmlData[i + 6] === \"I\" && xmlData[i + 7] === \"S\" && xmlData[i + 8] === \"T\")\n    return true;\n  return false;\n}\nfunction isNotation(xmlData, i) {\n  if (xmlData[i + 1] === \"!\" && xmlData[i + 2] === \"N\" && xmlData[i + 3] === \"O\" && xmlData[i + 4] === \"T\" && xmlData[i + 5] === \"A\" && xmlData[i + 6] === \"T\" && xmlData[i + 7] === \"I\" && xmlData[i + 8] === \"O\" && xmlData[i + 9] === \"N\")\n    return true;\n  return false;\n}\nfunction validateEntityName(name) {\n  if (util$1.isName(name))\n    return name;\n  else\n    throw new Error(`Invalid entity name ${name}`);\n}\nvar DocTypeReader = readDocType$1;\nconst hexRegex = /^[-+]?0x[a-fA-F0-9]+$/;\nconst numRegex = /^([\\-\\+])?(0*)([0-9]*(\\.[0-9]*)?)$/;\nconst consider = {\n  hex: true,\n  // oct: false,\n  leadingZeros: true,\n  decimalPoint: \".\",\n  eNotation: true\n  //skipLike: /regex/\n};\nfunction toNumber$1(str, options = {}) {\n  options = Object.assign({}, consider, options);\n  if (!str || typeof str !== \"string\")\n    return str;\n  let trimmedStr = str.trim();\n  if (options.skipLike !== void 0 && options.skipLike.test(trimmedStr))\n    return str;\n  else if (str === \"0\")\n    return 0;\n  else if (options.hex && hexRegex.test(trimmedStr)) {\n    return parse_int(trimmedStr, 16);\n  } else if (trimmedStr.search(/[eE]/) !== -1) {\n    const notation = trimmedStr.match(/^([-\\+])?(0*)([0-9]*(\\.[0-9]*)?[eE][-\\+]?[0-9]+)$/);\n    if (notation) {\n      if (options.leadingZeros) {\n        trimmedStr = (notation[1] || \"\") + notation[3];\n      } else {\n        if (notation[2] === \"0\" && notation[3][0] === \".\")\n          ;\n        else {\n          return str;\n        }\n      }\n      return options.eNotation ? Number(trimmedStr) : str;\n    } else {\n      return str;\n    }\n  } else {\n    const match = numRegex.exec(trimmedStr);\n    if (match) {\n      const sign = match[1];\n      const leadingZeros = match[2];\n      let numTrimmedByZeros = trimZeros(match[3]);\n      if (!options.leadingZeros && leadingZeros.length > 0 && sign && trimmedStr[2] !== \".\")\n        return str;\n      else if (!options.leadingZeros && leadingZeros.length > 0 && !sign && trimmedStr[1] !== \".\")\n        return str;\n      else if (options.leadingZeros && leadingZeros === str)\n        return 0;\n      else {\n        const num = Number(trimmedStr);\n        const numStr = \"\" + num;\n        if (numStr.search(/[eE]/) !== -1) {\n          if (options.eNotation)\n            return num;\n          else\n            return str;\n        } else if (trimmedStr.indexOf(\".\") !== -1) {\n          if (numStr === \"0\" && numTrimmedByZeros === \"\")\n            return num;\n          else if (numStr === numTrimmedByZeros)\n            return num;\n          else if (sign && numStr === \"-\" + numTrimmedByZeros)\n            return num;\n          else\n            return str;\n        }\n        if (leadingZeros) {\n          return numTrimmedByZeros === numStr || sign + numTrimmedByZeros === numStr ? num : str;\n        } else {\n          return trimmedStr === numStr || trimmedStr === sign + numStr ? num : str;\n        }\n      }\n    } else {\n      return str;\n    }\n  }\n}\nfunction trimZeros(numStr) {\n  if (numStr && numStr.indexOf(\".\") !== -1) {\n    numStr = numStr.replace(/0+$/, \"\");\n    if (numStr === \".\")\n      numStr = \"0\";\n    else if (numStr[0] === \".\")\n      numStr = \"0\" + numStr;\n    else if (numStr[numStr.length - 1] === \".\")\n      numStr = numStr.substr(0, numStr.length - 1);\n    return numStr;\n  }\n  return numStr;\n}\nfunction parse_int(numStr, base) {\n  if (parseInt)\n    return parseInt(numStr, base);\n  else if (Number.parseInt)\n    return Number.parseInt(numStr, base);\n  else if (window && window.parseInt)\n    return window.parseInt(numStr, base);\n  else\n    throw new Error(\"parseInt, Number.parseInt, window.parseInt are not supported\");\n}\nvar strnum = toNumber$1;\nconst util = util$3;\nconst xmlNode = xmlNode$1;\nconst readDocType = DocTypeReader;\nconst toNumber = strnum;\nlet OrderedObjParser$1 = class OrderedObjParser {\n  constructor(options) {\n    this.options = options;\n    this.currentNode = null;\n    this.tagsNodeStack = [];\n    this.docTypeEntities = {};\n    this.lastEntities = {\n      \"apos\": { regex: /&(apos|#39|#x27);/g, val: \"'\" },\n      \"gt\": { regex: /&(gt|#62|#x3E);/g, val: \">\" },\n      \"lt\": { regex: /&(lt|#60|#x3C);/g, val: \"<\" },\n      \"quot\": { regex: /&(quot|#34|#x22);/g, val: '\"' }\n    };\n    this.ampEntity = { regex: /&(amp|#38|#x26);/g, val: \"&\" };\n    this.htmlEntities = {\n      \"space\": { regex: /&(nbsp|#160);/g, val: \" \" },\n      // \"lt\" : { regex: /&(lt|#60);/g, val: \"<\" },\n      // \"gt\" : { regex: /&(gt|#62);/g, val: \">\" },\n      // \"amp\" : { regex: /&(amp|#38);/g, val: \"&\" },\n      // \"quot\" : { regex: /&(quot|#34);/g, val: \"\\\"\" },\n      // \"apos\" : { regex: /&(apos|#39);/g, val: \"'\" },\n      \"cent\": { regex: /&(cent|#162);/g, val: \"¢\" },\n      \"pound\": { regex: /&(pound|#163);/g, val: \"£\" },\n      \"yen\": { regex: /&(yen|#165);/g, val: \"¥\" },\n      \"euro\": { regex: /&(euro|#8364);/g, val: \"€\" },\n      \"copyright\": { regex: /&(copy|#169);/g, val: \"©\" },\n      \"reg\": { regex: /&(reg|#174);/g, val: \"®\" },\n      \"inr\": { regex: /&(inr|#8377);/g, val: \"₹\" },\n      \"num_dec\": { regex: /&#([0-9]{1,7});/g, val: (_, str) => String.fromCharCode(Number.parseInt(str, 10)) },\n      \"num_hex\": { regex: /&#x([0-9a-fA-F]{1,6});/g, val: (_, str) => String.fromCharCode(Number.parseInt(str, 16)) }\n    };\n    this.addExternalEntities = addExternalEntities;\n    this.parseXml = parseXml;\n    this.parseTextData = parseTextData;\n    this.resolveNameSpace = resolveNameSpace;\n    this.buildAttributesMap = buildAttributesMap;\n    this.isItStopNode = isItStopNode;\n    this.replaceEntitiesValue = replaceEntitiesValue$1;\n    this.readStopNodeData = readStopNodeData;\n    this.saveTextToParentTag = saveTextToParentTag;\n    this.addChild = addChild;\n  }\n};\nfunction addExternalEntities(externalEntities) {\n  const entKeys = Object.keys(externalEntities);\n  for (let i = 0; i < entKeys.length; i++) {\n    const ent = entKeys[i];\n    this.lastEntities[ent] = {\n      regex: new RegExp(\"&\" + ent + \";\", \"g\"),\n      val: externalEntities[ent]\n    };\n  }\n}\nfunction parseTextData(val2, tagName, jPath, dontTrim, hasAttributes, isLeafNode, escapeEntities) {\n  if (val2 !== void 0) {\n    if (this.options.trimValues && !dontTrim) {\n      val2 = val2.trim();\n    }\n    if (val2.length > 0) {\n      if (!escapeEntities)\n        val2 = this.replaceEntitiesValue(val2);\n      const newval = this.options.tagValueProcessor(tagName, val2, jPath, hasAttributes, isLeafNode);\n      if (newval === null || newval === void 0) {\n        return val2;\n      } else if (typeof newval !== typeof val2 || newval !== val2) {\n        return newval;\n      } else if (this.options.trimValues) {\n        return parseValue(val2, this.options.parseTagValue, this.options.numberParseOptions);\n      } else {\n        const trimmedVal = val2.trim();\n        if (trimmedVal === val2) {\n          return parseValue(val2, this.options.parseTagValue, this.options.numberParseOptions);\n        } else {\n          return val2;\n        }\n      }\n    }\n  }\n}\nfunction resolveNameSpace(tagname) {\n  if (this.options.removeNSPrefix) {\n    const tags = tagname.split(\":\");\n    const prefix = tagname.charAt(0) === \"/\" ? \"/\" : \"\";\n    if (tags[0] === \"xmlns\") {\n      return \"\";\n    }\n    if (tags.length === 2) {\n      tagname = prefix + tags[1];\n    }\n  }\n  return tagname;\n}\nconst attrsRegx = new RegExp(`([^\\\\s=]+)\\\\s*(=\\\\s*(['\"])([\\\\s\\\\S]*?)\\\\3)?`, \"gm\");\nfunction buildAttributesMap(attrStr, jPath, tagName) {\n  if (!this.options.ignoreAttributes && typeof attrStr === \"string\") {\n    const matches = util.getAllMatches(attrStr, attrsRegx);\n    const len = matches.length;\n    const attrs = {};\n    for (let i = 0; i < len; i++) {\n      const attrName = this.resolveNameSpace(matches[i][1]);\n      let oldVal = matches[i][4];\n      let aName = this.options.attributeNamePrefix + attrName;\n      if (attrName.length) {\n        if (this.options.transformAttributeName) {\n          aName = this.options.transformAttributeName(aName);\n        }\n        if (aName === \"__proto__\")\n          aName = \"#__proto__\";\n        if (oldVal !== void 0) {\n          if (this.options.trimValues) {\n            oldVal = oldVal.trim();\n          }\n          oldVal = this.replaceEntitiesValue(oldVal);\n          const newVal = this.options.attributeValueProcessor(attrName, oldVal, jPath);\n          if (newVal === null || newVal === void 0) {\n            attrs[aName] = oldVal;\n          } else if (typeof newVal !== typeof oldVal || newVal !== oldVal) {\n            attrs[aName] = newVal;\n          } else {\n            attrs[aName] = parseValue(\n              oldVal,\n              this.options.parseAttributeValue,\n              this.options.numberParseOptions\n            );\n          }\n        } else if (this.options.allowBooleanAttributes) {\n          attrs[aName] = true;\n        }\n      }\n    }\n    if (!Object.keys(attrs).length) {\n      return;\n    }\n    if (this.options.attributesGroupName) {\n      const attrCollection = {};\n      attrCollection[this.options.attributesGroupName] = attrs;\n      return attrCollection;\n    }\n    return attrs;\n  }\n}\nconst parseXml = function(xmlData) {\n  xmlData = xmlData.replace(/\\r\\n?/g, \"\\n\");\n  const xmlObj = new xmlNode(\"!xml\");\n  let currentNode = xmlObj;\n  let textData = \"\";\n  let jPath = \"\";\n  for (let i = 0; i < xmlData.length; i++) {\n    const ch = xmlData[i];\n    if (ch === \"<\") {\n      if (xmlData[i + 1] === \"/\") {\n        const closeIndex = findClosingIndex(xmlData, \">\", i, \"Closing Tag is not closed.\");\n        let tagName = xmlData.substring(i + 2, closeIndex).trim();\n        if (this.options.removeNSPrefix) {\n          const colonIndex = tagName.indexOf(\":\");\n          if (colonIndex !== -1) {\n            tagName = tagName.substr(colonIndex + 1);\n          }\n        }\n        if (this.options.transformTagName) {\n          tagName = this.options.transformTagName(tagName);\n        }\n        if (currentNode) {\n          textData = this.saveTextToParentTag(textData, currentNode, jPath);\n        }\n        const lastTagName = jPath.substring(jPath.lastIndexOf(\".\") + 1);\n        if (tagName && this.options.unpairedTags.indexOf(tagName) !== -1) {\n          throw new Error(`Unpaired tag can not be used as closing tag: </${tagName}>`);\n        }\n        let propIndex = 0;\n        if (lastTagName && this.options.unpairedTags.indexOf(lastTagName) !== -1) {\n          propIndex = jPath.lastIndexOf(\".\", jPath.lastIndexOf(\".\") - 1);\n          this.tagsNodeStack.pop();\n        } else {\n          propIndex = jPath.lastIndexOf(\".\");\n        }\n        jPath = jPath.substring(0, propIndex);\n        currentNode = this.tagsNodeStack.pop();\n        textData = \"\";\n        i = closeIndex;\n      } else if (xmlData[i + 1] === \"?\") {\n        let tagData = readTagExp(xmlData, i, false, \"?>\");\n        if (!tagData)\n          throw new Error(\"Pi Tag is not closed.\");\n        textData = this.saveTextToParentTag(textData, currentNode, jPath);\n        if (this.options.ignoreDeclaration && tagData.tagName === \"?xml\" || this.options.ignorePiTags)\n          ;\n        else {\n          const childNode = new xmlNode(tagData.tagName);\n          childNode.add(this.options.textNodeName, \"\");\n          if (tagData.tagName !== tagData.tagExp && tagData.attrExpPresent) {\n            childNode[\":@\"] = this.buildAttributesMap(tagData.tagExp, jPath, tagData.tagName);\n          }\n          this.addChild(currentNode, childNode, jPath);\n        }\n        i = tagData.closeIndex + 1;\n      } else if (xmlData.substr(i + 1, 3) === \"!--\") {\n        const endIndex = findClosingIndex(xmlData, \"-->\", i + 4, \"Comment is not closed.\");\n        if (this.options.commentPropName) {\n          const comment = xmlData.substring(i + 4, endIndex - 2);\n          textData = this.saveTextToParentTag(textData, currentNode, jPath);\n          currentNode.add(this.options.commentPropName, [{ [this.options.textNodeName]: comment }]);\n        }\n        i = endIndex;\n      } else if (xmlData.substr(i + 1, 2) === \"!D\") {\n        const result = readDocType(xmlData, i);\n        this.docTypeEntities = result.entities;\n        i = result.i;\n      } else if (xmlData.substr(i + 1, 2) === \"![\") {\n        const closeIndex = findClosingIndex(xmlData, \"]]>\", i, \"CDATA is not closed.\") - 2;\n        const tagExp = xmlData.substring(i + 9, closeIndex);\n        textData = this.saveTextToParentTag(textData, currentNode, jPath);\n        let val2 = this.parseTextData(tagExp, currentNode.tagname, jPath, true, false, true, true);\n        if (val2 == void 0)\n          val2 = \"\";\n        if (this.options.cdataPropName) {\n          currentNode.add(this.options.cdataPropName, [{ [this.options.textNodeName]: tagExp }]);\n        } else {\n          currentNode.add(this.options.textNodeName, val2);\n        }\n        i = closeIndex + 2;\n      } else {\n        let result = readTagExp(xmlData, i, this.options.removeNSPrefix);\n        let tagName = result.tagName;\n        const rawTagName = result.rawTagName;\n        let tagExp = result.tagExp;\n        let attrExpPresent = result.attrExpPresent;\n        let closeIndex = result.closeIndex;\n        if (this.options.transformTagName) {\n          tagName = this.options.transformTagName(tagName);\n        }\n        if (currentNode && textData) {\n          if (currentNode.tagname !== \"!xml\") {\n            textData = this.saveTextToParentTag(textData, currentNode, jPath, false);\n          }\n        }\n        const lastTag = currentNode;\n        if (lastTag && this.options.unpairedTags.indexOf(lastTag.tagname) !== -1) {\n          currentNode = this.tagsNodeStack.pop();\n          jPath = jPath.substring(0, jPath.lastIndexOf(\".\"));\n        }\n        if (tagName !== xmlObj.tagname) {\n          jPath += jPath ? \".\" + tagName : tagName;\n        }\n        if (this.isItStopNode(this.options.stopNodes, jPath, tagName)) {\n          let tagContent = \"\";\n          if (tagExp.length > 0 && tagExp.lastIndexOf(\"/\") === tagExp.length - 1) {\n            if (tagName[tagName.length - 1] === \"/\") {\n              tagName = tagName.substr(0, tagName.length - 1);\n              jPath = jPath.substr(0, jPath.length - 1);\n              tagExp = tagName;\n            } else {\n              tagExp = tagExp.substr(0, tagExp.length - 1);\n            }\n            i = result.closeIndex;\n          } else if (this.options.unpairedTags.indexOf(tagName) !== -1) {\n            i = result.closeIndex;\n          } else {\n            const result2 = this.readStopNodeData(xmlData, rawTagName, closeIndex + 1);\n            if (!result2)\n              throw new Error(`Unexpected end of ${rawTagName}`);\n            i = result2.i;\n            tagContent = result2.tagContent;\n          }\n          const childNode = new xmlNode(tagName);\n          if (tagName !== tagExp && attrExpPresent) {\n            childNode[\":@\"] = this.buildAttributesMap(tagExp, jPath, tagName);\n          }\n          if (tagContent) {\n            tagContent = this.parseTextData(tagContent, tagName, jPath, true, attrExpPresent, true, true);\n          }\n          jPath = jPath.substr(0, jPath.lastIndexOf(\".\"));\n          childNode.add(this.options.textNodeName, tagContent);\n          this.addChild(currentNode, childNode, jPath);\n        } else {\n          if (tagExp.length > 0 && tagExp.lastIndexOf(\"/\") === tagExp.length - 1) {\n            if (tagName[tagName.length - 1] === \"/\") {\n              tagName = tagName.substr(0, tagName.length - 1);\n              jPath = jPath.substr(0, jPath.length - 1);\n              tagExp = tagName;\n            } else {\n              tagExp = tagExp.substr(0, tagExp.length - 1);\n            }\n            if (this.options.transformTagName) {\n              tagName = this.options.transformTagName(tagName);\n            }\n            const childNode = new xmlNode(tagName);\n            if (tagName !== tagExp && attrExpPresent) {\n              childNode[\":@\"] = this.buildAttributesMap(tagExp, jPath, tagName);\n            }\n            this.addChild(currentNode, childNode, jPath);\n            jPath = jPath.substr(0, jPath.lastIndexOf(\".\"));\n          } else {\n            const childNode = new xmlNode(tagName);\n            this.tagsNodeStack.push(currentNode);\n            if (tagName !== tagExp && attrExpPresent) {\n              childNode[\":@\"] = this.buildAttributesMap(tagExp, jPath, tagName);\n            }\n            this.addChild(currentNode, childNode, jPath);\n            currentNode = childNode;\n          }\n          textData = \"\";\n          i = closeIndex;\n        }\n      }\n    } else {\n      textData += xmlData[i];\n    }\n  }\n  return xmlObj.child;\n};\nfunction addChild(currentNode, childNode, jPath) {\n  const result = this.options.updateTag(childNode.tagname, jPath, childNode[\":@\"]);\n  if (result === false)\n    ;\n  else if (typeof result === \"string\") {\n    childNode.tagname = result;\n    currentNode.addChild(childNode);\n  } else {\n    currentNode.addChild(childNode);\n  }\n}\nconst replaceEntitiesValue$1 = function(val2) {\n  if (this.options.processEntities) {\n    for (let entityName2 in this.docTypeEntities) {\n      const entity = this.docTypeEntities[entityName2];\n      val2 = val2.replace(entity.regx, entity.val);\n    }\n    for (let entityName2 in this.lastEntities) {\n      const entity = this.lastEntities[entityName2];\n      val2 = val2.replace(entity.regex, entity.val);\n    }\n    if (this.options.htmlEntities) {\n      for (let entityName2 in this.htmlEntities) {\n        const entity = this.htmlEntities[entityName2];\n        val2 = val2.replace(entity.regex, entity.val);\n      }\n    }\n    val2 = val2.replace(this.ampEntity.regex, this.ampEntity.val);\n  }\n  return val2;\n};\nfunction saveTextToParentTag(textData, currentNode, jPath, isLeafNode) {\n  if (textData) {\n    if (isLeafNode === void 0)\n      isLeafNode = Object.keys(currentNode.child).length === 0;\n    textData = this.parseTextData(\n      textData,\n      currentNode.tagname,\n      jPath,\n      false,\n      currentNode[\":@\"] ? Object.keys(currentNode[\":@\"]).length !== 0 : false,\n      isLeafNode\n    );\n    if (textData !== void 0 && textData !== \"\")\n      currentNode.add(this.options.textNodeName, textData);\n    textData = \"\";\n  }\n  return textData;\n}\nfunction isItStopNode(stopNodes, jPath, currentTagName) {\n  const allNodesExp = \"*.\" + currentTagName;\n  for (const stopNodePath in stopNodes) {\n    const stopNodeExp = stopNodes[stopNodePath];\n    if (allNodesExp === stopNodeExp || jPath === stopNodeExp)\n      return true;\n  }\n  return false;\n}\nfunction tagExpWithClosingIndex(xmlData, i, closingChar = \">\") {\n  let attrBoundary;\n  let tagExp = \"\";\n  for (let index = i; index < xmlData.length; index++) {\n    let ch = xmlData[index];\n    if (attrBoundary) {\n      if (ch === attrBoundary)\n        attrBoundary = \"\";\n    } else if (ch === '\"' || ch === \"'\") {\n      attrBoundary = ch;\n    } else if (ch === closingChar[0]) {\n      if (closingChar[1]) {\n        if (xmlData[index + 1] === closingChar[1]) {\n          return {\n            data: tagExp,\n            index\n          };\n        }\n      } else {\n        return {\n          data: tagExp,\n          index\n        };\n      }\n    } else if (ch === \"\t\") {\n      ch = \" \";\n    }\n    tagExp += ch;\n  }\n}\nfunction findClosingIndex(xmlData, str, i, errMsg) {\n  const closingIndex = xmlData.indexOf(str, i);\n  if (closingIndex === -1) {\n    throw new Error(errMsg);\n  } else {\n    return closingIndex + str.length - 1;\n  }\n}\nfunction readTagExp(xmlData, i, removeNSPrefix, closingChar = \">\") {\n  const result = tagExpWithClosingIndex(xmlData, i + 1, closingChar);\n  if (!result)\n    return;\n  let tagExp = result.data;\n  const closeIndex = result.index;\n  const separatorIndex = tagExp.search(/\\s/);\n  let tagName = tagExp;\n  let attrExpPresent = true;\n  if (separatorIndex !== -1) {\n    tagName = tagExp.substring(0, separatorIndex);\n    tagExp = tagExp.substring(separatorIndex + 1).trimStart();\n  }\n  const rawTagName = tagName;\n  if (removeNSPrefix) {\n    const colonIndex = tagName.indexOf(\":\");\n    if (colonIndex !== -1) {\n      tagName = tagName.substr(colonIndex + 1);\n      attrExpPresent = tagName !== result.data.substr(colonIndex + 1);\n    }\n  }\n  return {\n    tagName,\n    tagExp,\n    closeIndex,\n    attrExpPresent,\n    rawTagName\n  };\n}\nfunction readStopNodeData(xmlData, tagName, i) {\n  const startIndex = i;\n  let openTagCount = 1;\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] === \"<\") {\n      if (xmlData[i + 1] === \"/\") {\n        const closeIndex = findClosingIndex(xmlData, \">\", i, `${tagName} is not closed`);\n        let closeTagName = xmlData.substring(i + 2, closeIndex).trim();\n        if (closeTagName === tagName) {\n          openTagCount--;\n          if (openTagCount === 0) {\n            return {\n              tagContent: xmlData.substring(startIndex, i),\n              i: closeIndex\n            };\n          }\n        }\n        i = closeIndex;\n      } else if (xmlData[i + 1] === \"?\") {\n        const closeIndex = findClosingIndex(xmlData, \"?>\", i + 1, \"StopNode is not closed.\");\n        i = closeIndex;\n      } else if (xmlData.substr(i + 1, 3) === \"!--\") {\n        const closeIndex = findClosingIndex(xmlData, \"-->\", i + 3, \"StopNode is not closed.\");\n        i = closeIndex;\n      } else if (xmlData.substr(i + 1, 2) === \"![\") {\n        const closeIndex = findClosingIndex(xmlData, \"]]>\", i, \"StopNode is not closed.\") - 2;\n        i = closeIndex;\n      } else {\n        const tagData = readTagExp(xmlData, i, \">\");\n        if (tagData) {\n          const openTagName = tagData && tagData.tagName;\n          if (openTagName === tagName && tagData.tagExp[tagData.tagExp.length - 1] !== \"/\") {\n            openTagCount++;\n          }\n          i = tagData.closeIndex;\n        }\n      }\n    }\n  }\n}\nfunction parseValue(val2, shouldParse, options) {\n  if (shouldParse && typeof val2 === \"string\") {\n    const newval = val2.trim();\n    if (newval === \"true\")\n      return true;\n    else if (newval === \"false\")\n      return false;\n    else\n      return toNumber(val2, options);\n  } else {\n    if (util.isExist(val2)) {\n      return val2;\n    } else {\n      return \"\";\n    }\n  }\n}\nvar OrderedObjParser_1 = OrderedObjParser$1;\nvar node2json = {};\nfunction prettify$1(node, options) {\n  return compress(node, options);\n}\nfunction compress(arr, options, jPath) {\n  let text;\n  const compressedObj = {};\n  for (let i = 0; i < arr.length; i++) {\n    const tagObj = arr[i];\n    const property = propName$1(tagObj);\n    let newJpath = \"\";\n    if (jPath === void 0)\n      newJpath = property;\n    else\n      newJpath = jPath + \".\" + property;\n    if (property === options.textNodeName) {\n      if (text === void 0)\n        text = tagObj[property];\n      else\n        text += \"\" + tagObj[property];\n    } else if (property === void 0) {\n      continue;\n    } else if (tagObj[property]) {\n      let val2 = compress(tagObj[property], options, newJpath);\n      const isLeaf = isLeafTag(val2, options);\n      if (tagObj[\":@\"]) {\n        assignAttributes(val2, tagObj[\":@\"], newJpath, options);\n      } else if (Object.keys(val2).length === 1 && val2[options.textNodeName] !== void 0 && !options.alwaysCreateTextNode) {\n        val2 = val2[options.textNodeName];\n      } else if (Object.keys(val2).length === 0) {\n        if (options.alwaysCreateTextNode)\n          val2[options.textNodeName] = \"\";\n        else\n          val2 = \"\";\n      }\n      if (compressedObj[property] !== void 0 && compressedObj.hasOwnProperty(property)) {\n        if (!Array.isArray(compressedObj[property])) {\n          compressedObj[property] = [compressedObj[property]];\n        }\n        compressedObj[property].push(val2);\n      } else {\n        if (options.isArray(property, newJpath, isLeaf)) {\n          compressedObj[property] = [val2];\n        } else {\n          compressedObj[property] = val2;\n        }\n      }\n    }\n  }\n  if (typeof text === \"string\") {\n    if (text.length > 0)\n      compressedObj[options.textNodeName] = text;\n  } else if (text !== void 0)\n    compressedObj[options.textNodeName] = text;\n  return compressedObj;\n}\nfunction propName$1(obj) {\n  const keys = Object.keys(obj);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    if (key !== \":@\")\n      return key;\n  }\n}\nfunction assignAttributes(obj, attrMap, jpath, options) {\n  if (attrMap) {\n    const keys = Object.keys(attrMap);\n    const len = keys.length;\n    for (let i = 0; i < len; i++) {\n      const atrrName = keys[i];\n      if (options.isArray(atrrName, jpath + \".\" + atrrName, true, true)) {\n        obj[atrrName] = [attrMap[atrrName]];\n      } else {\n        obj[atrrName] = attrMap[atrrName];\n      }\n    }\n  }\n}\nfunction isLeafTag(obj, options) {\n  const { textNodeName } = options;\n  const propCount = Object.keys(obj).length;\n  if (propCount === 0) {\n    return true;\n  }\n  if (propCount === 1 && (obj[textNodeName] || typeof obj[textNodeName] === \"boolean\" || obj[textNodeName] === 0)) {\n    return true;\n  }\n  return false;\n}\nnode2json.prettify = prettify$1;\nconst { buildOptions } = OptionsBuilder;\nconst OrderedObjParser2 = OrderedObjParser_1;\nconst { prettify } = node2json;\nconst validator$1 = validator$2;\nlet XMLParser$1 = class XMLParser {\n  constructor(options) {\n    this.externalEntities = {};\n    this.options = buildOptions(options);\n  }\n  /**\n   * Parse XML dats to JS object \n   * @param {string|Buffer} xmlData \n   * @param {boolean|Object} validationOption \n   */\n  parse(xmlData, validationOption) {\n    if (typeof xmlData === \"string\")\n      ;\n    else if (xmlData.toString) {\n      xmlData = xmlData.toString();\n    } else {\n      throw new Error(\"XML data is accepted in String or Bytes[] form.\");\n    }\n    if (validationOption) {\n      if (validationOption === true)\n        validationOption = {};\n      const result = validator$1.validate(xmlData, validationOption);\n      if (result !== true) {\n        throw Error(`${result.err.msg}:${result.err.line}:${result.err.col}`);\n      }\n    }\n    const orderedObjParser = new OrderedObjParser2(this.options);\n    orderedObjParser.addExternalEntities(this.externalEntities);\n    const orderedResult = orderedObjParser.parseXml(xmlData);\n    if (this.options.preserveOrder || orderedResult === void 0)\n      return orderedResult;\n    else\n      return prettify(orderedResult, this.options);\n  }\n  /**\n   * Add Entity which is not by default supported by this library\n   * @param {string} key \n   * @param {string} value \n   */\n  addEntity(key, value) {\n    if (value.indexOf(\"&\") !== -1) {\n      throw new Error(\"Entity value can't have '&'\");\n    } else if (key.indexOf(\"&\") !== -1 || key.indexOf(\";\") !== -1) {\n      throw new Error(\"An entity must be set without '&' and ';'. Eg. use '#xD' for '&#xD;'\");\n    } else if (value === \"&\") {\n      throw new Error(\"An entity with value '&' is not permitted\");\n    } else {\n      this.externalEntities[key] = value;\n    }\n  }\n};\nvar XMLParser_1 = XMLParser$1;\nconst EOL = \"\\n\";\nfunction toXml(jArray, options) {\n  let indentation = \"\";\n  if (options.format && options.indentBy.length > 0) {\n    indentation = EOL;\n  }\n  return arrToStr(jArray, options, \"\", indentation);\n}\nfunction arrToStr(arr, options, jPath, indentation) {\n  let xmlStr = \"\";\n  let isPreviousElementTag = false;\n  for (let i = 0; i < arr.length; i++) {\n    const tagObj = arr[i];\n    const tagName = propName(tagObj);\n    if (tagName === void 0)\n      continue;\n    let newJPath = \"\";\n    if (jPath.length === 0)\n      newJPath = tagName;\n    else\n      newJPath = `${jPath}.${tagName}`;\n    if (tagName === options.textNodeName) {\n      let tagText = tagObj[tagName];\n      if (!isStopNode(newJPath, options)) {\n        tagText = options.tagValueProcessor(tagName, tagText);\n        tagText = replaceEntitiesValue(tagText, options);\n      }\n      if (isPreviousElementTag) {\n        xmlStr += indentation;\n      }\n      xmlStr += tagText;\n      isPreviousElementTag = false;\n      continue;\n    } else if (tagName === options.cdataPropName) {\n      if (isPreviousElementTag) {\n        xmlStr += indentation;\n      }\n      xmlStr += `<![CDATA[${tagObj[tagName][0][options.textNodeName]}]]>`;\n      isPreviousElementTag = false;\n      continue;\n    } else if (tagName === options.commentPropName) {\n      xmlStr += indentation + `<!--${tagObj[tagName][0][options.textNodeName]}-->`;\n      isPreviousElementTag = true;\n      continue;\n    } else if (tagName[0] === \"?\") {\n      const attStr2 = attr_to_str(tagObj[\":@\"], options);\n      const tempInd = tagName === \"?xml\" ? \"\" : indentation;\n      let piTextNodeName = tagObj[tagName][0][options.textNodeName];\n      piTextNodeName = piTextNodeName.length !== 0 ? \" \" + piTextNodeName : \"\";\n      xmlStr += tempInd + `<${tagName}${piTextNodeName}${attStr2}?>`;\n      isPreviousElementTag = true;\n      continue;\n    }\n    let newIdentation = indentation;\n    if (newIdentation !== \"\") {\n      newIdentation += options.indentBy;\n    }\n    const attStr = attr_to_str(tagObj[\":@\"], options);\n    const tagStart = indentation + `<${tagName}${attStr}`;\n    const tagValue = arrToStr(tagObj[tagName], options, newJPath, newIdentation);\n    if (options.unpairedTags.indexOf(tagName) !== -1) {\n      if (options.suppressUnpairedNode)\n        xmlStr += tagStart + \">\";\n      else\n        xmlStr += tagStart + \"/>\";\n    } else if ((!tagValue || tagValue.length === 0) && options.suppressEmptyNode) {\n      xmlStr += tagStart + \"/>\";\n    } else if (tagValue && tagValue.endsWith(\">\")) {\n      xmlStr += tagStart + `>${tagValue}${indentation}</${tagName}>`;\n    } else {\n      xmlStr += tagStart + \">\";\n      if (tagValue && indentation !== \"\" && (tagValue.includes(\"/>\") || tagValue.includes(\"</\"))) {\n        xmlStr += indentation + options.indentBy + tagValue + indentation;\n      } else {\n        xmlStr += tagValue;\n      }\n      xmlStr += `</${tagName}>`;\n    }\n    isPreviousElementTag = true;\n  }\n  return xmlStr;\n}\nfunction propName(obj) {\n  const keys = Object.keys(obj);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    if (!obj.hasOwnProperty(key))\n      continue;\n    if (key !== \":@\")\n      return key;\n  }\n}\nfunction attr_to_str(attrMap, options) {\n  let attrStr = \"\";\n  if (attrMap && !options.ignoreAttributes) {\n    for (let attr in attrMap) {\n      if (!attrMap.hasOwnProperty(attr))\n        continue;\n      let attrVal = options.attributeValueProcessor(attr, attrMap[attr]);\n      attrVal = replaceEntitiesValue(attrVal, options);\n      if (attrVal === true && options.suppressBooleanAttributes) {\n        attrStr += ` ${attr.substr(options.attributeNamePrefix.length)}`;\n      } else {\n        attrStr += ` ${attr.substr(options.attributeNamePrefix.length)}=\"${attrVal}\"`;\n      }\n    }\n  }\n  return attrStr;\n}\nfunction isStopNode(jPath, options) {\n  jPath = jPath.substr(0, jPath.length - options.textNodeName.length - 1);\n  let tagName = jPath.substr(jPath.lastIndexOf(\".\") + 1);\n  for (let index in options.stopNodes) {\n    if (options.stopNodes[index] === jPath || options.stopNodes[index] === \"*.\" + tagName)\n      return true;\n  }\n  return false;\n}\nfunction replaceEntitiesValue(textValue, options) {\n  if (textValue && textValue.length > 0 && options.processEntities) {\n    for (let i = 0; i < options.entities.length; i++) {\n      const entity = options.entities[i];\n      textValue = textValue.replace(entity.regex, entity.val);\n    }\n  }\n  return textValue;\n}\nvar orderedJs2Xml = toXml;\nconst buildFromOrderedJs = orderedJs2Xml;\nconst defaultOptions = {\n  attributeNamePrefix: \"@_\",\n  attributesGroupName: false,\n  textNodeName: \"#text\",\n  ignoreAttributes: true,\n  cdataPropName: false,\n  format: false,\n  indentBy: \"  \",\n  suppressEmptyNode: false,\n  suppressUnpairedNode: true,\n  suppressBooleanAttributes: true,\n  tagValueProcessor: function(key, a) {\n    return a;\n  },\n  attributeValueProcessor: function(attrName, a) {\n    return a;\n  },\n  preserveOrder: false,\n  commentPropName: false,\n  unpairedTags: [],\n  entities: [\n    { regex: new RegExp(\"&\", \"g\"), val: \"&amp;\" },\n    //it must be on top\n    { regex: new RegExp(\">\", \"g\"), val: \"&gt;\" },\n    { regex: new RegExp(\"<\", \"g\"), val: \"&lt;\" },\n    { regex: new RegExp(\"'\", \"g\"), val: \"&apos;\" },\n    { regex: new RegExp('\"', \"g\"), val: \"&quot;\" }\n  ],\n  processEntities: true,\n  stopNodes: [],\n  // transformTagName: false,\n  // transformAttributeName: false,\n  oneListGroup: false\n};\nfunction Builder(options) {\n  this.options = Object.assign({}, defaultOptions, options);\n  if (this.options.ignoreAttributes || this.options.attributesGroupName) {\n    this.isAttribute = function() {\n      return false;\n    };\n  } else {\n    this.attrPrefixLen = this.options.attributeNamePrefix.length;\n    this.isAttribute = isAttribute;\n  }\n  this.processTextOrObjNode = processTextOrObjNode;\n  if (this.options.format) {\n    this.indentate = indentate;\n    this.tagEndChar = \">\\n\";\n    this.newLine = \"\\n\";\n  } else {\n    this.indentate = function() {\n      return \"\";\n    };\n    this.tagEndChar = \">\";\n    this.newLine = \"\";\n  }\n}\nBuilder.prototype.build = function(jObj) {\n  if (this.options.preserveOrder) {\n    return buildFromOrderedJs(jObj, this.options);\n  } else {\n    if (Array.isArray(jObj) && this.options.arrayNodeName && this.options.arrayNodeName.length > 1) {\n      jObj = {\n        [this.options.arrayNodeName]: jObj\n      };\n    }\n    return this.j2x(jObj, 0).val;\n  }\n};\nBuilder.prototype.j2x = function(jObj, level) {\n  let attrStr = \"\";\n  let val2 = \"\";\n  for (let key in jObj) {\n    if (!Object.prototype.hasOwnProperty.call(jObj, key))\n      continue;\n    if (typeof jObj[key] === \"undefined\") {\n      if (this.isAttribute(key)) {\n        val2 += \"\";\n      }\n    } else if (jObj[key] === null) {\n      if (this.isAttribute(key)) {\n        val2 += \"\";\n      } else if (key[0] === \"?\") {\n        val2 += this.indentate(level) + \"<\" + key + \"?\" + this.tagEndChar;\n      } else {\n        val2 += this.indentate(level) + \"<\" + key + \"/\" + this.tagEndChar;\n      }\n    } else if (jObj[key] instanceof Date) {\n      val2 += this.buildTextValNode(jObj[key], key, \"\", level);\n    } else if (typeof jObj[key] !== \"object\") {\n      const attr = this.isAttribute(key);\n      if (attr) {\n        attrStr += this.buildAttrPairStr(attr, \"\" + jObj[key]);\n      } else {\n        if (key === this.options.textNodeName) {\n          let newval = this.options.tagValueProcessor(key, \"\" + jObj[key]);\n          val2 += this.replaceEntitiesValue(newval);\n        } else {\n          val2 += this.buildTextValNode(jObj[key], key, \"\", level);\n        }\n      }\n    } else if (Array.isArray(jObj[key])) {\n      const arrLen = jObj[key].length;\n      let listTagVal = \"\";\n      let listTagAttr = \"\";\n      for (let j = 0; j < arrLen; j++) {\n        const item = jObj[key][j];\n        if (typeof item === \"undefined\")\n          ;\n        else if (item === null) {\n          if (key[0] === \"?\")\n            val2 += this.indentate(level) + \"<\" + key + \"?\" + this.tagEndChar;\n          else\n            val2 += this.indentate(level) + \"<\" + key + \"/\" + this.tagEndChar;\n        } else if (typeof item === \"object\") {\n          if (this.options.oneListGroup) {\n            const result = this.j2x(item, level + 1);\n            listTagVal += result.val;\n            if (this.options.attributesGroupName && item.hasOwnProperty(this.options.attributesGroupName)) {\n              listTagAttr += result.attrStr;\n            }\n          } else {\n            listTagVal += this.processTextOrObjNode(item, key, level);\n          }\n        } else {\n          if (this.options.oneListGroup) {\n            let textValue = this.options.tagValueProcessor(key, item);\n            textValue = this.replaceEntitiesValue(textValue);\n            listTagVal += textValue;\n          } else {\n            listTagVal += this.buildTextValNode(item, key, \"\", level);\n          }\n        }\n      }\n      if (this.options.oneListGroup) {\n        listTagVal = this.buildObjectNode(listTagVal, key, listTagAttr, level);\n      }\n      val2 += listTagVal;\n    } else {\n      if (this.options.attributesGroupName && key === this.options.attributesGroupName) {\n        const Ks = Object.keys(jObj[key]);\n        const L = Ks.length;\n        for (let j = 0; j < L; j++) {\n          attrStr += this.buildAttrPairStr(Ks[j], \"\" + jObj[key][Ks[j]]);\n        }\n      } else {\n        val2 += this.processTextOrObjNode(jObj[key], key, level);\n      }\n    }\n  }\n  return { attrStr, val: val2 };\n};\nBuilder.prototype.buildAttrPairStr = function(attrName, val2) {\n  val2 = this.options.attributeValueProcessor(attrName, \"\" + val2);\n  val2 = this.replaceEntitiesValue(val2);\n  if (this.options.suppressBooleanAttributes && val2 === \"true\") {\n    return \" \" + attrName;\n  } else\n    return \" \" + attrName + '=\"' + val2 + '\"';\n};\nfunction processTextOrObjNode(object, key, level) {\n  const result = this.j2x(object, level + 1);\n  if (object[this.options.textNodeName] !== void 0 && Object.keys(object).length === 1) {\n    return this.buildTextValNode(object[this.options.textNodeName], key, result.attrStr, level);\n  } else {\n    return this.buildObjectNode(result.val, key, result.attrStr, level);\n  }\n}\nBuilder.prototype.buildObjectNode = function(val2, key, attrStr, level) {\n  if (val2 === \"\") {\n    if (key[0] === \"?\")\n      return this.indentate(level) + \"<\" + key + attrStr + \"?\" + this.tagEndChar;\n    else {\n      return this.indentate(level) + \"<\" + key + attrStr + this.closeTag(key) + this.tagEndChar;\n    }\n  } else {\n    let tagEndExp = \"</\" + key + this.tagEndChar;\n    let piClosingChar = \"\";\n    if (key[0] === \"?\") {\n      piClosingChar = \"?\";\n      tagEndExp = \"\";\n    }\n    if ((attrStr || attrStr === \"\") && val2.indexOf(\"<\") === -1) {\n      return this.indentate(level) + \"<\" + key + attrStr + piClosingChar + \">\" + val2 + tagEndExp;\n    } else if (this.options.commentPropName !== false && key === this.options.commentPropName && piClosingChar.length === 0) {\n      return this.indentate(level) + `<!--${val2}-->` + this.newLine;\n    } else {\n      return this.indentate(level) + \"<\" + key + attrStr + piClosingChar + this.tagEndChar + val2 + this.indentate(level) + tagEndExp;\n    }\n  }\n};\nBuilder.prototype.closeTag = function(key) {\n  let closeTag = \"\";\n  if (this.options.unpairedTags.indexOf(key) !== -1) {\n    if (!this.options.suppressUnpairedNode)\n      closeTag = \"/\";\n  } else if (this.options.suppressEmptyNode) {\n    closeTag = \"/\";\n  } else {\n    closeTag = `></${key}`;\n  }\n  return closeTag;\n};\nBuilder.prototype.buildTextValNode = function(val2, key, attrStr, level) {\n  if (this.options.cdataPropName !== false && key === this.options.cdataPropName) {\n    return this.indentate(level) + `<![CDATA[${val2}]]>` + this.newLine;\n  } else if (this.options.commentPropName !== false && key === this.options.commentPropName) {\n    return this.indentate(level) + `<!--${val2}-->` + this.newLine;\n  } else if (key[0] === \"?\") {\n    return this.indentate(level) + \"<\" + key + attrStr + \"?\" + this.tagEndChar;\n  } else {\n    let textValue = this.options.tagValueProcessor(key, val2);\n    textValue = this.replaceEntitiesValue(textValue);\n    if (textValue === \"\") {\n      return this.indentate(level) + \"<\" + key + attrStr + this.closeTag(key) + this.tagEndChar;\n    } else {\n      return this.indentate(level) + \"<\" + key + attrStr + \">\" + textValue + \"</\" + key + this.tagEndChar;\n    }\n  }\n};\nBuilder.prototype.replaceEntitiesValue = function(textValue) {\n  if (textValue && textValue.length > 0 && this.options.processEntities) {\n    for (let i = 0; i < this.options.entities.length; i++) {\n      const entity = this.options.entities[i];\n      textValue = textValue.replace(entity.regex, entity.val);\n    }\n  }\n  return textValue;\n};\nfunction indentate(level) {\n  return this.options.indentBy.repeat(level);\n}\nfunction isAttribute(name) {\n  if (name.startsWith(this.options.attributeNamePrefix) && name !== this.options.textNodeName) {\n    return name.substr(this.attrPrefixLen);\n  } else {\n    return false;\n  }\n}\nvar json2xml = Builder;\nconst validator = validator$2;\nconst XMLParser2 = XMLParser_1;\nconst XMLBuilder = json2xml;\nvar fxp = {\n  XMLParser: XMLParser2,\n  XMLValidator: validator,\n  XMLBuilder\n};\nclass XML {\n}\n__publicField(XML, \"parser\", new fxp.XMLParser({\n  allowBooleanAttributes: true,\n  attributeNamePrefix: \"\",\n  ignoreAttributes: false,\n  ignoreDeclaration: true,\n  ignorePiTags: true,\n  numberParseOptions: { leadingZeros: true, hex: true },\n  parseAttributeValue: true,\n  preserveOrder: false,\n  processEntities: false,\n  removeNSPrefix: true,\n  trimValues: true\n}));\n__publicField(XML, \"builder\", new fxp.XMLBuilder({\n  attributeNamePrefix: \"$\",\n  ignoreAttributes: false,\n  suppressBooleanAttributes: false\n}));\nclass VertexPicker extends Component {\n  constructor(components, config) {\n    super(components);\n    /** {@link Disposable.onDisposed} */\n    __publicField(this, \"onDisposed\", new Event());\n    /**\n     * An event that is triggered when a vertex is found.\n     * The event passes a THREE.Vector3 representing the position of the found vertex.\n     */\n    __publicField(this, \"onVertexFound\", new Event());\n    /**\n     * An event that is triggered when a vertex is lost.\n     * The event passes a THREE.Vector3 representing the position of the lost vertex.\n     */\n    __publicField(this, \"onVertexLost\", new Event());\n    /**\n     * An event that is triggered when the picker is enabled or disabled\n     */\n    __publicField(this, \"onEnabled\", new Event());\n    /**\n     * A reference to the Components instance associated with this VertexPicker.\n     */\n    __publicField(this, \"components\");\n    /**\n     * A reference to the working plane used for vertex picking.\n     * This plane is used to determine which vertices are considered valid for picking.\n     * If this value is null, all vertices are considered valid.\n     */\n    __publicField(this, \"workingPlane\", null);\n    __publicField(this, \"_pickedPoint\", null);\n    __publicField(this, \"_config\");\n    __publicField(this, \"_enabled\", false);\n    this.components = components;\n    this.config = {\n      snapDistance: 0.25,\n      showOnlyVertex: false,\n      ...config\n    };\n    this.enabled = false;\n  }\n  /**\n   * Sets the enabled state of the VertexPicker.\n   * When enabled, the VertexPicker will actively search for vertices in the 3D scene.\n   * When disabled, the VertexPicker will stop searching for vertices and reset the picked point.\n   *\n   * @param value - The new enabled state.\n   */\n  set enabled(value) {\n    this._enabled = value;\n    if (!value) {\n      this._pickedPoint = null;\n    }\n    this.onEnabled.trigger(value);\n  }\n  /**\n   * Gets the current enabled state of the VertexPicker.\n   *\n   * @returns The current enabled state.\n   */\n  get enabled() {\n    return this._enabled;\n  }\n  /**\n   * Sets the configuration for the VertexPicker component.\n   *\n   * @param value - A Partial object containing the configuration properties to update.\n   * The properties not provided in the value object will retain their current values.\n   *\n   * @example\n   * ```typescript\n   * vertexPicker.config = {\n   *   snapDistance: 0.5,\n   *   showOnlyVertex: true,\n   * };\n   * ```\n   */\n  set config(value) {\n    this._config = { ...this._config, ...value };\n  }\n  /**\n   * Gets the current configuration for the VertexPicker component.\n   *\n   * @returns A copy of the current VertexPickerConfig object.\n   *\n   * @example\n   * ```typescript\n   * const currentConfig = vertexPicker.config;\n   * console.log(currentConfig.snapDistance); // Output: 0.25\n   * ```\n   */\n  get config() {\n    return this._config;\n  }\n  /** {@link Disposable.dispose} */\n  dispose() {\n    this.onVertexFound.reset();\n    this.onVertexLost.reset();\n    this.components = null;\n    this.onDisposed.trigger();\n    this.onDisposed.reset();\n  }\n  /**\n   * Performs the vertex picking operation based on the current state of the VertexPicker.\n   *\n   * @param world - The World instance to use for raycasting.\n   *\n   * @returns The current picked point, or null if no point is picked.\n   *\n   * @remarks\n   * This method checks if the VertexPicker is enabled. If not, it returns the current picked point.\n   * If enabled, it performs raycasting to find the closest intersecting object.\n   * It then determines the closest vertex or point on the face, based on the configuration settings.\n   * If the picked point is on the working plane (if defined), it triggers the `onVertexFound` event and updates the `pickedPoint`.\n   * If the picked point is not on the working plane, it resets the `pickedPoint`.\n   * If no intersecting object is found, it triggers the `onVertexLost` event and resets the `pickedPoint`.\n   */\n  async get(world) {\n    if (!this.enabled)\n      return this._pickedPoint;\n    const casters = this.components.get(Raycasters);\n    const caster = casters.get(world);\n    const intersects = await caster.castRay();\n    if (!intersects) {\n      if (this._pickedPoint !== null) {\n        this.onVertexLost.trigger();\n        this._pickedPoint = null;\n      }\n      return this._pickedPoint;\n    }\n    const point = intersects.point;\n    if (this._pickedPoint === null || !this._pickedPoint.equals(point)) {\n      this._pickedPoint = point.clone();\n      this.onVertexFound.trigger(this._pickedPoint);\n    }\n    return this._pickedPoint;\n  }\n  // private getClosestVertex(intersects: THREE.Intersection) {\n  //   let closestVertex = new THREE.Vector3();\n  //   let vertexFound = false;\n  //   let closestDistance = Number.MAX_SAFE_INTEGER;\n  //   const vertices = this.getVertices(intersects);\n  //   if (vertices === null) {\n  //     return null;\n  //   }\n  //   for (const vertex of vertices) {\n  //     if (!vertex) {\n  //       continue;\n  //     }\n  //     const distance = intersects.point.distanceTo(vertex);\n  //     if (distance > closestDistance || distance > this._config.snapDistance) {\n  //       continue;\n  //     }\n  //     vertexFound = true;\n  //     closestVertex = vertex;\n  //     closestDistance = intersects.point.distanceTo(vertex);\n  //   }\n  //   if (vertexFound) {\n  //     return closestVertex;\n  //   }\n  //   return this.config.showOnlyVertex ? null : intersects.point;\n  // }\n  // private getVertices(intersects: THREE.Intersection) {\n  //   const mesh = intersects.object as THREE.Mesh | THREE.InstancedMesh;\n  //   if (!intersects.face || !mesh) return null;\n  //   const geom = mesh.geometry;\n  //   const instanceTransform = new THREE.Matrix4();\n  //   const { instanceId } = intersects;\n  //   const instanceFound = instanceId !== undefined;\n  //   const isInstance = mesh instanceof THREE.InstancedMesh;\n  //   if (isInstance && instanceFound) {\n  //     mesh.getMatrixAt(instanceId, instanceTransform);\n  //   }\n  //   return [\n  //     this.getVertex(intersects.face.a, geom),\n  //     this.getVertex(intersects.face.b, geom),\n  //     this.getVertex(intersects.face.c, geom),\n  //   ].map((vertex) => {\n  //     if (vertex) {\n  //       if (isInstance && instanceFound) {\n  //         vertex.applyMatrix4(instanceTransform);\n  //       }\n  //       vertex.applyMatrix4(mesh.matrixWorld);\n  //     }\n  //     return vertex;\n  //   });\n  // }\n  // private getVertex(index: number, geom: THREE.BufferGeometry) {\n  //   if (index === undefined) return null;\n  //   const vertices = geom.attributes.position as THREE.BufferAttribute;\n  //   return new THREE.Vector3(\n  //     vertices.getX(index),\n  //     vertices.getY(index),\n  //     vertices.getZ(index),\n  //   );\n  // }\n}\nclass ModelIdMapUtils {\n  /**\n   * Creates a new ModelIdMap from the union of multiple ModelIdMaps.\n   * @param maps - An array of ModelIdMaps to join.\n   * @returns A new ModelIdMap containing all model identifiers and localIds from all input maps.\n   */\n  static join(maps) {\n    const result = {};\n    for (const map of maps) {\n      for (const modelID in map) {\n        if (!result[modelID]) {\n          result[modelID] = new Set(map[modelID]);\n        } else {\n          for (const id of map[modelID]) {\n            result[modelID].add(id);\n          }\n        }\n      }\n    }\n    return result;\n  }\n  /**\n   * Creates a new ModelIdMap from the intersection of multiple ModelIdMaps.\n   * @param maps - An array of ModelIdMaps.\n   * @returns A new ModelIdMap containing only model identifiers and localIds present in all input maps.\n   */\n  static intersect(maps) {\n    if (maps.length === 0) {\n      return {};\n    }\n    let result = ModelIdMapUtils.clone(maps[0]);\n    for (let i = 1; i < maps.length; i++) {\n      const currentMap = maps[i];\n      const newResult = {};\n      for (const modelID in result) {\n        if (currentMap[modelID]) {\n          const intersection = /* @__PURE__ */ new Set();\n          for (const id of result[modelID]) {\n            if (currentMap[modelID].has(id)) {\n              intersection.add(id);\n            }\n          }\n          if (intersection.size > 0) {\n            newResult[modelID] = intersection;\n          }\n        }\n      }\n      result = newResult;\n    }\n    return result;\n  }\n  /**\n   * Creates a deep clone of a ModelIdMap.\n   * @param source - The ModelIdMap to clone.\n   * @returns A new ModelIdMap with the same model identifiers and localIds as the original.\n   */\n  static clone(source) {\n    const clone = {};\n    for (const modelID in source) {\n      clone[modelID] = new Set(source[modelID]);\n    }\n    return clone;\n  }\n  /**\n   * Remove all entries from one ModelIdMap to another.\n   * @param target - The ModelIdMap to subtract from.\n   * @param source - The ModelIdMap to subtract.\n   */\n  static remove(target, source, clone = false) {\n    if (clone)\n      target = ModelIdMapUtils.clone(target);\n    for (const modelID in source) {\n      if (target[modelID]) {\n        for (const id of source[modelID]) {\n          target[modelID].delete(id);\n        }\n        if (target[modelID].size === 0) {\n          delete target[modelID];\n        }\n      }\n    }\n  }\n  /**\n   * Adds all entries from one ModelIdMap to another.\n   * @param target - The ModelIdMap to add to.\n   * @param source - The ModelIdMap to add from.\n   */\n  static add(target, source, clone = false) {\n    if (clone)\n      target = ModelIdMapUtils.clone(target);\n    for (const modelID in source) {\n      if (!target[modelID]) {\n        target[modelID] = new Set(source[modelID]);\n      } else {\n        for (const id of source[modelID]) {\n          target[modelID].add(id);\n        }\n      }\n    }\n  }\n  static append(target, modelId, ...localIds) {\n    let values = target[modelId];\n    if (!values) {\n      values = /* @__PURE__ */ new Set();\n      target[modelId] = values;\n    }\n    for (const localId of localIds) {\n      values.add(localId);\n    }\n  }\n  /**\n   * Checks if two ModelIdMaps are equal.\n   * @param a - The first ModelIdMap.\n   * @param b - The second ModelIdMap.\n   * @returns True if the ModelIdMaps are equal, false otherwise.\n   */\n  static isEqual(a, b) {\n    const aKeys = Object.keys(a);\n    const bKeys = Object.keys(b);\n    if (aKeys.length !== bKeys.length) {\n      return false;\n    }\n    for (const modelID of aKeys) {\n      if (!b[modelID]) {\n        return false;\n      }\n      if (a[modelID].size !== b[modelID].size) {\n        return false;\n      }\n      for (const id of a[modelID]) {\n        if (!b[modelID].has(id)) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n  /**\n   * Checks if a ModelIdMap is empty.\n   * @param map - The ModelIdMap to check.\n   * @returns True if the ModelIdMap is empty, false otherwise.\n   */\n  static isEmpty(map) {\n    const totalItems = Object.values(map).reduce(\n      (sum, set) => sum + set.size,\n      0\n    );\n    return totalItems === 0;\n  }\n  /**\n   * Converts a ModelIdMap into a plain JavaScript object with array values.\n   * @param map - The ModelIdMap to convert.\n   * @returns A plain JavaScript object where each key (model ID) maps to an array of local IDs.\n   */\n  static toRaw(map) {\n    const result = {};\n    for (const modelID in map) {\n      result[modelID] = Array.from(map[modelID]);\n    }\n    return result;\n  }\n  /**\n   * Creates a ModelIdMap from a plain JavaScript object with array values.\n   * @param raw - A plain JavaScript object where each key (model ID) maps to an array of local IDs.\n   * @returns A ModelIdMap.\n   */\n  static fromRaw(raw) {\n    const result = {};\n    for (const modelID in raw) {\n      result[modelID] = new Set(raw[modelID]);\n    }\n    return result;\n  }\n}\nclass DataMap extends Map {\n  /**\n   * Constructs a new DataMap instance.\n   *\n   * @param iterable - An iterable object containing key-value pairs to populate the map.\n   */\n  constructor(iterable) {\n    super(iterable);\n    /**\n     * An event triggered when a new item is set in the map.\n     */\n    __publicField(this, \"onItemSet\", new Event());\n    /**\n     * An event triggered when an existing item in the map is updated.\n     */\n    __publicField(this, \"onItemUpdated\", new Event());\n    /**\n     * An event triggered when an item is deleted from the map.\n     */\n    __publicField(this, \"onItemDeleted\", new Event());\n    /**\n     * An event triggered when the map is cleared.\n     */\n    __publicField(this, \"onCleared\", new Event());\n    /**\n     * A function that acts as a guard for adding items to the set.\n     * It determines whether a given value should be allowed to be added to the set.\n     *\n     * @param key - The key of the entry to be checked against the guard.\n     * @param value - The value of the entry to be checked against the guard.\n     * @returns A boolean indicating whether the value should be allowed to be added to the set.\n     *          By default, this function always returns true, allowing all values to be added.\n     *          You can override this behavior by providing a custom implementation.\n     */\n    __publicField(this, \"guard\", () => true);\n  }\n  /**\n   * Clears the map and triggers the onCleared event.\n   */\n  clear() {\n    super.clear();\n    this.onCleared.trigger();\n  }\n  /**\n   * Sets the value for the specified key in the map.\n   * If the item is new, then onItemSet is triggered.\n   * If the item is already in the map, then onItemUpdated is triggered.\n   *\n   * @param key - The key of the item to set.\n   * @param value - The value of the item to set.\n   * @returns The DataMap instance.\n   */\n  set(key, value) {\n    const triggerUpdate = this.has(key);\n    const guard = this.guard ?? (() => true);\n    const isValid = guard(key, value);\n    if (!isValid)\n      return this;\n    const result = super.set(key, value);\n    if (triggerUpdate) {\n      if (!this.onItemUpdated) {\n        this.onItemUpdated = new Event();\n      }\n      this.onItemUpdated.trigger({ key, value });\n    } else {\n      if (!this.onItemSet) {\n        this.onItemSet = new Event();\n      }\n      this.onItemSet.trigger({ key, value });\n    }\n    return result;\n  }\n  /**\n   * Sets the value in the map with a randomly generated uuidv4 key.\n   * Only use this if your keys are strings\n   *\n   * @param value - The value of the item to set.\n   * @returns The key used.\n   */\n  add(value) {\n    const key = UUID.create();\n    this.set(key, value);\n    return key;\n  }\n  /**\n   * Deletes the specified key from the map and triggers the onItemDeleted event if the key was found.\n   *\n   * @param key - The key of the item to delete.\n   * @returns True if the key was found and deleted; otherwise, false.\n   */\n  delete(key) {\n    const deleted = super.delete(key);\n    if (deleted)\n      this.onItemDeleted.trigger(key);\n    return deleted;\n  }\n  /**\n   * Clears the map and resets the events.\n   */\n  dispose() {\n    this.clear();\n    this.onItemSet.reset();\n    this.onItemDeleted.reset();\n    this.onCleared.reset();\n  }\n}\nclass ControlsUtils {\n  static isEntry(item) {\n    const types = /* @__PURE__ */ new Set([\n      \"Boolean\",\n      \"Color\",\n      \"Text\",\n      \"Number\",\n      \"Select\",\n      \"Vector3\",\n      \"TextSet\",\n      \"None\"\n    ]);\n    return types.has(item.type);\n  }\n  static copySchema(schema, copy = {}) {\n    for (const name in schema) {\n      const entry = schema[name];\n      if (this.isEntry(entry)) {\n        copy[name] = this.copyEntry(entry);\n      } else {\n        copy[name] = {};\n        this.copySchema(entry, copy[name]);\n      }\n    }\n    return copy;\n  }\n  static copyEntry(controlEntry) {\n    if (controlEntry.type === \"Boolean\") {\n      const entry = controlEntry;\n      return {\n        type: entry.type,\n        value: entry.value\n      };\n    }\n    if (controlEntry.type === \"Color\") {\n      const entry = controlEntry;\n      return {\n        type: entry.type,\n        value: entry.value.clone()\n      };\n    }\n    if (controlEntry.type === \"Text\") {\n      const entry = controlEntry;\n      return {\n        type: entry.type,\n        value: entry.value\n      };\n    }\n    if (controlEntry.type === \"Number\") {\n      const entry = controlEntry;\n      return {\n        type: entry.type,\n        value: entry.value,\n        min: entry.min,\n        max: entry.max,\n        interpolable: entry.interpolable\n      };\n    }\n    if (controlEntry.type === \"Select\") {\n      const entry = controlEntry;\n      return {\n        type: entry.type,\n        value: entry.value,\n        multiple: entry.multiple,\n        options: new Set(entry.options)\n      };\n    }\n    if (controlEntry.type === \"Vector3\") {\n      const entry = controlEntry;\n      return {\n        type: entry.type,\n        value: entry.value.clone()\n      };\n    }\n    if (controlEntry.type === \"TextSet\") {\n      const entry = controlEntry;\n      return {\n        type: entry.type,\n        value: new Set(entry.value)\n      };\n    }\n    if (controlEntry.type === \"None\") {\n      const entry = controlEntry;\n      return {\n        type: entry.type,\n        value: entry.value\n      };\n    }\n    throw new Error(\"Invalid entry!\");\n  }\n}\nclass EventManager {\n  constructor() {\n    /**\n     * The list of events managed by this instance.\n     */\n    __publicField(this, \"list\", /* @__PURE__ */ new Set());\n  }\n  /**\n   * Adds events to this manager.\n   * @param events the events to add.\n   */\n  add(events) {\n    for (const event of events) {\n      this.list.add(event);\n    }\n  }\n  /**\n   * Removes events from this manager.\n   * @param events the events to remove.\n   */\n  remove(events) {\n    for (const event of events) {\n      this.list.delete(event);\n    }\n  }\n  /**\n   * Sets all the events managed by this instance as enabled or disabled.\n   * @param active whether to turn on or off the events.\n   */\n  set(active) {\n    for (const event of this.list) {\n      event.enabled = active;\n    }\n  }\n  /**\n   * Resets all the events managed by this instance.\n   */\n  reset() {\n    for (const event of this.list) {\n      event.reset();\n    }\n  }\n}\nclass Configurator {\n  constructor(component, components, name, uuid) {\n    __publicField(this, \"_component\");\n    __publicField(this, \"name\");\n    __publicField(this, \"uuid\");\n    this._component = component;\n    this.name = name;\n    this.uuid = uuid ?? UUID.create();\n    const configManager = components.get(ConfigManager);\n    configManager.list.set(this.uuid, this);\n  }\n  get controls() {\n    return ControlsUtils.copySchema(this._config);\n  }\n  set(data) {\n    for (const name in data) {\n      if (name in this) {\n        const key = name;\n        this[key] = data[name].value;\n      }\n    }\n  }\n  export(controls = this._config, exported = {}) {\n    for (const id in controls) {\n      const control = controls[id];\n      const isControl = ControlsUtils.isEntry(control);\n      if (isControl) {\n        if (control.type === \"Color\") {\n          const { r, g, b } = control.value;\n          exported[id] = { ...control, value: { r, g, b } };\n        } else if (control.type === \"Vector3\") {\n          const { x, y, z } = control.value;\n          exported[id] = { ...control, value: { x, y, z } };\n        } else if (control.type === \"TextSet\") {\n          const value = Array.from(control.value);\n          exported[id] = { ...control, value };\n        } else if (control.type === \"Select\") {\n          const options = Array.from(control.options);\n          exported[id] = { ...control, options };\n        } else {\n          exported[id] = { ...control };\n        }\n      } else {\n        exported[id] = {};\n        this.export(control, exported[id]);\n      }\n    }\n    return exported;\n  }\n  import(exported, imported = {}, first = true) {\n    for (const id in exported) {\n      const control = exported[id];\n      const isControl = ControlsUtils.isEntry(control);\n      if (isControl) {\n        if (control.type === \"Color\") {\n          const { r, g, b } = control.value;\n          imported[id] = { ...control, value: new THREE$1.Color(r, g, b) };\n        } else if (control.type === \"Vector3\") {\n          const { x, y, z } = control.value;\n          imported[id] = { ...control, value: new THREE$1.Vector3(x, y, z) };\n        } else if (control.type === \"TextSet\") {\n          imported[id] = { ...control, value: new Set(control.value) };\n        } else if (control.type === \"Select\") {\n          imported[id] = { ...control, options: new Set(control.options) };\n        } else {\n          imported[id] = { ...control };\n        }\n      } else {\n        imported[id] = {};\n        this.import(control, imported[id], false);\n      }\n    }\n    if (first) {\n      this.set(imported);\n    }\n  }\n}\nconst _ConfigManager = class _ConfigManager extends Component {\n  constructor(components) {\n    super(components);\n    /**\n     * The list of all configurations of this app.\n     */\n    __publicField(this, \"list\", new DataMap());\n    /** {@link Component.enabled} */\n    __publicField(this, \"enabled\", true);\n    components.add(_ConfigManager.uuid, this);\n  }\n};\n/**\n * A unique identifier for the component.\n * This UUID is used to register the component within the Components system.\n */\n__publicField(_ConfigManager, \"uuid\", \"b8c764e0-6b24-4e77-9a32-35fa728ee5b4\");\nlet ConfigManager = _ConfigManager;\nclass Mouse {\n  constructor(dom) {\n    __publicField(this, \"_event\");\n    __publicField(this, \"_position\", new THREE$1.Vector2());\n    /** {@link Disposable.onDisposed} */\n    __publicField(this, \"onDisposed\", new Event());\n    __publicField(this, \"updateMouseInfo\", (event) => {\n      this._event = event;\n    });\n    this.dom = dom;\n    this.setupEvents(true);\n  }\n  /**\n   * The real position of the mouse or touch of the Three.js canvas.\n   */\n  get position() {\n    this.updatePosition(false);\n    return this._position.clone();\n  }\n  /**\n   * The raw position of the mouse or touch of the Three.js canvas.\n   */\n  get rawPosition() {\n    this.updatePosition(true);\n    return this._position.clone();\n  }\n  /** {@link Disposable.dispose} */\n  dispose() {\n    this.setupEvents(false);\n    this.onDisposed.trigger();\n    this.onDisposed.reset();\n  }\n  updatePosition(raw) {\n    if (this._event) {\n      const bounds = this.dom.getBoundingClientRect();\n      this._position.x = this.getPositionX(bounds, this._event, raw);\n      this._position.y = this.getPositionY(bounds, this._event, raw);\n    }\n  }\n  getPositionY(bound, event, raw) {\n    const data = this.getDataObject(event);\n    if (raw) {\n      return data.clientY;\n    }\n    return -((data.clientY - bound.top) / (bound.bottom - bound.top)) * 2 + 1;\n  }\n  getPositionX(bound, event, raw) {\n    const data = this.getDataObject(event);\n    if (raw) {\n      return data.clientX;\n    }\n    return (data.clientX - bound.left) / (bound.right - bound.left) * 2 - 1;\n  }\n  getDataObject(event) {\n    return event instanceof MouseEvent ? event : event.touches[0];\n  }\n  setupEvents(active) {\n    if (active) {\n      this.dom.addEventListener(\"pointermove\", this.updateMouseInfo);\n      this.dom.addEventListener(\"touchstart\", this.updateMouseInfo);\n    } else {\n      this.dom.removeEventListener(\"pointermove\", this.updateMouseInfo);\n      this.dom.removeEventListener(\"touchstart\", this.updateMouseInfo);\n    }\n  }\n}\nconst _FragmentsManager = class _FragmentsManager extends Component {\n  constructor(components) {\n    super(components);\n    /** {@link Disposable.onDisposed} */\n    __publicField(this, \"onDisposed\", new Event());\n    /**\n     * Event triggered when fragments are loaded.\n     */\n    __publicField(this, \"onFragmentsLoaded\", new Event());\n    __publicField(this, \"baseCoordinationModel\", \"\");\n    __publicField(this, \"baseCoordinationMatrix\", new THREE$1.Matrix4());\n    /** {@link Component.enabled} */\n    __publicField(this, \"enabled\", true);\n    __publicField(this, \"initialized\", false);\n    __publicField(this, \"_core\");\n    this.components.add(_FragmentsManager.uuid, this);\n  }\n  /**\n   * Map containing all loaded fragment models.\n   * The key is the group's unique identifier, and the value is the model itself.\n   */\n  get list() {\n    return this.core.models.list;\n  }\n  get core() {\n    if (!this._core) {\n      throw new Error(\"FragmentsManager not initialized. Call init() first.\");\n    }\n    return this._core;\n  }\n  /** {@link Disposable.dispose} */\n  dispose() {\n    if (this._core) {\n      this.core.dispose();\n      this._core = void 0;\n    }\n    this.baseCoordinationModel = \"\";\n    this.onFragmentsLoaded.reset();\n    this.onDisposed.trigger();\n    this.onDisposed.reset();\n  }\n  init(workerURL) {\n    this._core = new FragmentsModels(workerURL);\n    this.initialized = true;\n    this.core.onModelLoaded.add(async (model) => {\n      if (this.list.size !== 1)\n        return;\n      this.baseCoordinationModel = model.modelId;\n      this.baseCoordinationMatrix = await model.getCoordinationMatrix();\n    });\n    this.list.onItemDeleted.add(() => {\n      if (this.list.size > 0)\n        return;\n      this.baseCoordinationModel = \"\";\n      this.baseCoordinationMatrix = new THREE$1.Matrix4();\n    });\n  }\n  async raycast(data) {\n    const results = [];\n    for (const model of this.core.models.list.values()) {\n      if (data.snappingClasses && data.snappingClasses.length > 0) {\n        const snappingRaycast = await model.raycastWithSnapping(\n          data\n        );\n        if (snappingRaycast && snappingRaycast.length > 0) {\n          results.push(snappingRaycast[0]);\n        } else {\n          const simpleRaycast = await model.raycast(data);\n          if (simpleRaycast)\n            results.push(simpleRaycast);\n        }\n      } else {\n        const simpleRaycast = await model.raycast(data);\n        if (simpleRaycast)\n          results.push(simpleRaycast);\n      }\n    }\n    await Promise.all(results);\n    if (results.length === 0)\n      return void 0;\n    let closestResult = results[0];\n    let minDistance = closestResult.distance;\n    for (let i = 1; i < results.length; i++) {\n      if (results[i].distance < minDistance) {\n        minDistance = results[i].distance;\n        closestResult = results[i];\n      }\n    }\n    return closestResult;\n  }\n  async getPositions(items) {\n    const results = [];\n    const getModelPositions = async (model, localIds) => {\n      const positions = await model.getPositions(localIds);\n      for (const position of positions) {\n        results.push(position);\n      }\n    };\n    const promises = [];\n    for (const modelId in items) {\n      const model = this.core.models.list.get(modelId);\n      if (model) {\n        promises.push(getModelPositions(model, Array.from(items[modelId])));\n      }\n    }\n    await Promise.all(promises);\n    return results;\n  }\n  async getBBoxes(items) {\n    const results = [];\n    const getBoxes = async (model, localIds) => {\n      const boxes = await model.getBoxes(localIds);\n      if (boxes) {\n        for (const box of boxes) {\n          results.push(box);\n        }\n      }\n    };\n    const promises = [];\n    for (const itemID in items) {\n      const model = this.core.models.list.get(itemID);\n      if (model) {\n        promises.push(getBoxes(model, Array.from(items[itemID])));\n      }\n    }\n    await Promise.all(promises);\n    return results;\n  }\n  async highlight(style, items) {\n    await this.forEachModel(items, \"highlight\", style);\n  }\n  /**\n   * Retrieves data for specified items from multiple models.\n   *\n   * @param items A map of model IDs to an array of local IDs, specifying which items to retrieve data for.\n   * @param config Optional configuration for data retrieval.\n   * @returns A record mapping model IDs to an array of item data.\n   */\n  async getData(items, config) {\n    const result = {};\n    for (const [modelId, localIds] of Object.entries(items)) {\n      const model = this.list.get(modelId);\n      if (!model)\n        continue;\n      const data = await model.getItemsData([...localIds], config);\n      result[modelId] = data;\n    }\n    return result;\n  }\n  async resetHighlight(items) {\n    await this.forEachModel(items, \"resetHighlight\");\n  }\n  async forEachModel(items, method, ...args) {\n    const _items = {};\n    if (items) {\n      for (const modelId in items) {\n        const ids = items[modelId];\n        _items[modelId] = Array.from(ids);\n      }\n    } else {\n      for (const name of this.core.models.list.keys()) {\n        _items[name] = void 0;\n      }\n    }\n    const promises = [];\n    for (const modelId in _items) {\n      const model = this.core.models.list.get(modelId);\n      if (model) {\n        const ids = _items[modelId];\n        const promise = model[method](ids, ...args);\n        promises.push(promise);\n      }\n    }\n    await Promise.all(promises);\n  }\n  /**\n   * Converts a collection of IFC GUIDs to a fragmentIdMap.\n   *\n   * @param guids - An iterable collection of global IDs to be converted to a fragment ID map.\n   *\n   * @returns A fragment ID map, where the keys are fragment IDs and the values are the corresponding express IDs.\n   */\n  async guidsToModelIdMap(guids) {\n    const modelIdMap = {};\n    for (const [id, model] of this.list) {\n      const localIds = (await model.getLocalIdsByGuids([...guids])).filter(\n        (localId) => localId !== null\n      );\n      modelIdMap[id] = new Set(localIds);\n    }\n    return modelIdMap;\n  }\n  /**\n   * Converts a fragment ID map to a collection of GUIDs.\n   *\n   * @param modelIdMap - A ModelIdMap to be converted to a collection of GUIDs.\n   *\n   * @returns An array of GUIDs.\n   */\n  async modelIdMapToGuids(modelIdMap) {\n    const guids = [];\n    for (const [modelId, localIds] of Object.entries(modelIdMap)) {\n      const model = this.list.get(modelId);\n      if (!model)\n        continue;\n      const modelGuids = (await model.getGuidsByLocalIds([...localIds])).filter(\n        (guid) => guid !== null\n      );\n      guids.push(...modelGuids);\n    }\n    return guids;\n  }\n  // /**\n  //  * Applies coordinate transformation to the provided models.\n  //  * If no models are provided, all groups are used.\n  //  * The first model in the list becomes the base model for coordinate transformation.\n  //  * All other models are then transformed to match the base model's coordinate system.\n  //  *\n  //  * @param models - The models to apply coordinate transformation to.\n  //  * If not provided, all models are used.\n  //  */\n  // coordinate(models = Array.from(this.groups.values())) {\n  //   const isFirstModel = this.baseCoordinationModel.length === 0;\n  //   if (isFirstModel) {\n  //     const first = models.pop();\n  //     if (!first) {\n  //       return;\n  //     }\n  //     this.baseCoordinationModel = first.uuid;\n  //     this.baseCoordinationMatrix = first.coordinationMatrix.clone();\n  //   }\n  //   if (!models.length) {\n  //     return;\n  //   }\n  //   for (const model of models) {\n  //     if (model.coordinationMatrix.equals(this.baseCoordinationMatrix)) {\n  //       continue;\n  //     }\n  //     model.position.set(0, 0, 0);\n  //     model.rotation.set(0, 0, 0);\n  //     model.scale.set(1, 1, 1);\n  //     model.updateMatrix();\n  //     this.applyBaseCoordinateSystem(model, model.coordinationMatrix);\n  //   }\n  // }\n  /**\n   * Applies the base coordinate system to the provided object.\n   *\n   * This function takes an object and its original coordinate system as input.\n   * It then inverts the original coordinate system and applies the base coordinate system\n   * to the object. This ensures that the object's position, rotation, and scale are\n   * transformed to match the base coordinate system (which is taken from the first model loaded).\n   *\n   * @param object - The object to which the base coordinate system will be applied.\n   * This should be an instance of THREE.Object3D.\n   *\n   * @param originalCoordinateSystem - The original coordinate system of the object.\n   * This should be a THREE.Matrix4 representing the object's transformation matrix.\n   */\n  applyBaseCoordinateSystem(object, originalCoordinateSystem) {\n    const transformMatrix = new THREE$1.Matrix4();\n    if (originalCoordinateSystem) {\n      transformMatrix.copy(originalCoordinateSystem.clone()).invert();\n    }\n    transformMatrix.multiply(this.baseCoordinationMatrix);\n    object.applyMatrix4(transformMatrix);\n    return transformMatrix;\n  }\n};\n/**\n * A unique identifier for the component.\n * This UUID is used to register the component within the Components system.\n */\n__publicField(_FragmentsManager, \"uuid\", \"fef46874-46a3-461b-8c44-2922ab77c806\");\nlet FragmentsManager = _FragmentsManager;\nclass IfcFragmentSettings {\n  constructor() {\n    /** Path of the WASM for [web-ifc](https://github.com/ThatOpen/engine_web-ifc). */\n    __publicField(this, \"wasm\", {\n      path: \"\",\n      absolute: false,\n      logLevel: WEBIFC.LogLevel.LOG_LEVEL_OFF\n    });\n    /** Loader settings for [web-ifc](https://github.com/ThatOpen/engine_web-ifc). */\n    __publicField(this, \"webIfc\", {\n      COORDINATE_TO_ORIGIN: true\n      // OPTIMIZE_PROFILES: true,\n    });\n    /**\n     * Whether to automatically set the path to the WASM file for [web-ifc](https://github.com/ThatOpen/engine_web-ifc).\n     * If set to true, the path will be set to the default path of the WASM file.\n     * If set to false, the path must be provided manually in the `wasm.path` property.\n     * Default value is true.\n     */\n    __publicField(this, \"autoSetWasm\", true);\n    /**\n     * Custom function to handle the file location for [web-ifc](https://github.com/ThatOpen/engine_web-ifc).\n     * This function will be called when [web-ifc](https://github.com/ThatOpen/engine_web-ifc) needs to locate a file.\n     * If set to null, the default file location handler will be used.\n     *\n     * @param url - The URL of the file to locate.\n     * @returns The absolute path of the file.\n     */\n    __publicField(this, \"customLocateFileHandler\", null);\n  }\n}\nconst _IfcLoader = class _IfcLoader extends Component {\n  constructor(components) {\n    super(components);\n    /** {@link Disposable.onDisposed} */\n    __publicField(this, \"onDisposed\", new Event());\n    /**\n     * An event triggered when the IFC file starts loading.\n     */\n    __publicField(this, \"onIfcStartedLoading\", new Event());\n    /**\n     * An event triggered when the setup process is completed.\n     */\n    __publicField(this, \"onSetup\", new Event());\n    /**\n     * The settings for the IfcLoader.\n     * It includes options for excluding categories, setting WASM paths, and more.\n     */\n    __publicField(this, \"settings\", new IfcFragmentSettings());\n    /**\n     * The instance of the Web-IFC library used for handling IFC data.\n     */\n    __publicField(this, \"webIfc\", new WEBIFC.IfcAPI());\n    /** {@link Component.enabled} */\n    __publicField(this, \"enabled\", true);\n    this.components.add(_IfcLoader.uuid, this);\n  }\n  /** {@link Disposable.dispose} */\n  dispose() {\n    this.webIfc = null;\n    this.onDisposed.trigger(_IfcLoader.uuid);\n    this.onDisposed.reset();\n  }\n  /**\n   * Sets up the IfcLoader component with the provided configuration.\n   *\n   * @param config - Optional configuration settings for the IfcLoader.\n   * If not provided, the existing settings will be used.\n   *\n   * @returns A Promise that resolves when the setup process is completed.\n   *\n   * @remarks\n   * If the `autoSetWasm` option is enabled in the configuration,\n   * the method will automatically set the WASM paths for the Web-IFC library.\n   *\n   * @example\n   * ```typescript\n   * const ifcLoader = new IfcLoader(components);\n   * await ifcLoader.setup({ autoSetWasm: true });\n   * ```\n   */\n  async setup(config) {\n    this.settings = { ...this.settings, ...config };\n    if (this.settings.autoSetWasm) {\n      await this.autoSetWasm();\n    }\n    this.onSetup.trigger();\n  }\n  /**\n   * Loads an IFC file and processes it for 3D visualization.\n   *\n   * @param data - The Uint8Array containing the IFC file data.\n   * @param coordinate - Optional boolean indicating whether to coordinate the loaded IFC data. Default is true.\n   * @param name - Optional name for the fragments model.\n   * @param config - Optional extra data for loading the IFC.\n   *\n   * @returns A Promise that resolves to the FragmentsModel containing the loaded and processed IFC data.\n   *\n   * @example\n   * ```typescript\n   * const ifcLoader = components.get(IfcLoader);\n   * const model = await ifcLoader.load(ifcData);\n   * ```\n   */\n  async load(data, coordinate, name, config) {\n    const fragments = this.components.get(FragmentsManager);\n    if (!fragments.initialized) {\n      throw new Error(\"You need to initialize fragments first.\");\n    }\n    if (this.settings.autoSetWasm) {\n      await this.autoSetWasm();\n    }\n    fragments.core.settings.autoCoordinate = coordinate;\n    const serializer = new FRAGS.IfcImporter();\n    serializer.wasm.path = this.settings.wasm.path;\n    serializer.wasm.absolute = this.settings.wasm.absolute;\n    if (config == null ? void 0 : config.instanceCallback)\n      config.instanceCallback(serializer);\n    const bytes = await serializer.process({\n      ...config == null ? void 0 : config.processData,\n      bytes: data\n    });\n    const model = await fragments.core.load(bytes, {\n      modelId: name,\n      userData: config == null ? void 0 : config.userData\n    });\n    return model;\n  }\n  /**\n   * Reads an IFC file and initializes the Web-IFC library.\n   *\n   * @param data - The Uint8Array containing the IFC file data.\n   *\n   * @returns A Promise that resolves when the IFC file is opened and initialized.\n   *\n   * @remarks\n   * This method sets the WASM path and initializes the Web-IFC library based on the provided settings.\n   * It also opens the IFC model using the provided data and settings.\n   *\n   * @example\n   * ```typescript\n   * const ifcLoader = components.get(IfcLoader);\n   * await ifcLoader.readIfcFile(ifcData);\n   * ```\n   */\n  async readIfcFile(data) {\n    const { path, absolute, logLevel } = this.settings.wasm;\n    this.webIfc.SetWasmPath(path, absolute);\n    await this.webIfc.Init(this.settings.customLocateFileHandler || void 0);\n    if (logLevel) {\n      this.webIfc.SetLogLevel(logLevel);\n    }\n    return this.webIfc.OpenModel(data, this.settings.webIfc);\n  }\n  /**\n   * Cleans up the IfcLoader component by resetting the Web-IFC library,\n   * clearing the visited fragments and fragment instances maps, and creating a new instance of the Web-IFC library.\n   *\n   * @remarks\n   * This method is called automatically after using the .load() method, so usually you don't need to use it manually.\n   *\n   * @example\n   * ```typescript\n   * const ifcLoader = components.get(IfcLoader);\n   * ifcLoader.cleanUp();\n   * ```\n   */\n  cleanUp() {\n    try {\n      this.webIfc.Dispose();\n    } catch (e) {\n      console.log(\"Web-ifc wasn't disposed.\");\n    }\n    this.webIfc = null;\n    this.webIfc = new WEBIFC.IfcAPI();\n  }\n  async autoSetWasm() {\n    const componentsPackage = await fetch(\n      `https://unpkg.com/@thatopen/components@${Components.release}/package.json`\n    );\n    if (!componentsPackage.ok) {\n      console.warn(\n        \"Couldn't get openbim-components package.json. Set wasm settings manually.\"\n      );\n      return;\n    }\n    const componentsPackageJSON = await componentsPackage.json();\n    if (!(\"web-ifc\" in componentsPackageJSON.peerDependencies)) {\n      console.warn(\n        \"Couldn't get web-ifc from peer dependencies in openbim-components. Set wasm settings manually.\"\n      );\n    } else {\n      const webIfcVer = componentsPackageJSON.peerDependencies[\"web-ifc\"];\n      this.settings.wasm.path = `https://unpkg.com/web-ifc@${webIfcVer}/`;\n      this.settings.wasm.absolute = true;\n    }\n  }\n};\n/**\n * A unique identifier for the component.\n * This UUID is used to register the component within the Components system.\n */\n__publicField(_IfcLoader, \"uuid\", \"a659add7-1418-4771-a0d6-7d4d438e4624\");\nlet IfcLoader = _IfcLoader;\nconst _Hider = class _Hider extends Component {\n  constructor(components) {\n    super(components);\n    /** {@link Component.enabled} */\n    __publicField(this, \"enabled\", true);\n    this.components.add(_Hider.uuid, this);\n  }\n  /**\n   * Sets the visibility of fragment items within the 3D scene.\n   * If no `modelIdMap` parameter is provided, all fragments will be set to the specified visibility.\n   * If it is provided, only the specified fragment items will be affected.\n   *\n   * @param visible - The visibility state to set for the items.\n   * @param modelIdMap - An optional map of modelIds and their corresponding itemIds to be affected.\n   * If not provided, all fragment items will be affected.\n   */\n  async set(visible, modelIdMap) {\n    const fragments = this.components.get(FragmentsManager);\n    const promises = [];\n    if (modelIdMap) {\n      for (const [modelId, localIds] of Object.entries(modelIdMap)) {\n        const model = fragments.list.get(modelId);\n        if (!model)\n          continue;\n        promises.push(model.setVisible([...localIds], visible));\n      }\n    } else {\n      for (const model of fragments.list.values()) {\n        promises.push(model.setVisible(void 0, visible));\n      }\n    }\n    await Promise.all(promises);\n    await fragments.core.update(true);\n  }\n  /**\n   * Isolates fragments within the 3D scene by hiding all other fragments and showing only the specified ones.\n   * It calls the `set` method twice: first to hide all fragments, and then to show only the specified ones.\n   *\n   * @param modelIdMap - A map of model IDs and their corresponding itemIds to be isolated.\n   */\n  async isolate(modelIdMap) {\n    await Promise.all([\n      this.set(false),\n      // Hides all fragments\n      this.set(true, modelIdMap)\n      // Shows only the specified fragments\n    ]);\n  }\n  /**\n   * Toggles the visibility of specified items in the fragments.\n   *\n   * @param modelIdMap - An object where the keys are model IDs and the values are arrays of local IDs representing the fragments to be toggled.\n   * @returns A promise that resolves when all visibility toggles and the core update are complete.\n   */\n  async toggle(modelIdMap) {\n    const promises = [];\n    const fragments = this.components.get(FragmentsManager);\n    for (const [modelId, localIds] of Object.entries(modelIdMap)) {\n      const model = fragments.list.get(modelId);\n      if (!model)\n        continue;\n      promises.push(model.toggleVisible([...localIds]));\n    }\n    await Promise.all(promises);\n    await fragments.core.update(true);\n  }\n  /**\n   * Asynchronously retrieves a map of model IDs to their corresponding item IDs based on visibility state.\n   *\n   * @param state - The visibility state to filter items by.\n   * @param modelIds - Optional array of model IDs to filter the items. If not provided, all models will be considered.\n   * @returns A promise that resolves to a ModelIdMap record where the keys are model IDs and the values are arrays of item IDs that match the visibility state.\n   */\n  async getVisibilityMap(state, modelIds) {\n    const models = [];\n    const promises = [];\n    const fragments = this.components.get(FragmentsManager);\n    if (modelIds) {\n      for (const modelId of modelIds) {\n        const model = fragments.list.get(modelId);\n        if (!model)\n          continue;\n        models.push(model.modelId);\n        promises.push(model.getItemsByVisibility(state));\n      }\n    } else {\n      for (const model of fragments.list.values()) {\n        models.push(model.modelId);\n        promises.push(model.getItemsByVisibility(state));\n      }\n    }\n    const localIds = await Promise.all(promises);\n    const modelIdMap = {};\n    for (const [index, modelId] of models.entries()) {\n      modelIdMap[modelId] = localIds[index];\n    }\n    return modelIdMap;\n  }\n};\n/**\n * A unique identifier for the component.\n * This UUID is used to register the component within the Components system.\n */\n__publicField(_Hider, \"uuid\", \"dd9ccf2d-8a21-4821-b7f6-2949add16a29\");\nlet Hider = _Hider;\nconst _BoundingBoxer = class _BoundingBoxer extends Component {\n  constructor(components) {\n    super(components);\n    /** {@link Component.enabled} */\n    __publicField(this, \"enabled\", true);\n    /** {@link Disposable.onDisposed} */\n    __publicField(this, \"onDisposed\", new Event());\n    /**\n     * A readonly dataset containing instances of THREE.Box3.\n     */\n    __publicField(this, \"list\", new FRAGS.DataSet());\n    this.components.add(_BoundingBoxer.uuid, this);\n  }\n  /** {@link Disposable.dispose} */\n  dispose(full = true) {\n    this.list.clear();\n    this.onDisposed.trigger(_BoundingBoxer.uuid);\n    if (full) {\n      this.onDisposed.reset();\n      this.list.eventsEnabled = false;\n      this.list.dispose();\n    }\n  }\n  /**\n   * Combines all bounding boxes in the `list` property into a single bounding box.\n   *\n   * @returns A `THREE.Box3` instance representing the union of all bounding boxes in the `list`.\n   */\n  get() {\n    const fullBox = new THREE$1.Box3();\n    for (const box of this.list) {\n      fullBox.union(box);\n    }\n    return fullBox;\n  }\n  /**\n   * Asynchronously adds bounding boxes to the list by merging boxes from models\n   * specified in the provided `ModelIdMap`.\n   *\n   * @param items - A map where keys are model IDs and values are arrays of local IDs\n   *                representing specific parts of the models to include in the bounding box.\n   */\n  async addFromModelIdMap(items) {\n    const fragments = this.components.get(FragmentsManager);\n    const box = new THREE$1.Box3();\n    for (const [modelId, localIds] of Object.entries(items)) {\n      const model = fragments.list.get(modelId);\n      if (!model)\n        continue;\n      const itemsBox = await model.getMergedBox([...localIds]);\n      box.union(itemsBox);\n    }\n    this.list.add(box);\n  }\n  /**\n   * Adds bounding boxes from models to the current list based on optional filtering criteria.\n   *\n   * @param modelIds - An optional array of regular expressions used to filter models by their IDs.\n   *                   If provided, only models whose IDs match at least one of the regular expressions\n   *                   will have their bounding boxes added to the list. If not, all models will be used.\n   */\n  addFromModels(modelIds) {\n    const fragments = this.components.get(FragmentsManager);\n    for (const [modelId, model] of fragments.list) {\n      if (modelIds && !modelIds.some((regex) => regex.test(modelId)))\n        continue;\n      this.list.add(model.box);\n    }\n  }\n  /**\n   * Calculates and returns the center point of the bounding box derived from the provided model ID map.\n   *\n   * @param modelIdMap - A mapping of model IDs and localIds used to generate the bounding box.\n   * @returns A `THREE.Vector3` object representing the center point of the bounding box.\n   */\n  async getCenter(modelIdMap) {\n    this.list.clear();\n    await this.addFromModelIdMap(modelIdMap);\n    const box = this.get();\n    this.list.clear();\n    const center = new THREE$1.Vector3();\n    box.getCenter(center);\n    return center;\n  }\n  /**\n   * Calculates the camera orientation and position based on the specified orientation\n   * and an optional offset factor.\n   *\n   * @param orientation - Specifies the direction of the camera relative to the bounding box.\n   * @param offsetFactor - A multiplier applied to the distance between the camera and the bounding box.\n   *                       Defaults to `1`.\n   * @returns An object containing:\n   *          - `position`: A `THREE.Vector3` representing the calculated camera position.\n   *          - `target`: A `THREE.Vector3` representing the center of the bounding box, which the camera should target.\n   */\n  async getCameraOrientation(orientation, offsetFactor = 1) {\n    const fragments = this.components.get(FragmentsManager);\n    this.list.clear();\n    for (const [_, model] of fragments.list) {\n      this.list.add(model.box);\n    }\n    const box = this.get();\n    this.list.clear();\n    const center = new THREE$1.Vector3();\n    box.getCenter(center);\n    const size = new THREE$1.Vector3();\n    box.getSize(size);\n    const cameraDistance = Math.max(size.x, size.y, size.z) * offsetFactor;\n    const position = new THREE$1.Vector3();\n    switch (orientation) {\n      case \"front\":\n        position.set(center.x, center.y, center.z + cameraDistance);\n        break;\n      case \"back\":\n        position.set(center.x, center.y, center.z - cameraDistance);\n        break;\n      case \"left\":\n        position.set(center.x - cameraDistance, center.y, center.z);\n        break;\n      case \"right\":\n        position.set(center.x + cameraDistance, center.y, center.z);\n        break;\n      case \"top\":\n        position.set(center.x, center.y + cameraDistance, center.z);\n        break;\n      case \"bottom\":\n        position.set(center.x, center.y - cameraDistance, center.z);\n        break;\n      default:\n        position.set(center.x, center.y, center.z + cameraDistance);\n    }\n    return { position, target: center };\n  }\n};\n__publicField(_BoundingBoxer, \"uuid\", \"d1444724-dba6-4cdd-a0c7-68ee1450d166\");\nlet BoundingBoxer = _BoundingBoxer;\nclass FinderQuery {\n  constructor(components, queries) {\n    __publicField(this, \"description\");\n    __publicField(this, \"_components\");\n    __publicField(this, \"_queries\", []);\n    __publicField(this, \"_aggregation\", \"exclusive\");\n    /**\n     * The result of the query, a map of modelIds to localIds.\n     * Null if the query has not been executed or has not been cached.\n     */\n    __publicField(this, \"result\", null);\n    /**\n     * Determines whether the query results should be cached.\n     */\n    __publicField(this, \"cache\", true);\n    __publicField(this, \"serializeQueryParameters\", (params) => {\n      var _a2;\n      const result = {\n        categories: (_a2 = params.categories) == null ? void 0 : _a2.map((regex) => regex.source),\n        attributes: params.attributes ? {\n          aggregation: params.attributes.aggregation,\n          queries: params.attributes.queries.map(\n            this.serializeAttributeQuery\n          )\n        } : void 0,\n        relation: params.relation ? {\n          name: params.relation.name,\n          query: params.relation.query ? this.serializeQueryParameters(params.relation.query) : void 0\n        } : void 0\n      };\n      return result;\n    });\n    __publicField(this, \"deserializeQueryParameters\", (params) => {\n      var _a2;\n      const result = {\n        categories: (_a2 = params.categories) == null ? void 0 : _a2.map((value) => new RegExp(value)),\n        attributes: params.attributes ? {\n          aggregation: params.attributes.aggregation,\n          queries: params.attributes.queries.map(\n            this.deserializeAttributeQuery\n          )\n        } : void 0,\n        relation: params.relation ? {\n          name: params.relation.name,\n          query: params.relation.query ? this.deserializeQueryParameters(params.relation.query) : void 0\n        } : void 0\n      };\n      return result;\n    });\n    this._components = components;\n    this.queries = queries;\n  }\n  /**\n   * The query parameters used to find items.\n   */\n  set queries(value) {\n    this._queries = value;\n    this.clearCache();\n  }\n  get queries() {\n    return this._queries;\n  }\n  /**\n   * Sets the aggregation value (AND/OR) for the query and resets the cache if the new value differs.\n   */\n  set aggregation(value) {\n    if (value !== this._aggregation)\n      this.clearCache();\n    this._aggregation = value;\n  }\n  get aggregation() {\n    return this._aggregation;\n  }\n  /**\n   * Executes the finder query to retrieve items based on the configured query and optional model IDs.\n   *\n   * @param config - Optional configuration object.\n   * @param config.modelIds - Optional array of model IDs to filter the search.\n   * @param config.force - Optional boolean to force a new search, bypassing the cache. Defaults to `false`.\n   * @returns A promise that resolves to a `ModelIdMap` containing the search results.\n   */\n  async test(config) {\n    const { modelIds, force } = { force: false, ...config };\n    if (this.result && !force)\n      return this.result;\n    const finder = this._components.get(ItemsFinder);\n    const result = await finder.getItems(this.queries, {\n      modelIds,\n      aggregation: this.aggregation\n    });\n    if (this.cache)\n      this.result = result;\n    return result;\n  }\n  /**\n   * Clears the cached result of the query, forcing a re-evaluation on the next access.\n   */\n  clearCache() {\n    this.result = null;\n  }\n  serializeAttributeQuery(query) {\n    let value;\n    if (Array.isArray(query.value)) {\n      value = query.value.map((regex) => regex.source);\n    } else if (query.value instanceof RegExp) {\n      value = query.value.source;\n    } else {\n      value = query.value;\n    }\n    const result = {\n      name: query.name.source,\n      value,\n      type: query.type instanceof RegExp ? query.type.source : query.type,\n      negate: query.negate,\n      itemIds: query.itemIds\n    };\n    return result;\n  }\n  /**\n   * Serializes the finder query into a JSON-compatible format.\n   * Converts regular expressions to strings.\n   *\n   * @returns A `SerializedFinderQuery` object representing the serialized query.\n   */\n  toJSON() {\n    const result = {\n      name: \"Finder Query\",\n      description: this.description,\n      queries: this.queries.map(this.serializeQueryParameters),\n      aggregation: this.aggregation,\n      cache: this.cache\n    };\n    return result;\n  }\n  deserializeAttributeQuery(query) {\n    let value;\n    if (Array.isArray(query.value)) {\n      value = query.value.map((val2) => new RegExp(val2));\n    } else if (typeof query.value === \"string\") {\n      value = new RegExp(query.value);\n    } else {\n      value = query.value;\n    }\n    const result = {\n      name: new RegExp(query.name),\n      value,\n      type: query.type ? new RegExp(query.type) : void 0,\n      negate: query.negate,\n      itemIds: query.itemIds\n    };\n    return result;\n  }\n  /**\n   * Deserializes a JSON object into a `FinderQuery` instance.\n   *\n   * @param data - A `SerializedFinderQuery` object representing the serialized query.\n   * @returns A `FinderQuery` instance.\n   */\n  fromJSON(data) {\n    this.description = data.description;\n    this.aggregation = data.aggregation;\n    this.cache = data.cache;\n    this.queries = data.queries.map(this.deserializeQueryParameters);\n    return this;\n  }\n}\nconst _ItemsFinder = class _ItemsFinder extends Component {\n  constructor(components) {\n    super(components);\n    /** {@link Component.enabled} */\n    __publicField(this, \"enabled\", true);\n    /**\n     * A map of FinderQuery objects, indexed by a string key.\n     */\n    __publicField(this, \"list\", new FRAGS.DataMap());\n    components.add(_ItemsFinder.uuid, this);\n  }\n  // private clearCache() {\n  //   for (const [, finderQuery] of this.list) {\n  //     finderQuery.clearCache();\n  //   }\n  // }\n  /**\n   * Retrieves items from specified models based on a query.\n   *\n   * @param queries - The query parameters to filter items.\n   * @param modelIds - Optional array of model IDs to include in the search. If not provided, all models are searched.\n   * @returns A map of model IDs to sets of item IDs that match the query.\n   */\n  async getItems(queries, config) {\n    const { modelIds } = config ?? {};\n    const aggregation = (config == null ? void 0 : config.aggregation) ?? \"exclusive\";\n    const fragments = this.components.get(FragmentsManager);\n    const results = await Promise.all(\n      queries.map(async (query) => {\n        const result = {};\n        await Promise.all(\n          Array.from(fragments.list).map(async ([id, model]) => {\n            if (modelIds && !modelIds.some((regex) => regex.test(id)))\n              return;\n            const items = await model.getItemsByQuery(query);\n            result[id] = new Set(items);\n          })\n        );\n        return result;\n      })\n    );\n    const finalResult = aggregation === \"inclusive\" ? ModelIdMapUtils.join(results) : ModelIdMapUtils.intersect(results);\n    return finalResult;\n  }\n  /**\n   * Creates a new FinderQuery instance and adds it to the list of queries.\n   *\n   * @param name - The name of the query.\n   * @param queries - The queries to use.\n   * @returns The newly created FinderQuery instance.\n   */\n  create(name, queries) {\n    const instance = new FinderQuery(this.components, queries);\n    this.list.set(name, instance);\n    return instance;\n  }\n  /**\n   * Adds queries based on categories from items that have geometry.\n   *\n   * @param modelIds - An optional array of model IDs to filter fragments. If not provided, all fragments are processed.\n   * @returns An array with the categories used to create the queries\n   */\n  async addFromCategories(modelIds) {\n    const result = /* @__PURE__ */ new Set();\n    const fragments = this.components.get(FragmentsManager);\n    for (const [id, model] of fragments.list) {\n      if (modelIds && !modelIds.some((regex) => regex.test(id)))\n        continue;\n      const categories = (await model.getItemsWithGeometryCategories()).filter(\n        (category) => category !== null\n      );\n      const set = new Set(categories);\n      for (const category of set) {\n        if (this.list.has(category))\n          continue;\n        this.create(category, [{ categories: [new RegExp(`^${category}$`)] }]);\n        result.add(category);\n      }\n    }\n    return [...result];\n  }\n  /**\n   * Imports a list of `FinderQuery` instances from a `SerializationResult` containing serialized finder query data.\n   *\n   * @param result - The `SerializationResult` containing the serialized `SerializedFinderQuery` data.\n   * @returns An array of `FinderQuery` instances created from the serialized data. Returns an empty array if the input data is null or undefined.\n   */\n  import(result) {\n    const { data } = result;\n    const instances = [];\n    if (!data)\n      return instances;\n    for (const value of data) {\n      const { name, description, queries, aggregation, cache } = value;\n      const finderQuery = this.create(name, []);\n      finderQuery.fromJSON({ description, queries, aggregation, cache });\n      instances.push(finderQuery);\n    }\n    return instances;\n  }\n  /**\n   * Serializes the ItemsFinder's data into a format suitable for export.\n   *\n   * @returns An object containing an array of serialized finder queries.\n   */\n  export() {\n    const data = [];\n    for (const [name, finderQuery] of this.list.entries()) {\n      const partial = finderQuery.toJSON();\n      const result = {\n        ...partial,\n        name\n      };\n      data.push(result);\n    }\n    return { data };\n  }\n};\n/**\n * A unique identifier for the component.\n * This UUID is used to register the component within the Components system.\n */\n__publicField(_ItemsFinder, \"uuid\", \"0da7ad77-f734-42ca-942f-a074adfd1e3a\");\nlet ItemsFinder = _ItemsFinder;\nconst _Classifier = class _Classifier extends Component {\n  constructor(components) {\n    super(components);\n    /** {@link Component.enabled} */\n    __publicField(this, \"enabled\", true);\n    /** {@link Disposable.onDisposed} */\n    __publicField(this, \"onDisposed\", new Event());\n    /**\n     * A nested data map that organizes classification groups.\n     * The outer map uses strings as keys, and the inner map contains ClassificationGroupData, also keyed by strings.\n     */\n    __publicField(this, \"list\", new FRAGS.DataMap());\n    /**\n     * The default save function used by the classifier.\n     * It extracts the 'value' property from the item's Name and returns it as a string.\n     * If the 'value' property does not exist, it returns null.\n     *\n     * @param item - The item data to extract the value from.\n     * @returns The extracted value as a string, or null if the value does not exist.\n     */\n    __publicField(this, \"defaultSaveFunction\", (item) => {\n      if (!(\"value\" in item.Name))\n        return null;\n      return item.Name.value;\n    });\n    __publicField(this, \"onBeforeFragmentsDispose\", async (data) => {\n      const { key: modelId, value: model } = data;\n      const localIds = await model.getLocalIds();\n      const modelIdMap = { [modelId]: new Set(localIds) };\n      this.removeItems(modelIdMap);\n    });\n    components.add(_Classifier.uuid, this);\n    this.setupEvents();\n    const fragmentsManager = components.get(FragmentsManager);\n    fragmentsManager.list.onBeforeDelete.add(this.onBeforeFragmentsDispose);\n  }\n  setupEvents() {\n    this.list.onBeforeDelete.add(({ value: groups }) => groups.dispose());\n  }\n  getClassificationGroups(classification) {\n    let groups = this.list.get(classification);\n    if (!groups) {\n      groups = new FRAGS.DataMap();\n      this.list.set(classification, groups);\n    }\n    return groups;\n  }\n  getModelItems(classification, group, modelId) {\n    const { map } = this.getGroupData(classification, group);\n    let items = map[modelId];\n    if (!items) {\n      items = /* @__PURE__ */ new Set();\n      map[modelId] = items;\n    }\n    return items;\n  }\n  /**\n   * Retrieves data associated with a specific group within a classification.\n   * If the group data does not exist, it creates a new entry.\n   *\n   * @param classification - The classification string.\n   * @param group - The group string within the classification.\n   * @returns The data object associated with the group, containing a map and a `get` method.\n   */\n  getGroupData(classification, group) {\n    const finder = this.components.get(ItemsFinder);\n    const groups = this.getClassificationGroups(classification);\n    let data = groups.get(group);\n    if (!data) {\n      data = {\n        map: {},\n        // TODO: Evaluate if this is the best option for this\n        get() {\n          return new Promise((resolve) => {\n            if (!data) {\n              resolve({});\n              return;\n            }\n            if (data.query) {\n              const { name, config } = data.query;\n              const instance = finder.list.get(name);\n              if (!instance) {\n                throw new Error(\n                  \"Classifier: the query name associated with the group doesn't exist in the ItemsFinder component\"\n                );\n              }\n              instance.test(config).then((queryMap) => {\n                if (!data) {\n                  resolve({});\n                  return;\n                }\n                const result = ModelIdMapUtils.join([queryMap, data.map]);\n                resolve(result);\n              });\n            } else {\n              resolve(data.map);\n            }\n          });\n        }\n      };\n      groups.set(group, data);\n    }\n    return data;\n  }\n  /**\n   * Aggregates items based on a classification and query, applying a provided function to each item.\n   *\n   * @param classification - The classification string used to categorize the items.\n   * @param query - The query parameters used to find items.\n   * @param config - Optional configuration for data and item processing.\n   * @param config.data - Optional data configuration to pass to the item retrieval.\n   * @param config.aggregationCallback - Optional function to apply to each item; defaults to `this.defaultSaveFunction` if not provided.\n   *                       This function receives the item data and a register function to associate item local IDs with names.\n   *                       If no function is provided, the default save function is used.\n   *\n   * @remarks\n   * The `register` function within the `config.func` allows associating item local IDs with a given name under the specified classification.\n   * It is used to keep track of which items belong to which classification.\n   */\n  async aggregateItems(classification, query, config) {\n    const data = (config == null ? void 0 : config.data) ?? void 0;\n    const callback = (config == null ? void 0 : config.aggregationCallback) ?? this.defaultSaveFunction;\n    const fragments = this.components.get(FragmentsManager);\n    const finder = this.components.get(ItemsFinder);\n    const resultMap = await finder.getItems([query], {\n      modelIds: config == null ? void 0 : config.modelIds\n    });\n    for (const [modelId, localIds] of Object.entries(resultMap)) {\n      const model = fragments.list.get(modelId);\n      if (!model)\n        continue;\n      const register = (name, ...localIds2) => {\n        const items2 = this.getModelItems(classification, name, modelId);\n        for (const localId of localIds2) {\n          items2.add(localId);\n        }\n      };\n      const items = await model.getItemsData([...localIds], data);\n      for (const item of items) {\n        callback(item, register);\n      }\n    }\n  }\n  /**\n   * Adds items to a specific group within a classification.\n   *\n   * @param classification - The classification to which the group belongs.\n   * @param group - The group to which the items will be added.\n   * @param items - A map of model IDs to add to the group.\n   */\n  addGroupItems(classification, group, items) {\n    const { map } = this.getGroupData(classification, group);\n    ModelIdMapUtils.add(map, items);\n  }\n  /**\n   * Sets the query for a specific group within a classification.\n   *\n   * @param classification - The classification to target.\n   * @param group - The group within the classification to target.\n   * @param query - The query to set for the group.\n   */\n  setGroupQuery(classification, group, query) {\n    const groupData = this.getGroupData(classification, group);\n    groupData.query = query;\n  }\n  /**\n   * Asynchronously finds a set of ModelIdMaps based on the provided classification data.\n   * @param data An object with classifications as keys and an array of groups as values.\n   * @returns A promise that resolves to a ModelIdMap representing the intersection of all ModelIdMaps found.\n   */\n  async find(data) {\n    const modelIdMaps = [];\n    for (const [classification, groups] of Object.entries(data)) {\n      const maps = [];\n      const classificationData = this.list.get(classification);\n      if (!classificationData)\n        continue;\n      for (const group of groups) {\n        const groupData = classificationData.get(group);\n        if (!groupData)\n          continue;\n        const map = await groupData.get();\n        maps.push(map);\n      }\n      const result2 = ModelIdMapUtils.join(maps);\n      modelIdMaps.push(result2);\n    }\n    const result = ModelIdMapUtils.intersect(modelIdMaps);\n    return result;\n  }\n  /**\n   * From the items passing the query, use the specified relation to create groupings\n   * This method retrieves and processes related items, applying a custom aggregation callback to register\n   * relations between items based on their attributes and local IDs.\n   *\n   * @param classification - The classification type used to filter items.\n   * @param query - Query parameters for filtering items, defined by `FRAGS.ItemsQueryParams`.\n   * @param relation - The type of relation to aggregate (e.g., \"ContainedInStructure\", \"HasAssociations\").\n   * @param config - Optional configuration for the aggregation process.\n   * @returns A promise that resolves when the aggregation process is complete.\n   * @remarks\n   * - The `aggregationCallback` function processes each item and registers relations based on the item's\n   *   attribute value and the local ID of its relations.\n   * - Items without the specified attribute or relations are ignored during aggregation.\n   */\n  async aggregateItemRelations(classification, query, relation, config) {\n    const attribute = (config == null ? void 0 : config.attribute) ?? \"Name\";\n    const data = {\n      relations: {\n        [relation]: { attributes: true, relations: false }\n      }\n    };\n    await this.aggregateItems(classification, query, {\n      modelIds: config == null ? void 0 : config.modelIds,\n      data,\n      aggregationCallback: (item, register) => {\n        if (!(item == null ? void 0 : item[attribute]))\n          return;\n        const attr = item[attribute];\n        if (!(\"value\" in attr))\n          return;\n        const relations = item[relation];\n        if (!Array.isArray(relations))\n          return;\n        for (const relation2 of relations) {\n          if (!(\"value\" in relation2._localId))\n            continue;\n          register(attr.value, relation2._localId.value);\n        }\n      }\n    });\n  }\n  /**\n   * Asynchronously processes and adds classifications by IfcBuildingStorey.\n   * @param config - Optional configuration for adding classifications.\n   * @returns A promise that resolves once the storeys have been processed and added.\n   */\n  async byIfcBuildingStorey(config) {\n    await this.aggregateItemRelations(\n      (config == null ? void 0 : config.classificationName) ?? \"Storeys\",\n      { categories: [/BUILDINGSTOREY/] },\n      \"ContainsElements\",\n      { modelIds: config == null ? void 0 : config.modelIds }\n    );\n  }\n  /**\n   * Asynchronously processes and adds classifications by category.\n   * @param config - Optional configuration for adding classifications.\n   * @returns A promise that resolves once the categories have been processed and added.\n   */\n  async byCategory(config) {\n    const finder = this.components.get(ItemsFinder);\n    const categories = await finder.addFromCategories(config == null ? void 0 : config.modelIds);\n    for (const category of categories) {\n      this.setGroupQuery((config == null ? void 0 : config.classificationName) ?? \"Categories\", category, {\n        name: category\n      });\n    }\n  }\n  /** {@link Disposable.dispose} */\n  dispose() {\n    this.list.clear();\n    const fragmentsManager = this.components.get(FragmentsManager);\n    fragmentsManager.list.onBeforeDelete.remove(this.onBeforeFragmentsDispose);\n    this.onDisposed.trigger();\n  }\n  /**\n   * Removes items from the classifier based on the provided model ID map and configuration.\n   *\n   * @param modelIdMap - A map containing model IDs to be removed.\n   * @param config - Optional configuration for removing items.s.\n   * @remarks If no configuration is provided, items will be removed from all classifications\n   */\n  removeItems(modelIdMap, config) {\n    if (config && config.classificationName) {\n      const groups = this.list.get(config.classificationName);\n      if (!groups)\n        return;\n      if (config.groupName) {\n        const groupData = groups.get(config.groupName);\n        if (!groupData)\n          return;\n      }\n      for (const [, data] of groups) {\n        ModelIdMapUtils.remove(data.map, modelIdMap);\n      }\n      return;\n    }\n    for (const [, group] of this.list.entries()) {\n      for (const [, data] of group) {\n        ModelIdMapUtils.remove(data.map, modelIdMap);\n      }\n    }\n  }\n  /**\n   * Asynchronously processes models based on the provided configuration and updates classification groups.\n   *\n   * @param config - Optional configuration for adding classifications. Contains the following properties.\n   * @returns A promise that resolves when the processing is complete.\n   */\n  async byModel(config) {\n    const fragments = this.components.get(FragmentsManager);\n    const classification = (config == null ? void 0 : config.classificationName) ?? \"Models\";\n    for (const [modelId, model] of fragments.list) {\n      if (config && config.modelIds && !config.modelIds.some((regex) => regex.test(modelId))) {\n        continue;\n      }\n      const localIds = await model.getItemsIdsWithGeometry();\n      const modelIdMap = { [modelId]: new Set(localIds) };\n      this.getGroupData(classification, modelId);\n      this.addGroupItems(classification, modelId, modelIdMap);\n    }\n  }\n  // /**\n  //  * Exports the computed classification to persists them and import them back\n  //  * later for faster loading.\n  //  */\n  // export() {\n  //   const exported: ExportedClassification = {};\n  //   for (const systemName in this.list) {\n  //     exported[systemName] = {};\n  //     const system = this.list[systemName];\n  //     for (const groupName in system) {\n  //       const group = system[groupName];\n  //       exported[systemName][groupName] = {\n  //         map: FRAGS.FragmentUtils.export(group.map),\n  //         name: group.name,\n  //         id: group.id,\n  //       };\n  //     }\n  //   }\n  //   return exported;\n  // }\n  // /**\n  //  * Imports a classification previously exported with .export().\n  //  * @param data the serialized classification to import.\n  //  */\n  // import(data: ExportedClassification) {\n  //   for (const systemName in data) {\n  //     if (!this.list[systemName]) {\n  //       this.list[systemName] = {};\n  //     }\n  //     const system = data[systemName];\n  //     for (const groupName in system) {\n  //       const group = system[groupName];\n  //       this.list[systemName][groupName] = {\n  //         map: FRAGS.FragmentUtils.import(group.map),\n  //         name: group.name,\n  //         id: group.id,\n  //       };\n  //     }\n  //   }\n  //\n};\n/**\n * A unique identifier for the component.\n * This UUID is used to register the component within the Components system.\n */\n__publicField(_Classifier, \"uuid\", \"e25a7f3c-46c4-4a14-9d3d-5115f24ebeb7\");\nlet Classifier = _Classifier;\nclass SimpleRaycaster {\n  constructor(components, world) {\n    /** {@link Component.enabled} */\n    __publicField(this, \"enabled\", true);\n    /** The components instance to which this Raycaster belongs. */\n    __publicField(this, \"components\");\n    /** {@link Disposable.onDisposed} */\n    __publicField(this, \"onDisposed\", new Event());\n    /** The position of the mouse in the screen. */\n    __publicField(this, \"mouse\");\n    /**\n     * A reference to the Three.js Raycaster instance.\n     * This is used for raycasting operations.\n     */\n    __publicField(this, \"three\", new THREE$1.Raycaster());\n    /**\n     * A reference to the world instance to which this Raycaster belongs.\n     * This is used to access the camera and meshes.\n     */\n    __publicField(this, \"world\");\n    const renderer = world.renderer;\n    if (!renderer) {\n      throw new Error(\"A renderer is needed for the raycaster to work!\");\n    }\n    this.world = world;\n    this.mouse = new Mouse(renderer.three.domElement);\n    this.components = components;\n  }\n  /** {@link Disposable.dispose} */\n  dispose() {\n    this.mouse.dispose();\n    this.onDisposed.trigger();\n    this.onDisposed.reset();\n  }\n  castRayToObjects(items = Array.from(this.world.meshes), position = this.mouse.position) {\n    if (!this.world) {\n      throw new Error(\"A world is needed to cast rays!\");\n    }\n    const camera = this.world.camera.three;\n    this.three.setFromCamera(position, camera);\n    return this.intersect(items);\n  }\n  /**\n   * Throws a ray from the camera to the mouse or touch event point and returns\n   * the first item found. This also takes into account the clipping planes\n   * used by the renderer.\n   *\n   * @param items - the [meshes](https://threejs.org/docs/#api/en/objects/Mesh)\n   * to query. If not provided, it will query all the meshes stored in\n   * {@link Components.meshes}.\n   * @param position - the screen position to use for raycasting. If not provided,\n   * the last pointer (mouse/touch) position will be used.\n   */\n  async castRay(data) {\n    const snappingClasses = data == null ? void 0 : data.snappingClasses;\n    const items = (data == null ? void 0 : data.items) ?? Array.from(this.world.meshes);\n    const position = (data == null ? void 0 : data.position) ?? this.mouse.position;\n    if (!this.world) {\n      throw new Error(\"A world is needed to cast rays!\");\n    }\n    const camera = this.world.camera.three;\n    const fragments = this.components.get(FragmentsManager);\n    const dom = this.world.renderer.three.domElement;\n    const mouse = this.mouse.rawPosition;\n    let fragResult = null;\n    if (fragments.initialized) {\n      fragResult = await fragments.raycast({\n        camera,\n        dom,\n        mouse,\n        snappingClasses\n      });\n      if (items.length === 0) {\n        return fragResult;\n      }\n    }\n    this.three.setFromCamera(position, camera);\n    const itemsResult = this.intersect(items);\n    if (!fragResult) {\n      return itemsResult;\n    }\n    if (!itemsResult) {\n      return fragResult;\n    }\n    if (itemsResult.distance < fragResult.distance) {\n      return itemsResult;\n    }\n    return fragResult;\n  }\n  // /**\n  //  * Casts a ray from a given origin in a given direction and returns the first item found.\n  //  * This method also takes into account the clipping planes used by the renderer.\n  //  *\n  //  * @param origin - The origin of the ray.\n  //  * @param direction - The direction of the ray.\n  //  * @param items - The meshes to query. If not provided, it will query all the meshes stored in {@link World.meshes}.\n  //  * @returns The first intersection found or `null` if no intersection was found.\n  //  */\n  // castRayFromVector(\n  //   origin: THREE.Vector3,\n  //   direction: THREE.Vector3,\n  //   items = Array.from(this.world.meshes),\n  // ) {\n  //   // TODO: Implement for fragmentsmodel\n  //   this.three.set(origin, direction);\n  //   return this.intersect(items);\n  // }\n  intersect(items = Array.from(this.world.meshes)) {\n    const result = this.three.intersectObjects(items);\n    const filtered = this.filterClippingPlanes(result);\n    return filtered.length > 0 ? filtered[0] : null;\n  }\n  filterClippingPlanes(objs) {\n    if (!this.world.renderer) {\n      throw new Error(\"Renderer not found!\");\n    }\n    const renderer = this.world.renderer.three;\n    if (!renderer.clippingPlanes) {\n      return objs;\n    }\n    const planes = renderer.clippingPlanes;\n    if (objs.length <= 0 || !planes || (planes == null ? void 0 : planes.length) <= 0)\n      return objs;\n    return objs.filter(\n      (elem) => planes.every((elem2) => elem2.distanceToPoint(elem.point) > 0)\n    );\n  }\n}\nconst _Raycasters = class _Raycasters extends Component {\n  constructor(components) {\n    super(components);\n    /** {@link Component.enabled} */\n    __publicField(this, \"enabled\", true);\n    /**\n     * A Map that stores raycasters for each world.\n     * The key is the world's UUID, and the value is the corresponding SimpleRaycaster instance.\n     */\n    __publicField(this, \"list\", /* @__PURE__ */ new Map());\n    /** {@link Disposable.onDisposed} */\n    __publicField(this, \"onDisposed\", new Event());\n    components.add(_Raycasters.uuid, this);\n  }\n  /**\n   * Retrieves a SimpleRaycaster instance for the given world.\n   * If a SimpleRaycaster instance already exists for the world, it will be returned.\n   * Otherwise, a new SimpleRaycaster instance will be created and added to the list.\n   *\n   * @param world - The world for which to retrieve or create a SimpleRaycaster instance.\n   * @returns The SimpleRaycaster instance for the given world.\n   */\n  get(world) {\n    if (this.list.has(world.uuid)) {\n      return this.list.get(world.uuid);\n    }\n    const raycaster = new SimpleRaycaster(this.components, world);\n    this.list.set(world.uuid, raycaster);\n    world.onDisposed.add(() => {\n      this.delete(world);\n    });\n    return raycaster;\n  }\n  /**\n   * Deletes the SimpleRaycaster instance associated with the given world.\n   * If a SimpleRaycaster instance exists for the given world, it will be disposed and removed from the list.\n   *\n   * @param world - The world for which to delete the SimpleRaycaster instance.\n   * @returns {void}\n   */\n  delete(world) {\n    const raycaster = this.list.get(world.uuid);\n    if (raycaster) {\n      raycaster.dispose();\n    }\n    this.list.delete(world.uuid);\n  }\n  /** {@link Disposable.dispose} */\n  dispose() {\n    for (const [_id, raycaster] of this.list) {\n      raycaster.dispose();\n    }\n    this.list.clear();\n    this.onDisposed.trigger();\n  }\n};\n/**\n * A unique identifier for the component.\n * This UUID is used to register the component within the Components system.\n */\n__publicField(_Raycasters, \"uuid\", \"d5d8bdf0-db25-4952-b951-b643af207ace\");\nlet Raycasters = _Raycasters;\nclass SimpleWorld extends Base {\n  constructor() {\n    super(...arguments);\n    __publicField(this, \"onCameraChanged\", new Event());\n    /**\n     * All the loaded [meshes](https://threejs.org/docs/#api/en/objects/Mesh). These meshes will be taken into account in operations like raycasting.\n     */\n    __publicField(this, \"meshes\", /* @__PURE__ */ new Set());\n    /** {@link Updateable.onAfterUpdate} */\n    __publicField(this, \"onAfterUpdate\", new Event());\n    /** {@link Updateable.onBeforeUpdate} */\n    __publicField(this, \"onBeforeUpdate\", new Event());\n    /** {@link Disposable.onDisposed} */\n    __publicField(this, \"onDisposed\", new Event());\n    /**\n     * Indicates whether the world is currently being disposed. This is useful to prevent trying to access world's elements when it's being disposed, which could cause errors when you dispose a world.\n     */\n    __publicField(this, \"isDisposing\", false);\n    /**\n     * Indicates whether the world is currently enabled.\n     * When disabled, the world will not be updated.\n     */\n    __publicField(this, \"enabled\", true);\n    __publicField(this, \"_dynamicAnchor\", false);\n    /**\n     * A unique identifier for the world. Is not meant to be changed at any moment.\n     */\n    __publicField(this, \"uuid\", UUID.create());\n    /**\n     * An optional name for the world.\n     */\n    __publicField(this, \"name\");\n    __publicField(this, \"_scene\");\n    __publicField(this, \"_camera\");\n    __publicField(this, \"_renderer\", null);\n    __publicField(this, \"onPointerDown\", async (event) => {\n      if (!this.camera.hasCameraControls()) {\n        throw new Error(\n          \"World: can't set dynamic anchor if the camera doesn't have controls.\"\n        );\n      }\n      const caster = this.components.get(Raycasters).get(this);\n      const result = await caster.castRay();\n      if (result && result.point && event.button === 0) {\n        this.camera.controls.setOrbitPoint(\n          result.point.x,\n          result.point.y,\n          result.point.z\n        );\n      }\n    });\n    __publicField(this, \"_defaultCamera\");\n  }\n  set dynamicAnchor(value) {\n    var _a2;\n    const container = (_a2 = this.renderer) == null ? void 0 : _a2.three.domElement.parentElement;\n    if (!container) {\n      throw new Error(\n        \"World: the renderer must have a parentElement to set dynamic anchoring.\"\n      );\n    }\n    if (value) {\n      if (this.camera.controls)\n        this.camera.controls.minDistance = 0.01;\n      container.addEventListener(\"pointerdown\", this.onPointerDown);\n    } else {\n      container.removeEventListener(\"pointerdown\", this.onPointerDown);\n    }\n  }\n  get dynamicAnchor() {\n    return this._dynamicAnchor;\n  }\n  get defaultCamera() {\n    if (!this._defaultCamera) {\n      throw new Error(\"World: there is no default camera defined.\");\n    }\n    return this._defaultCamera;\n  }\n  set defaultCamera(value) {\n    this._defaultCamera = value;\n  }\n  /**\n   * Getter for the scene. If no scene is initialized, it throws an error.\n   * @returns The current scene.\n   */\n  get scene() {\n    if (!this._scene) {\n      throw new Error(\"No scene initialized!\");\n    }\n    return this._scene;\n  }\n  /**\n   * Setter for the scene. It sets the current scene, adds the world to the scene's worlds set,\n   * sets the current world in the scene, and triggers the scene's onWorldChanged event with the added action.\n   * @param scene - The new scene to be set.\n   */\n  set scene(scene) {\n    this._scene = scene;\n    scene.worlds.set(this.uuid, this);\n    scene.currentWorld = this;\n    scene.onWorldChanged.trigger({ world: this, action: \"added\" });\n  }\n  /**\n   * Getter for the camera. If no camera is initialized, it throws an error.\n   * @returns The current camera.\n   */\n  get camera() {\n    if (!this._camera) {\n      throw new Error(\"No camera initialized!\");\n    }\n    return this._camera;\n  }\n  /**\n   * Setter for the camera. It sets the current camera, adds the world to the camera's worlds set,\n   * sets the current world in the camera, and triggers the camera's onWorldChanged event with the added action.\n   * @param camera - The new camera to be set.\n   */\n  set camera(camera) {\n    if (!this._camera)\n      this.defaultCamera = camera;\n    this._camera = camera;\n    camera.currentWorld = this;\n    this.onCameraChanged.trigger(camera);\n  }\n  /**\n   * Getter for the renderer.\n   * @returns The current renderer or null if no renderer is set. Some worlds don't need a renderer to work (when your mail goal is not to display a 3D viewport to the user).\n   */\n  get renderer() {\n    return this._renderer;\n  }\n  /**\n   * Setter for the renderer. It sets the current renderer, adds the world to the renderer's worlds set,\n   * sets the current world in the renderer, and triggers the renderer's onWorldChanged event with the added action.\n   * If a new renderer is set, it also triggers the onWorldChanged event with the removed action for the old renderer.\n   * @param renderer - The new renderer to be set or null to remove the current renderer.\n   */\n  set renderer(renderer) {\n    this._renderer = renderer;\n    if (renderer) {\n      renderer.worlds.set(this.uuid, this);\n      renderer.currentWorld = this;\n      renderer.onWorldChanged.trigger({ world: this, action: \"added\" });\n    }\n  }\n  useDefaultCamera() {\n    this.camera = this.defaultCamera;\n  }\n  /** {@link Updateable.update} */\n  update(delta) {\n    if (!this.enabled)\n      return;\n    if (!this._scene || !this._camera) {\n      return;\n    }\n    this.scene.currentWorld = this;\n    this.camera.currentWorld = this;\n    if (this.renderer) {\n      this.renderer.currentWorld = this;\n    }\n    this.onBeforeUpdate.trigger();\n    if (this.scene.isUpdateable()) {\n      this.scene.update(delta);\n    }\n    if (this.camera.isUpdateable()) {\n      this.camera.update(delta);\n    }\n    if (this.renderer) {\n      this.renderer.update(delta);\n    }\n    this.onAfterUpdate.trigger();\n  }\n  /** {@link Disposable.dispose} */\n  dispose(disposeResources = true) {\n    this.enabled = false;\n    this.isDisposing = true;\n    this.scene.onWorldChanged.trigger({ world: this, action: \"removed\" });\n    this.camera.onWorldChanged.trigger({ world: this, action: \"removed\" });\n    if (this.renderer) {\n      this.renderer.onWorldChanged.trigger({ world: this, action: \"removed\" });\n    }\n    if (disposeResources) {\n      const disposer = this.components.get(Disposer);\n      this.scene.dispose();\n      if (this.camera.isDisposeable()) {\n        this.camera.dispose();\n      }\n      if (this.renderer) {\n        this.renderer.dispose();\n      }\n      for (const mesh of this.meshes) {\n        disposer.destroy(mesh);\n      }\n      this.meshes.clear();\n    }\n    this._scene = null;\n    this._camera = null;\n    this._renderer = null;\n    const worlds = this.components.get(Worlds);\n    worlds.list.delete(this.uuid);\n    this.onDisposed.trigger();\n    this.onDisposed.reset();\n  }\n}\nclass DirectionalLightConfig {\n  constructor(list, scene) {\n    __publicField(this, \"_list\");\n    __publicField(this, \"_scene\");\n    this._list = list;\n    this._scene = scene;\n  }\n  get color() {\n    return this._list.directionalLight.color.value;\n  }\n  set color(value) {\n    this._list.directionalLight.color.value = value;\n    for (const [, light] of this._scene.directionalLights) {\n      light.color.copy(value);\n    }\n  }\n  get intensity() {\n    return this._list.directionalLight.intensity.value;\n  }\n  set intensity(value) {\n    this._list.directionalLight.intensity.value = value;\n    for (const [, light] of this._scene.directionalLights) {\n      light.intensity = value;\n    }\n  }\n  get position() {\n    return this._list.directionalLight.position.value.clone();\n  }\n  set position(value) {\n    this._list.directionalLight.position.value = value;\n    for (const [, light] of this._scene.directionalLights) {\n      light.position.copy(value);\n    }\n  }\n}\nclass AmbientLightConfig {\n  constructor(list, scene) {\n    __publicField(this, \"_list\");\n    __publicField(this, \"_scene\");\n    this._list = list;\n    this._scene = scene;\n  }\n  get color() {\n    return this._list.ambientLight.color.value;\n  }\n  set color(value) {\n    this._list.ambientLight.color.value = value;\n    for (const [, light] of this._scene.ambientLights) {\n      light.color.copy(value);\n    }\n  }\n  get intensity() {\n    return this._list.ambientLight.intensity.value;\n  }\n  set intensity(value) {\n    this._list.ambientLight.intensity.value = value;\n    for (const [, light] of this._scene.ambientLights) {\n      light.intensity = value;\n    }\n  }\n}\nclass SimpleSceneConfigManager extends Configurator {\n  constructor() {\n    super(...arguments);\n    __publicField(this, \"_config\", {\n      backgroundColor: {\n        value: new THREE$1.Color(),\n        type: \"Color\"\n      },\n      ambientLight: {\n        color: {\n          type: \"Color\",\n          value: new THREE$1.Color()\n        },\n        intensity: {\n          type: \"Number\",\n          interpolable: true,\n          min: 0,\n          max: 10,\n          value: 2\n        }\n      },\n      directionalLight: {\n        color: {\n          type: \"Color\",\n          value: new THREE$1.Color()\n        },\n        intensity: {\n          type: \"Number\",\n          interpolable: true,\n          min: 0,\n          max: 10,\n          value: 2\n        },\n        position: {\n          type: \"Vector3\",\n          value: new THREE$1.Vector3()\n        }\n      }\n    });\n    __publicField(this, \"ambientLight\", new AmbientLightConfig(this._config, this._component));\n    __publicField(this, \"directionalLight\", new DirectionalLightConfig(this._config, this._component));\n  }\n  get backgroundColor() {\n    return this._config.backgroundColor.value;\n  }\n  set backgroundColor(value) {\n    this._config.backgroundColor.value = value;\n    this._component.three.background = value;\n  }\n}\nclass SimpleScene extends BaseScene {\n  constructor(components) {\n    super(components);\n    /** {@link Configurable.onSetup} */\n    __publicField(this, \"onSetup\", new Event());\n    /** {@link Configurable.isSetup} */\n    __publicField(this, \"isSetup\", false);\n    /**\n     * The underlying Three.js scene object.\n     * It is used to define the 3D space containing objects, lights, and cameras.\n     */\n    __publicField(this, \"three\");\n    /** {@link Configurable.config} */\n    __publicField(this, \"config\", new SimpleSceneConfigManager(this, this.components, \"Scene\"));\n    __publicField(this, \"_defaultConfig\", {\n      backgroundColor: new THREE$1.Color(2107698),\n      directionalLight: {\n        color: new THREE$1.Color(\"white\"),\n        intensity: 1.5,\n        position: new THREE$1.Vector3(5, 10, 3)\n      },\n      ambientLight: {\n        color: new THREE$1.Color(\"white\"),\n        intensity: 1\n      }\n    });\n    this.three = new THREE$1.Scene();\n    this.three.background = new THREE$1.Color(2107698);\n  }\n  /** {@link Configurable.setup} */\n  setup(config) {\n    const fullConfig = { ...this._defaultConfig, ...config };\n    this.config.backgroundColor = fullConfig.backgroundColor;\n    const ambLightData = fullConfig.ambientLight;\n    this.config.ambientLight.color = ambLightData.color;\n    this.config.ambientLight.intensity = ambLightData.intensity;\n    const dirLightData = fullConfig.directionalLight;\n    this.config.directionalLight.color = dirLightData.color;\n    this.config.directionalLight.intensity = dirLightData.intensity;\n    this.config.directionalLight.position = dirLightData.position;\n    this.deleteAllLights();\n    const { color: dc, intensity: di } = this.config.directionalLight;\n    const directionalLight = new THREE$1.DirectionalLight(dc, di);\n    directionalLight.position.copy(dirLightData.position);\n    const { color: ac, intensity: ai } = this.config.directionalLight;\n    const ambientLight = new THREE$1.AmbientLight(ac, ai);\n    this.three.add(directionalLight, ambientLight);\n    this.directionalLights.set(directionalLight.uuid, directionalLight);\n    this.ambientLights.set(ambientLight.uuid, ambientLight);\n    this.isSetup = true;\n    this.onSetup.trigger();\n  }\n  dispose() {\n    super.dispose();\n    const configs = this.components.get(ConfigManager);\n    configs.list.delete(this.config.uuid);\n  }\n}\nclass SimpleRenderer extends BaseRenderer {\n  /**\n   * Constructor for the SimpleRenderer class.\n   *\n   * @param components - The components instance.\n   * @param container - The HTML container where the THREE.js canvas will be rendered.\n   * @param parameters - Optional parameters for the THREE.js WebGLRenderer.\n   */\n  constructor(components, container, parameters) {\n    super(components);\n    /**\n     * Indicates whether the renderer is enabled. If it's not, it won't be updated.\n     * Default is `true`.\n     */\n    __publicField(this, \"enabled\", true);\n    /**\n     * The HTML container of the THREE.js canvas where the scene is rendered.\n     */\n    __publicField(this, \"container\");\n    /**\n     * The THREE.js WebGLRenderer instance.\n     */\n    __publicField(this, \"three\");\n    __publicField(this, \"_canvas\");\n    __publicField(this, \"_parameters\");\n    __publicField(this, \"_resizeObserver\", null);\n    __publicField(this, \"onContainerUpdated\", new Event());\n    __publicField(this, \"_resizing\", false);\n    /** {@link Resizeable.resize} */\n    __publicField(this, \"resize\", (size) => {\n      if (this._resizing)\n        return;\n      this._resizing = true;\n      this.onContainerUpdated.trigger();\n      const width = size ? size.x : this.container.clientWidth;\n      const height = size ? size.y : this.container.clientHeight;\n      this.three.setSize(width, height);\n      this.onResize.trigger(new THREE$1.Vector2(width, height));\n      this._resizing = false;\n    });\n    __publicField(this, \"resizeEvent\", () => {\n      this.resize();\n    });\n    __publicField(this, \"onContextLost\", (event) => {\n      event.preventDefault();\n      this.enabled = false;\n    });\n    __publicField(this, \"onContextBack\", () => {\n      this.three.setRenderTarget(null);\n      this.three.dispose();\n      this.three = new THREE$1.WebGLRenderer({\n        canvas: this._canvas,\n        antialias: true,\n        alpha: true,\n        ...this._parameters\n      });\n      this.enabled = true;\n    });\n    this.container = container;\n    this._parameters = parameters;\n    this.three = new THREE$1.WebGLRenderer({\n      antialias: true,\n      alpha: true,\n      ...parameters\n    });\n    this.three.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n    this.setupRenderer();\n    this.setupEvents(true);\n    this.resize();\n    this._canvas = this.three.domElement;\n    const context = this.three.getContext();\n    const { canvas } = context;\n    canvas.addEventListener(\"webglcontextlost\", this.onContextLost, false);\n    canvas.addEventListener(\"webglcontextrestored\", this.onContextBack, false);\n  }\n  /** {@link Updateable.update} */\n  update() {\n    if (!this.enabled || !this.currentWorld)\n      return;\n    this.onBeforeUpdate.trigger(this);\n    const scene = this.currentWorld.scene.three;\n    const camera = this.currentWorld.camera.three;\n    this.three.render(scene, camera);\n    this.onAfterUpdate.trigger(this);\n  }\n  /** {@link Disposable.dispose} */\n  dispose() {\n    this.enabled = false;\n    this.setupEvents(false);\n    this.three.domElement.remove();\n    this.three.forceContextLoss();\n    this.three.dispose();\n    this.onResize.reset();\n    this.onAfterUpdate.reset();\n    this.onBeforeUpdate.reset();\n    this.onDisposed.trigger();\n    this.onDisposed.reset();\n  }\n  /** {@link Resizeable.getSize}. */\n  getSize() {\n    return new THREE$1.Vector2(\n      this.three.domElement.clientWidth,\n      this.three.domElement.clientHeight\n    );\n  }\n  /**\n   * Sets up and manages the event listeners for the renderer.\n   *\n   * @param active - A boolean indicating whether to activate or deactivate the event listeners.\n   *\n   * @throws Will throw an error if the renderer does not have an HTML container.\n   */\n  setupEvents(active) {\n    const dom = this.three.domElement.parentElement;\n    if (!dom) {\n      throw new Error(\"This renderer needs to have an HTML container!\");\n    }\n    if (this._resizeObserver) {\n      this._resizeObserver.disconnect();\n      this._resizeObserver = null;\n    }\n    window.removeEventListener(\"resize\", this.resizeEvent);\n    if (active) {\n      this._resizeObserver = new ResizeObserver(this.resizeEvent);\n      this._resizeObserver.observe(dom);\n      window.addEventListener(\"resize\", this.resizeEvent);\n    }\n  }\n  setupRenderer() {\n    this.three.localClippingEnabled = true;\n    if (this.container) {\n      this.container.appendChild(this.three.domElement);\n    }\n    this.onContainerUpdated.trigger();\n  }\n}\n/*!\n * camera-controls\n * https://github.com/yomotsu/camera-controls\n * (c) 2017 @yomotsu\n * Released under the MIT License.\n */\nconst MOUSE_BUTTON = {\n  LEFT: 1,\n  RIGHT: 2,\n  MIDDLE: 4\n};\nconst ACTION = Object.freeze({\n  NONE: 0,\n  ROTATE: 1,\n  TRUCK: 2,\n  SCREEN_PAN: 4,\n  OFFSET: 8,\n  DOLLY: 16,\n  ZOOM: 32,\n  TOUCH_ROTATE: 64,\n  TOUCH_TRUCK: 128,\n  TOUCH_SCREEN_PAN: 256,\n  TOUCH_OFFSET: 512,\n  TOUCH_DOLLY: 1024,\n  TOUCH_ZOOM: 2048,\n  TOUCH_DOLLY_TRUCK: 4096,\n  TOUCH_DOLLY_SCREEN_PAN: 8192,\n  TOUCH_DOLLY_OFFSET: 16384,\n  TOUCH_DOLLY_ROTATE: 32768,\n  TOUCH_ZOOM_TRUCK: 65536,\n  TOUCH_ZOOM_OFFSET: 131072,\n  TOUCH_ZOOM_SCREEN_PAN: 262144,\n  TOUCH_ZOOM_ROTATE: 524288\n});\nconst DOLLY_DIRECTION = {\n  NONE: 0,\n  IN: 1,\n  OUT: -1\n};\nfunction isPerspectiveCamera(camera) {\n  return camera.isPerspectiveCamera;\n}\nfunction isOrthographicCamera(camera) {\n  return camera.isOrthographicCamera;\n}\nconst PI_2 = Math.PI * 2;\nconst PI_HALF = Math.PI / 2;\nconst EPSILON = 1e-5;\nconst DEG2RAD = Math.PI / 180;\nfunction clamp(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n}\nfunction approxZero(number, error = EPSILON) {\n  return Math.abs(number) < error;\n}\nfunction approxEquals(a, b, error = EPSILON) {\n  return approxZero(a - b, error);\n}\nfunction roundToStep(value, step) {\n  return Math.round(value / step) * step;\n}\nfunction infinityToMaxNumber(value) {\n  if (isFinite(value))\n    return value;\n  if (value < 0)\n    return -Number.MAX_VALUE;\n  return Number.MAX_VALUE;\n}\nfunction maxNumberToInfinity(value) {\n  if (Math.abs(value) < Number.MAX_VALUE)\n    return value;\n  return value * Infinity;\n}\nfunction smoothDamp(current, target, currentVelocityRef, smoothTime, maxSpeed = Infinity, deltaTime) {\n  smoothTime = Math.max(1e-4, smoothTime);\n  const omega = 2 / smoothTime;\n  const x = omega * deltaTime;\n  const exp = 1 / (1 + x + 0.48 * x * x + 0.235 * x * x * x);\n  let change = current - target;\n  const originalTo = target;\n  const maxChange = maxSpeed * smoothTime;\n  change = clamp(change, -maxChange, maxChange);\n  target = current - change;\n  const temp5 = (currentVelocityRef.value + omega * change) * deltaTime;\n  currentVelocityRef.value = (currentVelocityRef.value - omega * temp5) * exp;\n  let output = target + (change + temp5) * exp;\n  if (originalTo - current > 0 === output > originalTo) {\n    output = originalTo;\n    currentVelocityRef.value = (output - originalTo) / deltaTime;\n  }\n  return output;\n}\nfunction smoothDampVec3(current, target, currentVelocityRef, smoothTime, maxSpeed = Infinity, deltaTime, out) {\n  smoothTime = Math.max(1e-4, smoothTime);\n  const omega = 2 / smoothTime;\n  const x = omega * deltaTime;\n  const exp = 1 / (1 + x + 0.48 * x * x + 0.235 * x * x * x);\n  let targetX = target.x;\n  let targetY = target.y;\n  let targetZ = target.z;\n  let changeX = current.x - targetX;\n  let changeY = current.y - targetY;\n  let changeZ = current.z - targetZ;\n  const originalToX = targetX;\n  const originalToY = targetY;\n  const originalToZ = targetZ;\n  const maxChange = maxSpeed * smoothTime;\n  const maxChangeSq = maxChange * maxChange;\n  const magnitudeSq = changeX * changeX + changeY * changeY + changeZ * changeZ;\n  if (magnitudeSq > maxChangeSq) {\n    const magnitude = Math.sqrt(magnitudeSq);\n    changeX = changeX / magnitude * maxChange;\n    changeY = changeY / magnitude * maxChange;\n    changeZ = changeZ / magnitude * maxChange;\n  }\n  targetX = current.x - changeX;\n  targetY = current.y - changeY;\n  targetZ = current.z - changeZ;\n  const tempX = (currentVelocityRef.x + omega * changeX) * deltaTime;\n  const tempY = (currentVelocityRef.y + omega * changeY) * deltaTime;\n  const tempZ = (currentVelocityRef.z + omega * changeZ) * deltaTime;\n  currentVelocityRef.x = (currentVelocityRef.x - omega * tempX) * exp;\n  currentVelocityRef.y = (currentVelocityRef.y - omega * tempY) * exp;\n  currentVelocityRef.z = (currentVelocityRef.z - omega * tempZ) * exp;\n  out.x = targetX + (changeX + tempX) * exp;\n  out.y = targetY + (changeY + tempY) * exp;\n  out.z = targetZ + (changeZ + tempZ) * exp;\n  const origMinusCurrentX = originalToX - current.x;\n  const origMinusCurrentY = originalToY - current.y;\n  const origMinusCurrentZ = originalToZ - current.z;\n  const outMinusOrigX = out.x - originalToX;\n  const outMinusOrigY = out.y - originalToY;\n  const outMinusOrigZ = out.z - originalToZ;\n  if (origMinusCurrentX * outMinusOrigX + origMinusCurrentY * outMinusOrigY + origMinusCurrentZ * outMinusOrigZ > 0) {\n    out.x = originalToX;\n    out.y = originalToY;\n    out.z = originalToZ;\n    currentVelocityRef.x = (out.x - originalToX) / deltaTime;\n    currentVelocityRef.y = (out.y - originalToY) / deltaTime;\n    currentVelocityRef.z = (out.z - originalToZ) / deltaTime;\n  }\n  return out;\n}\nfunction extractClientCoordFromEvent(pointers, out) {\n  out.set(0, 0);\n  pointers.forEach((pointer) => {\n    out.x += pointer.clientX;\n    out.y += pointer.clientY;\n  });\n  out.x /= pointers.length;\n  out.y /= pointers.length;\n}\nfunction notSupportedInOrthographicCamera(camera, message) {\n  if (isOrthographicCamera(camera)) {\n    console.warn(`${message} is not supported in OrthographicCamera`);\n    return true;\n  }\n  return false;\n}\nclass EventDispatcher {\n  constructor() {\n    this._listeners = {};\n  }\n  /**\n   * Adds the specified event listener.\n   * @param type event name\n   * @param listener handler function\n   * @category Methods\n   */\n  addEventListener(type, listener) {\n    const listeners = this._listeners;\n    if (listeners[type] === void 0)\n      listeners[type] = [];\n    if (listeners[type].indexOf(listener) === -1)\n      listeners[type].push(listener);\n  }\n  /**\n   * Presence of the specified event listener.\n   * @param type event name\n   * @param listener handler function\n   * @category Methods\n   */\n  hasEventListener(type, listener) {\n    const listeners = this._listeners;\n    return listeners[type] !== void 0 && listeners[type].indexOf(listener) !== -1;\n  }\n  /**\n   * Removes the specified event listener\n   * @param type event name\n   * @param listener handler function\n   * @category Methods\n   */\n  removeEventListener(type, listener) {\n    const listeners = this._listeners;\n    const listenerArray = listeners[type];\n    if (listenerArray !== void 0) {\n      const index = listenerArray.indexOf(listener);\n      if (index !== -1)\n        listenerArray.splice(index, 1);\n    }\n  }\n  /**\n   * Removes all event listeners\n   * @param type event name\n   * @category Methods\n   */\n  removeAllEventListeners(type) {\n    if (!type) {\n      this._listeners = {};\n      return;\n    }\n    if (Array.isArray(this._listeners[type]))\n      this._listeners[type].length = 0;\n  }\n  /**\n   * Fire an event type.\n   * @param event DispatcherEvent\n   * @category Methods\n   */\n  dispatchEvent(event) {\n    const listeners = this._listeners;\n    const listenerArray = listeners[event.type];\n    if (listenerArray !== void 0) {\n      event.target = this;\n      const array = listenerArray.slice(0);\n      for (let i = 0, l = array.length; i < l; i++) {\n        array[i].call(this, event);\n      }\n    }\n  }\n}\nvar _a;\nconst VERSION = \"2.10.1\";\nconst TOUCH_DOLLY_FACTOR = 1 / 8;\nconst isMac = /Mac/.test((_a = globalThis === null || globalThis === void 0 ? void 0 : globalThis.navigator) === null || _a === void 0 ? void 0 : _a.platform);\nlet THREE;\nlet _ORIGIN;\nlet _AXIS_Y;\nlet _AXIS_Z;\nlet _v2$1;\nlet _v3A;\nlet _v3B;\nlet _v3C;\nlet _cameraDirection;\nlet _xColumn;\nlet _yColumn;\nlet _zColumn;\nlet _deltaTarget;\nlet _deltaOffset;\nlet _sphericalA;\nlet _sphericalB;\nlet _box3A;\nlet _box3B;\nlet _sphere;\nlet _quaternionA;\nlet _quaternionB;\nlet _rotationMatrix;\nlet _raycaster$1;\nclass CameraControls extends EventDispatcher {\n  /**\n       * Injects THREE as the dependency. You can then proceed to use CameraControls.\n       *\n       * e.g\n       * ```javascript\n       * CameraControls.install( { THREE: THREE } );\n       * ```\n       *\n       * Note: If you do not wish to use enter three.js to reduce file size(tree-shaking for example), make a subset to install.\n       *\n       * ```js\n       * import {\n       * \tVector2,\n       * \tVector3,\n       * \tVector4,\n       * \tQuaternion,\n       * \tMatrix4,\n       * \tSpherical,\n       * \tBox3,\n       * \tSphere,\n       * \tRaycaster,\n       * \tMathUtils,\n       * } from 'three';\n       *\n       * const subsetOfTHREE = {\n       * \tVector2   : Vector2,\n       * \tVector3   : Vector3,\n       * \tVector4   : Vector4,\n       * \tQuaternion: Quaternion,\n       * \tMatrix4   : Matrix4,\n       * \tSpherical : Spherical,\n       * \tBox3      : Box3,\n       * \tSphere    : Sphere,\n       * \tRaycaster : Raycaster,\n       * };\n  \n       * CameraControls.install( { THREE: subsetOfTHREE } );\n       * ```\n       * @category Statics\n       */\n  static install(libs) {\n    THREE = libs.THREE;\n    _ORIGIN = Object.freeze(new THREE.Vector3(0, 0, 0));\n    _AXIS_Y = Object.freeze(new THREE.Vector3(0, 1, 0));\n    _AXIS_Z = Object.freeze(new THREE.Vector3(0, 0, 1));\n    _v2$1 = new THREE.Vector2();\n    _v3A = new THREE.Vector3();\n    _v3B = new THREE.Vector3();\n    _v3C = new THREE.Vector3();\n    _cameraDirection = new THREE.Vector3();\n    _xColumn = new THREE.Vector3();\n    _yColumn = new THREE.Vector3();\n    _zColumn = new THREE.Vector3();\n    _deltaTarget = new THREE.Vector3();\n    _deltaOffset = new THREE.Vector3();\n    _sphericalA = new THREE.Spherical();\n    _sphericalB = new THREE.Spherical();\n    _box3A = new THREE.Box3();\n    _box3B = new THREE.Box3();\n    _sphere = new THREE.Sphere();\n    _quaternionA = new THREE.Quaternion();\n    _quaternionB = new THREE.Quaternion();\n    _rotationMatrix = new THREE.Matrix4();\n    _raycaster$1 = new THREE.Raycaster();\n  }\n  /**\n   * list all ACTIONs\n   * @category Statics\n   */\n  static get ACTION() {\n    return ACTION;\n  }\n  /**\n   * @deprecated Use `cameraControls.mouseButtons.left = CameraControls.ACTION.SCREEN_PAN` instead.\n   */\n  set verticalDragToForward(_) {\n    console.warn(\"camera-controls: `verticalDragToForward` was removed. Use `mouseButtons.left = CameraControls.ACTION.SCREEN_PAN` instead.\");\n  }\n  /**\n   * Creates a `CameraControls` instance.\n   *\n   * Note:\n   * You **must install** three.js before using camera-controls. see [#install](#install)\n   * Not doing so will lead to runtime errors (`undefined` references to THREE).\n   *\n   * e.g.\n   * ```\n   * CameraControls.install( { THREE } );\n   * const cameraControls = new CameraControls( camera, domElement );\n   * ```\n   *\n   * @param camera A `THREE.PerspectiveCamera` or `THREE.OrthographicCamera` to be controlled.\n   * @param domElement A `HTMLElement` for the draggable area, usually `renderer.domElement`.\n   * @category Constructor\n   */\n  constructor(camera, domElement) {\n    super();\n    this.minPolarAngle = 0;\n    this.maxPolarAngle = Math.PI;\n    this.minAzimuthAngle = -Infinity;\n    this.maxAzimuthAngle = Infinity;\n    this.minDistance = Number.EPSILON;\n    this.maxDistance = Infinity;\n    this.infinityDolly = false;\n    this.minZoom = 0.01;\n    this.maxZoom = Infinity;\n    this.smoothTime = 0.25;\n    this.draggingSmoothTime = 0.125;\n    this.maxSpeed = Infinity;\n    this.azimuthRotateSpeed = 1;\n    this.polarRotateSpeed = 1;\n    this.dollySpeed = 1;\n    this.dollyDragInverted = false;\n    this.truckSpeed = 2;\n    this.dollyToCursor = false;\n    this.dragToOffset = false;\n    this.boundaryFriction = 0;\n    this.restThreshold = 0.01;\n    this.colliderMeshes = [];\n    this.cancel = () => {\n    };\n    this._enabled = true;\n    this._state = ACTION.NONE;\n    this._viewport = null;\n    this._changedDolly = 0;\n    this._changedZoom = 0;\n    this._hasRested = true;\n    this._boundaryEnclosesCamera = false;\n    this._needsUpdate = true;\n    this._updatedLastTime = false;\n    this._elementRect = new DOMRect();\n    this._isDragging = false;\n    this._dragNeedsUpdate = true;\n    this._activePointers = [];\n    this._lockedPointer = null;\n    this._interactiveArea = new DOMRect(0, 0, 1, 1);\n    this._isUserControllingRotate = false;\n    this._isUserControllingDolly = false;\n    this._isUserControllingTruck = false;\n    this._isUserControllingOffset = false;\n    this._isUserControllingZoom = false;\n    this._lastDollyDirection = DOLLY_DIRECTION.NONE;\n    this._thetaVelocity = { value: 0 };\n    this._phiVelocity = { value: 0 };\n    this._radiusVelocity = { value: 0 };\n    this._targetVelocity = new THREE.Vector3();\n    this._focalOffsetVelocity = new THREE.Vector3();\n    this._zoomVelocity = { value: 0 };\n    this._truckInternal = (deltaX, deltaY, dragToOffset, screenSpacePanning) => {\n      let truckX;\n      let pedestalY;\n      if (isPerspectiveCamera(this._camera)) {\n        const offset = _v3A.copy(this._camera.position).sub(this._target);\n        const fov = this._camera.getEffectiveFOV() * DEG2RAD;\n        const targetDistance = offset.length() * Math.tan(fov * 0.5);\n        truckX = this.truckSpeed * deltaX * targetDistance / this._elementRect.height;\n        pedestalY = this.truckSpeed * deltaY * targetDistance / this._elementRect.height;\n      } else if (isOrthographicCamera(this._camera)) {\n        const camera2 = this._camera;\n        truckX = this.truckSpeed * deltaX * (camera2.right - camera2.left) / camera2.zoom / this._elementRect.width;\n        pedestalY = this.truckSpeed * deltaY * (camera2.top - camera2.bottom) / camera2.zoom / this._elementRect.height;\n      } else {\n        return;\n      }\n      if (screenSpacePanning) {\n        dragToOffset ? this.setFocalOffset(this._focalOffsetEnd.x + truckX, this._focalOffsetEnd.y, this._focalOffsetEnd.z, true) : this.truck(truckX, 0, true);\n        this.forward(-pedestalY, true);\n      } else {\n        dragToOffset ? this.setFocalOffset(this._focalOffsetEnd.x + truckX, this._focalOffsetEnd.y + pedestalY, this._focalOffsetEnd.z, true) : this.truck(truckX, pedestalY, true);\n      }\n    };\n    this._rotateInternal = (deltaX, deltaY) => {\n      const theta = PI_2 * this.azimuthRotateSpeed * deltaX / this._elementRect.height;\n      const phi = PI_2 * this.polarRotateSpeed * deltaY / this._elementRect.height;\n      this.rotate(theta, phi, true);\n    };\n    this._dollyInternal = (delta, x, y) => {\n      const dollyScale = Math.pow(0.95, -delta * this.dollySpeed);\n      const lastDistance = this._sphericalEnd.radius;\n      const distance = this._sphericalEnd.radius * dollyScale;\n      const clampedDistance = clamp(distance, this.minDistance, this.maxDistance);\n      const overflowedDistance = clampedDistance - distance;\n      if (this.infinityDolly && this.dollyToCursor) {\n        this._dollyToNoClamp(distance, true);\n      } else if (this.infinityDolly && !this.dollyToCursor) {\n        this.dollyInFixed(overflowedDistance, true);\n        this._dollyToNoClamp(clampedDistance, true);\n      } else {\n        this._dollyToNoClamp(clampedDistance, true);\n      }\n      if (this.dollyToCursor) {\n        this._changedDolly += (this.infinityDolly ? distance : clampedDistance) - lastDistance;\n        this._dollyControlCoord.set(x, y);\n      }\n      this._lastDollyDirection = Math.sign(-delta);\n    };\n    this._zoomInternal = (delta, x, y) => {\n      const zoomScale = Math.pow(0.95, delta * this.dollySpeed);\n      const lastZoom = this._zoom;\n      const zoom = this._zoom * zoomScale;\n      this.zoomTo(zoom, true);\n      if (this.dollyToCursor) {\n        this._changedZoom += zoom - lastZoom;\n        this._dollyControlCoord.set(x, y);\n      }\n    };\n    if (typeof THREE === \"undefined\") {\n      console.error(\"camera-controls: `THREE` is undefined. You must first run `CameraControls.install( { THREE: THREE } )`. Check the docs for further information.\");\n    }\n    this._camera = camera;\n    this._yAxisUpSpace = new THREE.Quaternion().setFromUnitVectors(this._camera.up, _AXIS_Y);\n    this._yAxisUpSpaceInverse = this._yAxisUpSpace.clone().invert();\n    this._state = ACTION.NONE;\n    this._target = new THREE.Vector3();\n    this._targetEnd = this._target.clone();\n    this._focalOffset = new THREE.Vector3();\n    this._focalOffsetEnd = this._focalOffset.clone();\n    this._spherical = new THREE.Spherical().setFromVector3(_v3A.copy(this._camera.position).applyQuaternion(this._yAxisUpSpace));\n    this._sphericalEnd = this._spherical.clone();\n    this._lastDistance = this._spherical.radius;\n    this._zoom = this._camera.zoom;\n    this._zoomEnd = this._zoom;\n    this._lastZoom = this._zoom;\n    this._nearPlaneCorners = [\n      new THREE.Vector3(),\n      new THREE.Vector3(),\n      new THREE.Vector3(),\n      new THREE.Vector3()\n    ];\n    this._updateNearPlaneCorners();\n    this._boundary = new THREE.Box3(new THREE.Vector3(-Infinity, -Infinity, -Infinity), new THREE.Vector3(Infinity, Infinity, Infinity));\n    this._cameraUp0 = this._camera.up.clone();\n    this._target0 = this._target.clone();\n    this._position0 = this._camera.position.clone();\n    this._zoom0 = this._zoom;\n    this._focalOffset0 = this._focalOffset.clone();\n    this._dollyControlCoord = new THREE.Vector2();\n    this.mouseButtons = {\n      left: ACTION.ROTATE,\n      middle: ACTION.DOLLY,\n      right: ACTION.TRUCK,\n      wheel: isPerspectiveCamera(this._camera) ? ACTION.DOLLY : isOrthographicCamera(this._camera) ? ACTION.ZOOM : ACTION.NONE\n    };\n    this.touches = {\n      one: ACTION.TOUCH_ROTATE,\n      two: isPerspectiveCamera(this._camera) ? ACTION.TOUCH_DOLLY_TRUCK : isOrthographicCamera(this._camera) ? ACTION.TOUCH_ZOOM_TRUCK : ACTION.NONE,\n      three: ACTION.TOUCH_TRUCK\n    };\n    const dragStartPosition = new THREE.Vector2();\n    const lastDragPosition = new THREE.Vector2();\n    const dollyStart = new THREE.Vector2();\n    const onPointerDown2 = (event) => {\n      if (!this._enabled || !this._domElement)\n        return;\n      if (this._interactiveArea.left !== 0 || this._interactiveArea.top !== 0 || this._interactiveArea.width !== 1 || this._interactiveArea.height !== 1) {\n        const elRect = this._domElement.getBoundingClientRect();\n        const left = event.clientX / elRect.width;\n        const top = event.clientY / elRect.height;\n        if (left < this._interactiveArea.left || left > this._interactiveArea.right || top < this._interactiveArea.top || top > this._interactiveArea.bottom)\n          return;\n      }\n      const mouseButton = event.pointerType !== \"mouse\" ? null : (event.buttons & MOUSE_BUTTON.LEFT) === MOUSE_BUTTON.LEFT ? MOUSE_BUTTON.LEFT : (event.buttons & MOUSE_BUTTON.MIDDLE) === MOUSE_BUTTON.MIDDLE ? MOUSE_BUTTON.MIDDLE : (event.buttons & MOUSE_BUTTON.RIGHT) === MOUSE_BUTTON.RIGHT ? MOUSE_BUTTON.RIGHT : null;\n      if (mouseButton !== null) {\n        const zombiePointer = this._findPointerByMouseButton(mouseButton);\n        zombiePointer && this._disposePointer(zombiePointer);\n      }\n      if ((event.buttons & MOUSE_BUTTON.LEFT) === MOUSE_BUTTON.LEFT && this._lockedPointer)\n        return;\n      const pointer = {\n        pointerId: event.pointerId,\n        clientX: event.clientX,\n        clientY: event.clientY,\n        deltaX: 0,\n        deltaY: 0,\n        mouseButton\n      };\n      this._activePointers.push(pointer);\n      this._domElement.ownerDocument.removeEventListener(\"pointermove\", onPointerMove2, { passive: false });\n      this._domElement.ownerDocument.removeEventListener(\"pointerup\", onPointerUp2);\n      this._domElement.ownerDocument.addEventListener(\"pointermove\", onPointerMove2, { passive: false });\n      this._domElement.ownerDocument.addEventListener(\"pointerup\", onPointerUp2);\n      this._isDragging = true;\n      startDragging(event);\n    };\n    const onPointerMove2 = (event) => {\n      if (event.cancelable)\n        event.preventDefault();\n      const pointerId = event.pointerId;\n      const pointer = this._lockedPointer || this._findPointerById(pointerId);\n      if (!pointer)\n        return;\n      pointer.clientX = event.clientX;\n      pointer.clientY = event.clientY;\n      pointer.deltaX = event.movementX;\n      pointer.deltaY = event.movementY;\n      this._state = 0;\n      if (event.pointerType === \"touch\") {\n        switch (this._activePointers.length) {\n          case 1:\n            this._state = this.touches.one;\n            break;\n          case 2:\n            this._state = this.touches.two;\n            break;\n          case 3:\n            this._state = this.touches.three;\n            break;\n        }\n      } else {\n        if (!this._isDragging && this._lockedPointer || this._isDragging && (event.buttons & MOUSE_BUTTON.LEFT) === MOUSE_BUTTON.LEFT) {\n          this._state = this._state | this.mouseButtons.left;\n        }\n        if (this._isDragging && (event.buttons & MOUSE_BUTTON.MIDDLE) === MOUSE_BUTTON.MIDDLE) {\n          this._state = this._state | this.mouseButtons.middle;\n        }\n        if (this._isDragging && (event.buttons & MOUSE_BUTTON.RIGHT) === MOUSE_BUTTON.RIGHT) {\n          this._state = this._state | this.mouseButtons.right;\n        }\n      }\n      dragging();\n    };\n    const onPointerUp2 = (event) => {\n      const pointer = this._findPointerById(event.pointerId);\n      if (pointer && pointer === this._lockedPointer)\n        return;\n      pointer && this._disposePointer(pointer);\n      if (event.pointerType === \"touch\") {\n        switch (this._activePointers.length) {\n          case 0:\n            this._state = ACTION.NONE;\n            break;\n          case 1:\n            this._state = this.touches.one;\n            break;\n          case 2:\n            this._state = this.touches.two;\n            break;\n          case 3:\n            this._state = this.touches.three;\n            break;\n        }\n      } else {\n        this._state = ACTION.NONE;\n      }\n      endDragging();\n    };\n    let lastScrollTimeStamp = -1;\n    const onMouseWheel = (event) => {\n      if (!this._domElement)\n        return;\n      if (!this._enabled || this.mouseButtons.wheel === ACTION.NONE)\n        return;\n      if (this._interactiveArea.left !== 0 || this._interactiveArea.top !== 0 || this._interactiveArea.width !== 1 || this._interactiveArea.height !== 1) {\n        const elRect = this._domElement.getBoundingClientRect();\n        const left = event.clientX / elRect.width;\n        const top = event.clientY / elRect.height;\n        if (left < this._interactiveArea.left || left > this._interactiveArea.right || top < this._interactiveArea.top || top > this._interactiveArea.bottom)\n          return;\n      }\n      event.preventDefault();\n      if (this.dollyToCursor || this.mouseButtons.wheel === ACTION.ROTATE || this.mouseButtons.wheel === ACTION.TRUCK) {\n        const now = performance.now();\n        if (lastScrollTimeStamp - now < 1e3)\n          this._getClientRect(this._elementRect);\n        lastScrollTimeStamp = now;\n      }\n      const deltaYFactor = isMac ? -1 : -3;\n      const delta = event.deltaMode === 1 || event.ctrlKey ? event.deltaY / deltaYFactor : event.deltaY / (deltaYFactor * 10);\n      const x = this.dollyToCursor ? (event.clientX - this._elementRect.x) / this._elementRect.width * 2 - 1 : 0;\n      const y = this.dollyToCursor ? (event.clientY - this._elementRect.y) / this._elementRect.height * -2 + 1 : 0;\n      switch (this.mouseButtons.wheel) {\n        case ACTION.ROTATE: {\n          this._rotateInternal(event.deltaX, event.deltaY);\n          this._isUserControllingRotate = true;\n          break;\n        }\n        case ACTION.TRUCK: {\n          this._truckInternal(event.deltaX, event.deltaY, false, false);\n          this._isUserControllingTruck = true;\n          break;\n        }\n        case ACTION.SCREEN_PAN: {\n          this._truckInternal(event.deltaX, event.deltaY, false, true);\n          this._isUserControllingTruck = true;\n          break;\n        }\n        case ACTION.OFFSET: {\n          this._truckInternal(event.deltaX, event.deltaY, true, false);\n          this._isUserControllingOffset = true;\n          break;\n        }\n        case ACTION.DOLLY: {\n          this._dollyInternal(-delta, x, y);\n          this._isUserControllingDolly = true;\n          break;\n        }\n        case ACTION.ZOOM: {\n          this._zoomInternal(-delta, x, y);\n          this._isUserControllingZoom = true;\n          break;\n        }\n      }\n      this.dispatchEvent({ type: \"control\" });\n    };\n    const onContextMenu = (event) => {\n      if (!this._domElement || !this._enabled)\n        return;\n      if (this.mouseButtons.right === CameraControls.ACTION.NONE) {\n        const pointerId = event instanceof PointerEvent ? event.pointerId : 0;\n        const pointer = this._findPointerById(pointerId);\n        pointer && this._disposePointer(pointer);\n        this._domElement.ownerDocument.removeEventListener(\"pointermove\", onPointerMove2, { passive: false });\n        this._domElement.ownerDocument.removeEventListener(\"pointerup\", onPointerUp2);\n        return;\n      }\n      event.preventDefault();\n    };\n    const startDragging = (event) => {\n      if (!this._enabled)\n        return;\n      extractClientCoordFromEvent(this._activePointers, _v2$1);\n      this._getClientRect(this._elementRect);\n      dragStartPosition.copy(_v2$1);\n      lastDragPosition.copy(_v2$1);\n      const isMultiTouch = this._activePointers.length >= 2;\n      if (isMultiTouch) {\n        const dx = _v2$1.x - this._activePointers[1].clientX;\n        const dy = _v2$1.y - this._activePointers[1].clientY;\n        const distance = Math.sqrt(dx * dx + dy * dy);\n        dollyStart.set(0, distance);\n        const x = (this._activePointers[0].clientX + this._activePointers[1].clientX) * 0.5;\n        const y = (this._activePointers[0].clientY + this._activePointers[1].clientY) * 0.5;\n        lastDragPosition.set(x, y);\n      }\n      this._state = 0;\n      if (!event) {\n        if (this._lockedPointer)\n          this._state = this._state | this.mouseButtons.left;\n      } else if (\"pointerType\" in event && event.pointerType === \"touch\") {\n        switch (this._activePointers.length) {\n          case 1:\n            this._state = this.touches.one;\n            break;\n          case 2:\n            this._state = this.touches.two;\n            break;\n          case 3:\n            this._state = this.touches.three;\n            break;\n        }\n      } else {\n        if (!this._lockedPointer && (event.buttons & MOUSE_BUTTON.LEFT) === MOUSE_BUTTON.LEFT) {\n          this._state = this._state | this.mouseButtons.left;\n        }\n        if ((event.buttons & MOUSE_BUTTON.MIDDLE) === MOUSE_BUTTON.MIDDLE) {\n          this._state = this._state | this.mouseButtons.middle;\n        }\n        if ((event.buttons & MOUSE_BUTTON.RIGHT) === MOUSE_BUTTON.RIGHT) {\n          this._state = this._state | this.mouseButtons.right;\n        }\n      }\n      if ((this._state & ACTION.ROTATE) === ACTION.ROTATE || (this._state & ACTION.TOUCH_ROTATE) === ACTION.TOUCH_ROTATE || (this._state & ACTION.TOUCH_DOLLY_ROTATE) === ACTION.TOUCH_DOLLY_ROTATE || (this._state & ACTION.TOUCH_ZOOM_ROTATE) === ACTION.TOUCH_ZOOM_ROTATE) {\n        this._sphericalEnd.theta = this._spherical.theta;\n        this._sphericalEnd.phi = this._spherical.phi;\n        this._thetaVelocity.value = 0;\n        this._phiVelocity.value = 0;\n      }\n      if ((this._state & ACTION.TRUCK) === ACTION.TRUCK || (this._state & ACTION.SCREEN_PAN) === ACTION.SCREEN_PAN || (this._state & ACTION.TOUCH_TRUCK) === ACTION.TOUCH_TRUCK || (this._state & ACTION.TOUCH_SCREEN_PAN) === ACTION.TOUCH_SCREEN_PAN || (this._state & ACTION.TOUCH_DOLLY_TRUCK) === ACTION.TOUCH_DOLLY_TRUCK || (this._state & ACTION.TOUCH_DOLLY_SCREEN_PAN) === ACTION.TOUCH_DOLLY_SCREEN_PAN || (this._state & ACTION.TOUCH_ZOOM_TRUCK) === ACTION.TOUCH_ZOOM_TRUCK || (this._state & ACTION.TOUCH_ZOOM_SCREEN_PAN) === ACTION.TOUCH_DOLLY_SCREEN_PAN) {\n        this._targetEnd.copy(this._target);\n        this._targetVelocity.set(0, 0, 0);\n      }\n      if ((this._state & ACTION.DOLLY) === ACTION.DOLLY || (this._state & ACTION.TOUCH_DOLLY) === ACTION.TOUCH_DOLLY || (this._state & ACTION.TOUCH_DOLLY_TRUCK) === ACTION.TOUCH_DOLLY_TRUCK || (this._state & ACTION.TOUCH_DOLLY_SCREEN_PAN) === ACTION.TOUCH_DOLLY_SCREEN_PAN || (this._state & ACTION.TOUCH_DOLLY_OFFSET) === ACTION.TOUCH_DOLLY_OFFSET || (this._state & ACTION.TOUCH_DOLLY_ROTATE) === ACTION.TOUCH_DOLLY_ROTATE) {\n        this._sphericalEnd.radius = this._spherical.radius;\n        this._radiusVelocity.value = 0;\n      }\n      if ((this._state & ACTION.ZOOM) === ACTION.ZOOM || (this._state & ACTION.TOUCH_ZOOM) === ACTION.TOUCH_ZOOM || (this._state & ACTION.TOUCH_ZOOM_TRUCK) === ACTION.TOUCH_ZOOM_TRUCK || (this._state & ACTION.TOUCH_ZOOM_SCREEN_PAN) === ACTION.TOUCH_ZOOM_SCREEN_PAN || (this._state & ACTION.TOUCH_ZOOM_OFFSET) === ACTION.TOUCH_ZOOM_OFFSET || (this._state & ACTION.TOUCH_ZOOM_ROTATE) === ACTION.TOUCH_ZOOM_ROTATE) {\n        this._zoomEnd = this._zoom;\n        this._zoomVelocity.value = 0;\n      }\n      if ((this._state & ACTION.OFFSET) === ACTION.OFFSET || (this._state & ACTION.TOUCH_OFFSET) === ACTION.TOUCH_OFFSET || (this._state & ACTION.TOUCH_DOLLY_OFFSET) === ACTION.TOUCH_DOLLY_OFFSET || (this._state & ACTION.TOUCH_ZOOM_OFFSET) === ACTION.TOUCH_ZOOM_OFFSET) {\n        this._focalOffsetEnd.copy(this._focalOffset);\n        this._focalOffsetVelocity.set(0, 0, 0);\n      }\n      this.dispatchEvent({ type: \"controlstart\" });\n    };\n    const dragging = () => {\n      if (!this._enabled || !this._dragNeedsUpdate)\n        return;\n      this._dragNeedsUpdate = false;\n      extractClientCoordFromEvent(this._activePointers, _v2$1);\n      const isPointerLockActive = this._domElement && this._domElement.ownerDocument.pointerLockElement === this._domElement;\n      const lockedPointer = isPointerLockActive ? this._lockedPointer || this._activePointers[0] : null;\n      const deltaX = lockedPointer ? -lockedPointer.deltaX : lastDragPosition.x - _v2$1.x;\n      const deltaY = lockedPointer ? -lockedPointer.deltaY : lastDragPosition.y - _v2$1.y;\n      lastDragPosition.copy(_v2$1);\n      if ((this._state & ACTION.ROTATE) === ACTION.ROTATE || (this._state & ACTION.TOUCH_ROTATE) === ACTION.TOUCH_ROTATE || (this._state & ACTION.TOUCH_DOLLY_ROTATE) === ACTION.TOUCH_DOLLY_ROTATE || (this._state & ACTION.TOUCH_ZOOM_ROTATE) === ACTION.TOUCH_ZOOM_ROTATE) {\n        this._rotateInternal(deltaX, deltaY);\n        this._isUserControllingRotate = true;\n      }\n      if ((this._state & ACTION.DOLLY) === ACTION.DOLLY || (this._state & ACTION.ZOOM) === ACTION.ZOOM) {\n        const dollyX = this.dollyToCursor ? (dragStartPosition.x - this._elementRect.x) / this._elementRect.width * 2 - 1 : 0;\n        const dollyY = this.dollyToCursor ? (dragStartPosition.y - this._elementRect.y) / this._elementRect.height * -2 + 1 : 0;\n        const dollyDirection = this.dollyDragInverted ? -1 : 1;\n        if ((this._state & ACTION.DOLLY) === ACTION.DOLLY) {\n          this._dollyInternal(dollyDirection * deltaY * TOUCH_DOLLY_FACTOR, dollyX, dollyY);\n          this._isUserControllingDolly = true;\n        } else {\n          this._zoomInternal(dollyDirection * deltaY * TOUCH_DOLLY_FACTOR, dollyX, dollyY);\n          this._isUserControllingZoom = true;\n        }\n      }\n      if ((this._state & ACTION.TOUCH_DOLLY) === ACTION.TOUCH_DOLLY || (this._state & ACTION.TOUCH_ZOOM) === ACTION.TOUCH_ZOOM || (this._state & ACTION.TOUCH_DOLLY_TRUCK) === ACTION.TOUCH_DOLLY_TRUCK || (this._state & ACTION.TOUCH_ZOOM_TRUCK) === ACTION.TOUCH_ZOOM_TRUCK || (this._state & ACTION.TOUCH_DOLLY_SCREEN_PAN) === ACTION.TOUCH_DOLLY_SCREEN_PAN || (this._state & ACTION.TOUCH_ZOOM_SCREEN_PAN) === ACTION.TOUCH_ZOOM_SCREEN_PAN || (this._state & ACTION.TOUCH_DOLLY_OFFSET) === ACTION.TOUCH_DOLLY_OFFSET || (this._state & ACTION.TOUCH_ZOOM_OFFSET) === ACTION.TOUCH_ZOOM_OFFSET || (this._state & ACTION.TOUCH_DOLLY_ROTATE) === ACTION.TOUCH_DOLLY_ROTATE || (this._state & ACTION.TOUCH_ZOOM_ROTATE) === ACTION.TOUCH_ZOOM_ROTATE) {\n        const dx = _v2$1.x - this._activePointers[1].clientX;\n        const dy = _v2$1.y - this._activePointers[1].clientY;\n        const distance = Math.sqrt(dx * dx + dy * dy);\n        const dollyDelta = dollyStart.y - distance;\n        dollyStart.set(0, distance);\n        const dollyX = this.dollyToCursor ? (lastDragPosition.x - this._elementRect.x) / this._elementRect.width * 2 - 1 : 0;\n        const dollyY = this.dollyToCursor ? (lastDragPosition.y - this._elementRect.y) / this._elementRect.height * -2 + 1 : 0;\n        if ((this._state & ACTION.TOUCH_DOLLY) === ACTION.TOUCH_DOLLY || (this._state & ACTION.TOUCH_DOLLY_ROTATE) === ACTION.TOUCH_DOLLY_ROTATE || (this._state & ACTION.TOUCH_DOLLY_TRUCK) === ACTION.TOUCH_DOLLY_TRUCK || (this._state & ACTION.TOUCH_DOLLY_SCREEN_PAN) === ACTION.TOUCH_DOLLY_SCREEN_PAN || (this._state & ACTION.TOUCH_DOLLY_OFFSET) === ACTION.TOUCH_DOLLY_OFFSET) {\n          this._dollyInternal(dollyDelta * TOUCH_DOLLY_FACTOR, dollyX, dollyY);\n          this._isUserControllingDolly = true;\n        } else {\n          this._zoomInternal(dollyDelta * TOUCH_DOLLY_FACTOR, dollyX, dollyY);\n          this._isUserControllingZoom = true;\n        }\n      }\n      if ((this._state & ACTION.TRUCK) === ACTION.TRUCK || (this._state & ACTION.TOUCH_TRUCK) === ACTION.TOUCH_TRUCK || (this._state & ACTION.TOUCH_DOLLY_TRUCK) === ACTION.TOUCH_DOLLY_TRUCK || (this._state & ACTION.TOUCH_ZOOM_TRUCK) === ACTION.TOUCH_ZOOM_TRUCK) {\n        this._truckInternal(deltaX, deltaY, false, false);\n        this._isUserControllingTruck = true;\n      }\n      if ((this._state & ACTION.SCREEN_PAN) === ACTION.SCREEN_PAN || (this._state & ACTION.TOUCH_SCREEN_PAN) === ACTION.TOUCH_SCREEN_PAN || (this._state & ACTION.TOUCH_DOLLY_SCREEN_PAN) === ACTION.TOUCH_DOLLY_SCREEN_PAN || (this._state & ACTION.TOUCH_ZOOM_SCREEN_PAN) === ACTION.TOUCH_ZOOM_SCREEN_PAN) {\n        this._truckInternal(deltaX, deltaY, false, true);\n        this._isUserControllingTruck = true;\n      }\n      if ((this._state & ACTION.OFFSET) === ACTION.OFFSET || (this._state & ACTION.TOUCH_OFFSET) === ACTION.TOUCH_OFFSET || (this._state & ACTION.TOUCH_DOLLY_OFFSET) === ACTION.TOUCH_DOLLY_OFFSET || (this._state & ACTION.TOUCH_ZOOM_OFFSET) === ACTION.TOUCH_ZOOM_OFFSET) {\n        this._truckInternal(deltaX, deltaY, true, false);\n        this._isUserControllingOffset = true;\n      }\n      this.dispatchEvent({ type: \"control\" });\n    };\n    const endDragging = () => {\n      extractClientCoordFromEvent(this._activePointers, _v2$1);\n      lastDragPosition.copy(_v2$1);\n      this._dragNeedsUpdate = false;\n      if (this._activePointers.length === 0 || this._activePointers.length === 1 && this._activePointers[0] === this._lockedPointer) {\n        this._isDragging = false;\n      }\n      if (this._activePointers.length === 0 && this._domElement) {\n        this._domElement.ownerDocument.removeEventListener(\"pointermove\", onPointerMove2, { passive: false });\n        this._domElement.ownerDocument.removeEventListener(\"pointerup\", onPointerUp2);\n        this.dispatchEvent({ type: \"controlend\" });\n      }\n    };\n    this.lockPointer = () => {\n      if (!this._enabled || !this._domElement)\n        return;\n      this.cancel();\n      this._lockedPointer = {\n        pointerId: -1,\n        clientX: 0,\n        clientY: 0,\n        deltaX: 0,\n        deltaY: 0,\n        mouseButton: null\n      };\n      this._activePointers.push(this._lockedPointer);\n      this._domElement.ownerDocument.removeEventListener(\"pointermove\", onPointerMove2, { passive: false });\n      this._domElement.ownerDocument.removeEventListener(\"pointerup\", onPointerUp2);\n      this._domElement.requestPointerLock();\n      this._domElement.ownerDocument.addEventListener(\"pointerlockchange\", onPointerLockChange);\n      this._domElement.ownerDocument.addEventListener(\"pointerlockerror\", onPointerLockError);\n      this._domElement.ownerDocument.addEventListener(\"pointermove\", onPointerMove2, { passive: false });\n      this._domElement.ownerDocument.addEventListener(\"pointerup\", onPointerUp2);\n      startDragging();\n    };\n    this.unlockPointer = () => {\n      var _a2, _b, _c;\n      if (this._lockedPointer !== null) {\n        this._disposePointer(this._lockedPointer);\n        this._lockedPointer = null;\n      }\n      (_a2 = this._domElement) === null || _a2 === void 0 ? void 0 : _a2.ownerDocument.exitPointerLock();\n      (_b = this._domElement) === null || _b === void 0 ? void 0 : _b.ownerDocument.removeEventListener(\"pointerlockchange\", onPointerLockChange);\n      (_c = this._domElement) === null || _c === void 0 ? void 0 : _c.ownerDocument.removeEventListener(\"pointerlockerror\", onPointerLockError);\n      this.cancel();\n    };\n    const onPointerLockChange = () => {\n      const isPointerLockActive = this._domElement && this._domElement.ownerDocument.pointerLockElement === this._domElement;\n      if (!isPointerLockActive)\n        this.unlockPointer();\n    };\n    const onPointerLockError = () => {\n      this.unlockPointer();\n    };\n    this._addAllEventListeners = (domElement2) => {\n      this._domElement = domElement2;\n      this._domElement.style.touchAction = \"none\";\n      this._domElement.style.userSelect = \"none\";\n      this._domElement.style.webkitUserSelect = \"none\";\n      this._domElement.addEventListener(\"pointerdown\", onPointerDown2);\n      this._domElement.addEventListener(\"pointercancel\", onPointerUp2);\n      this._domElement.addEventListener(\"wheel\", onMouseWheel, { passive: false });\n      this._domElement.addEventListener(\"contextmenu\", onContextMenu);\n    };\n    this._removeAllEventListeners = () => {\n      if (!this._domElement)\n        return;\n      this._domElement.style.touchAction = \"\";\n      this._domElement.style.userSelect = \"\";\n      this._domElement.style.webkitUserSelect = \"\";\n      this._domElement.removeEventListener(\"pointerdown\", onPointerDown2);\n      this._domElement.removeEventListener(\"pointercancel\", onPointerUp2);\n      this._domElement.removeEventListener(\"wheel\", onMouseWheel, { passive: false });\n      this._domElement.removeEventListener(\"contextmenu\", onContextMenu);\n      this._domElement.ownerDocument.removeEventListener(\"pointermove\", onPointerMove2, { passive: false });\n      this._domElement.ownerDocument.removeEventListener(\"pointerup\", onPointerUp2);\n      this._domElement.ownerDocument.removeEventListener(\"pointerlockchange\", onPointerLockChange);\n      this._domElement.ownerDocument.removeEventListener(\"pointerlockerror\", onPointerLockError);\n    };\n    this.cancel = () => {\n      if (this._state === ACTION.NONE)\n        return;\n      this._state = ACTION.NONE;\n      this._activePointers.length = 0;\n      endDragging();\n    };\n    if (domElement)\n      this.connect(domElement);\n    this.update(0);\n  }\n  /**\n   * The camera to be controlled\n   * @category Properties\n   */\n  get camera() {\n    return this._camera;\n  }\n  set camera(camera) {\n    this._camera = camera;\n    this.updateCameraUp();\n    this._camera.updateProjectionMatrix();\n    this._updateNearPlaneCorners();\n    this._needsUpdate = true;\n  }\n  /**\n   * Whether or not the controls are enabled.\n   * `false` to disable user dragging/touch-move, but all methods works.\n   * @category Properties\n   */\n  get enabled() {\n    return this._enabled;\n  }\n  set enabled(enabled) {\n    this._enabled = enabled;\n    if (!this._domElement)\n      return;\n    if (enabled) {\n      this._domElement.style.touchAction = \"none\";\n      this._domElement.style.userSelect = \"none\";\n      this._domElement.style.webkitUserSelect = \"none\";\n    } else {\n      this.cancel();\n      this._domElement.style.touchAction = \"\";\n      this._domElement.style.userSelect = \"\";\n      this._domElement.style.webkitUserSelect = \"\";\n    }\n  }\n  /**\n   * Returns `true` if the controls are active updating.\n   * readonly value.\n   * @category Properties\n   */\n  get active() {\n    return !this._hasRested;\n  }\n  /**\n   * Getter for the current `ACTION`.\n   * readonly value.\n   * @category Properties\n   */\n  get currentAction() {\n    return this._state;\n  }\n  /**\n   * get/set Current distance.\n   * @category Properties\n   */\n  get distance() {\n    return this._spherical.radius;\n  }\n  set distance(distance) {\n    if (this._spherical.radius === distance && this._sphericalEnd.radius === distance)\n      return;\n    this._spherical.radius = distance;\n    this._sphericalEnd.radius = distance;\n    this._needsUpdate = true;\n  }\n  // horizontal angle\n  /**\n   * get/set the azimuth angle (horizontal) in radians.\n   * Every 360 degrees turn is added to `.azimuthAngle` value, which is accumulative.\n   * @category Properties\n   */\n  get azimuthAngle() {\n    return this._spherical.theta;\n  }\n  set azimuthAngle(azimuthAngle) {\n    if (this._spherical.theta === azimuthAngle && this._sphericalEnd.theta === azimuthAngle)\n      return;\n    this._spherical.theta = azimuthAngle;\n    this._sphericalEnd.theta = azimuthAngle;\n    this._needsUpdate = true;\n  }\n  // vertical angle\n  /**\n   * get/set the polar angle (vertical) in radians.\n   * @category Properties\n   */\n  get polarAngle() {\n    return this._spherical.phi;\n  }\n  set polarAngle(polarAngle) {\n    if (this._spherical.phi === polarAngle && this._sphericalEnd.phi === polarAngle)\n      return;\n    this._spherical.phi = polarAngle;\n    this._sphericalEnd.phi = polarAngle;\n    this._needsUpdate = true;\n  }\n  /**\n   * Whether camera position should be enclosed in the boundary or not.\n   * @category Properties\n   */\n  get boundaryEnclosesCamera() {\n    return this._boundaryEnclosesCamera;\n  }\n  set boundaryEnclosesCamera(boundaryEnclosesCamera) {\n    this._boundaryEnclosesCamera = boundaryEnclosesCamera;\n    this._needsUpdate = true;\n  }\n  /**\n   * Set drag-start, touches and wheel enable area in the domElement.\n   * each values are between `0` and `1` inclusive, where `0` is left/top and `1` is right/bottom of the screen.\n   * e.g. `{ x: 0, y: 0, width: 1, height: 1 }` for entire area.\n   * @category Properties\n   */\n  set interactiveArea(interactiveArea) {\n    this._interactiveArea.width = clamp(interactiveArea.width, 0, 1);\n    this._interactiveArea.height = clamp(interactiveArea.height, 0, 1);\n    this._interactiveArea.x = clamp(interactiveArea.x, 0, 1 - this._interactiveArea.width);\n    this._interactiveArea.y = clamp(interactiveArea.y, 0, 1 - this._interactiveArea.height);\n  }\n  /**\n   * Adds the specified event listener.\n   * Applicable event types (which is `K`) are:\n   * | Event name          | Timing |\n   * | ------------------- | ------ |\n   * | `'controlstart'`    | When the user starts to control the camera via mouse / touches. ¹ |\n   * | `'control'`         | When the user controls the camera (dragging). |\n   * | `'controlend'`      | When the user ends to control the camera. ¹ |\n   * | `'transitionstart'` | When any kind of transition starts, either user control or using a method with `enableTransition = true` |\n   * | `'update'`          | When the camera position is updated. |\n   * | `'wake'`            | When the camera starts moving. |\n   * | `'rest'`            | When the camera movement is below `.restThreshold` ². |\n   * | `'sleep'`           | When the camera end moving. |\n   *\n   * 1. `mouseButtons.wheel` (Mouse wheel control) does not emit `'controlstart'` and `'controlend'`. `mouseButtons.wheel` uses scroll-event internally, and scroll-event happens intermittently. That means \"start\" and \"end\" cannot be detected.\n   * 2. Due to damping, `sleep` will usually fire a few seconds after the camera _appears_ to have stopped moving. If you want to do something (e.g. enable UI, perform another transition) at the point when the camera has stopped, you probably want the `rest` event. This can be fine tuned using the `.restThreshold` parameter. See the [Rest and Sleep Example](https://yomotsu.github.io/camera-controls/examples/rest-and-sleep.html).\n   *\n   * e.g.\n   * ```\n   * cameraControl.addEventListener( 'controlstart', myCallbackFunction );\n   * ```\n   * @param type event name\n   * @param listener handler function\n   * @category Methods\n   */\n  addEventListener(type, listener) {\n    super.addEventListener(type, listener);\n  }\n  /**\n   * Removes the specified event listener\n   * e.g.\n   * ```\n   * cameraControl.addEventListener( 'controlstart', myCallbackFunction );\n   * ```\n   * @param type event name\n   * @param listener handler function\n   * @category Methods\n   */\n  removeEventListener(type, listener) {\n    super.removeEventListener(type, listener);\n  }\n  /**\n   * Rotate azimuthal angle(horizontal) and polar angle(vertical).\n   * Every value is added to the current value.\n   * @param azimuthAngle Azimuth rotate angle. In radian.\n   * @param polarAngle Polar rotate angle. In radian.\n   * @param enableTransition Whether to move smoothly or immediately\n   * @category Methods\n   */\n  rotate(azimuthAngle, polarAngle, enableTransition = false) {\n    return this.rotateTo(this._sphericalEnd.theta + azimuthAngle, this._sphericalEnd.phi + polarAngle, enableTransition);\n  }\n  /**\n   * Rotate azimuthal angle(horizontal) to the given angle and keep the same polar angle(vertical) target.\n   *\n   * e.g.\n   * ```\n   * cameraControls.rotateAzimuthTo( 30 * THREE.MathUtils.DEG2RAD, true );\n   * ```\n   * @param azimuthAngle Azimuth rotate angle. In radian.\n   * @param enableTransition Whether to move smoothly or immediately\n   * @category Methods\n   */\n  rotateAzimuthTo(azimuthAngle, enableTransition = false) {\n    return this.rotateTo(azimuthAngle, this._sphericalEnd.phi, enableTransition);\n  }\n  /**\n   * Rotate polar angle(vertical) to the given angle and keep the same azimuthal angle(horizontal) target.\n   *\n   * e.g.\n   * ```\n   * cameraControls.rotatePolarTo( 30 * THREE.MathUtils.DEG2RAD, true );\n   * ```\n   * @param polarAngle Polar rotate angle. In radian.\n   * @param enableTransition Whether to move smoothly or immediately\n   * @category Methods\n   */\n  rotatePolarTo(polarAngle, enableTransition = false) {\n    return this.rotateTo(this._sphericalEnd.theta, polarAngle, enableTransition);\n  }\n  /**\n   * Rotate azimuthal angle(horizontal) and polar angle(vertical) to the given angle.\n   * Camera view will rotate over the orbit pivot absolutely:\n   *\n   * azimuthAngle\n   * ```\n   *       0º\n   *         \\\n   * 90º -----+----- -90º\n   *           \\\n   *           180º\n   * ```\n   * | direction | angle                  |\n   * | --------- | ---------------------- |\n   * | front     | 0º                     |\n   * | left      | 90º (`Math.PI / 2`)    |\n   * | right     | -90º (`- Math.PI / 2`) |\n   * | back      | 180º (`Math.PI`)       |\n   *\n   * polarAngle\n   * ```\n   *     180º\n   *      |\n   *      90º\n   *      |\n   *      0º\n   * ```\n   * | direction            | angle                  |\n   * | -------------------- | ---------------------- |\n   * | top/sky              | 180º (`Math.PI`)       |\n   * | horizontal from view | 90º (`Math.PI / 2`)    |\n   * | bottom/floor         | 0º                     |\n   *\n   * @param azimuthAngle Azimuth rotate angle to. In radian.\n   * @param polarAngle Polar rotate angle to. In radian.\n   * @param enableTransition  Whether to move smoothly or immediately\n   * @category Methods\n   */\n  rotateTo(azimuthAngle, polarAngle, enableTransition = false) {\n    this._isUserControllingRotate = false;\n    const theta = clamp(azimuthAngle, this.minAzimuthAngle, this.maxAzimuthAngle);\n    const phi = clamp(polarAngle, this.minPolarAngle, this.maxPolarAngle);\n    this._sphericalEnd.theta = theta;\n    this._sphericalEnd.phi = phi;\n    this._sphericalEnd.makeSafe();\n    this._needsUpdate = true;\n    if (!enableTransition) {\n      this._spherical.theta = this._sphericalEnd.theta;\n      this._spherical.phi = this._sphericalEnd.phi;\n    }\n    const resolveImmediately = !enableTransition || approxEquals(this._spherical.theta, this._sphericalEnd.theta, this.restThreshold) && approxEquals(this._spherical.phi, this._sphericalEnd.phi, this.restThreshold);\n    return this._createOnRestPromise(resolveImmediately);\n  }\n  /**\n   * Dolly in/out camera position.\n   * @param distance Distance of dollyIn. Negative number for dollyOut.\n   * @param enableTransition Whether to move smoothly or immediately.\n   * @category Methods\n   */\n  dolly(distance, enableTransition = false) {\n    return this.dollyTo(this._sphericalEnd.radius - distance, enableTransition);\n  }\n  /**\n   * Dolly in/out camera position to given distance.\n   * @param distance Distance of dolly.\n   * @param enableTransition Whether to move smoothly or immediately.\n   * @category Methods\n   */\n  dollyTo(distance, enableTransition = false) {\n    this._isUserControllingDolly = false;\n    this._lastDollyDirection = DOLLY_DIRECTION.NONE;\n    this._changedDolly = 0;\n    return this._dollyToNoClamp(clamp(distance, this.minDistance, this.maxDistance), enableTransition);\n  }\n  _dollyToNoClamp(distance, enableTransition = false) {\n    const lastRadius = this._sphericalEnd.radius;\n    const hasCollider = this.colliderMeshes.length >= 1;\n    if (hasCollider) {\n      const maxDistanceByCollisionTest = this._collisionTest();\n      const isCollided = approxEquals(maxDistanceByCollisionTest, this._spherical.radius);\n      const isDollyIn = lastRadius > distance;\n      if (!isDollyIn && isCollided)\n        return Promise.resolve();\n      this._sphericalEnd.radius = Math.min(distance, maxDistanceByCollisionTest);\n    } else {\n      this._sphericalEnd.radius = distance;\n    }\n    this._needsUpdate = true;\n    if (!enableTransition) {\n      this._spherical.radius = this._sphericalEnd.radius;\n    }\n    const resolveImmediately = !enableTransition || approxEquals(this._spherical.radius, this._sphericalEnd.radius, this.restThreshold);\n    return this._createOnRestPromise(resolveImmediately);\n  }\n  /**\n   * Dolly in, but does not change the distance between the target and the camera, and moves the target position instead.\n   * Specify a negative value for dolly out.\n   * @param distance Distance of dolly.\n   * @param enableTransition Whether to move smoothly or immediately.\n   * @category Methods\n   */\n  dollyInFixed(distance, enableTransition = false) {\n    this._targetEnd.add(this._getCameraDirection(_cameraDirection).multiplyScalar(distance));\n    if (!enableTransition) {\n      this._target.copy(this._targetEnd);\n    }\n    const resolveImmediately = !enableTransition || approxEquals(this._target.x, this._targetEnd.x, this.restThreshold) && approxEquals(this._target.y, this._targetEnd.y, this.restThreshold) && approxEquals(this._target.z, this._targetEnd.z, this.restThreshold);\n    return this._createOnRestPromise(resolveImmediately);\n  }\n  /**\n   * Zoom in/out camera. The value is added to camera zoom.\n   * Limits set with `.minZoom` and `.maxZoom`\n   * @param zoomStep zoom scale\n   * @param enableTransition Whether to move smoothly or immediately\n   * @category Methods\n   */\n  zoom(zoomStep, enableTransition = false) {\n    return this.zoomTo(this._zoomEnd + zoomStep, enableTransition);\n  }\n  /**\n   * Zoom in/out camera to given scale. The value overwrites camera zoom.\n   * Limits set with .minZoom and .maxZoom\n   * @param zoom\n   * @param enableTransition\n   * @category Methods\n   */\n  zoomTo(zoom, enableTransition = false) {\n    this._isUserControllingZoom = false;\n    this._zoomEnd = clamp(zoom, this.minZoom, this.maxZoom);\n    this._needsUpdate = true;\n    if (!enableTransition) {\n      this._zoom = this._zoomEnd;\n    }\n    const resolveImmediately = !enableTransition || approxEquals(this._zoom, this._zoomEnd, this.restThreshold);\n    this._changedZoom = 0;\n    return this._createOnRestPromise(resolveImmediately);\n  }\n  /**\n   * @deprecated `pan()` has been renamed to `truck()`\n   * @category Methods\n   */\n  pan(x, y, enableTransition = false) {\n    console.warn(\"`pan` has been renamed to `truck`\");\n    return this.truck(x, y, enableTransition);\n  }\n  /**\n   * Truck and pedestal camera using current azimuthal angle\n   * @param x Horizontal translate amount\n   * @param y Vertical translate amount\n   * @param enableTransition Whether to move smoothly or immediately\n   * @category Methods\n   */\n  truck(x, y, enableTransition = false) {\n    this._camera.updateMatrix();\n    _xColumn.setFromMatrixColumn(this._camera.matrix, 0);\n    _yColumn.setFromMatrixColumn(this._camera.matrix, 1);\n    _xColumn.multiplyScalar(x);\n    _yColumn.multiplyScalar(-y);\n    const offset = _v3A.copy(_xColumn).add(_yColumn);\n    const to = _v3B.copy(this._targetEnd).add(offset);\n    return this.moveTo(to.x, to.y, to.z, enableTransition);\n  }\n  /**\n   * Move forward / backward.\n   * @param distance Amount to move forward / backward. Negative value to move backward\n   * @param enableTransition Whether to move smoothly or immediately\n   * @category Methods\n   */\n  forward(distance, enableTransition = false) {\n    _v3A.setFromMatrixColumn(this._camera.matrix, 0);\n    _v3A.crossVectors(this._camera.up, _v3A);\n    _v3A.multiplyScalar(distance);\n    const to = _v3B.copy(this._targetEnd).add(_v3A);\n    return this.moveTo(to.x, to.y, to.z, enableTransition);\n  }\n  /**\n   * Move up / down.\n   * @param height Amount to move up / down. Negative value to move down\n   * @param enableTransition Whether to move smoothly or immediately\n   * @category Methods\n   */\n  elevate(height, enableTransition = false) {\n    _v3A.copy(this._camera.up).multiplyScalar(height);\n    return this.moveTo(this._targetEnd.x + _v3A.x, this._targetEnd.y + _v3A.y, this._targetEnd.z + _v3A.z, enableTransition);\n  }\n  /**\n   * Move target position to given point.\n   * @param x x coord to move center position\n   * @param y y coord to move center position\n   * @param z z coord to move center position\n   * @param enableTransition Whether to move smoothly or immediately\n   * @category Methods\n   */\n  moveTo(x, y, z, enableTransition = false) {\n    this._isUserControllingTruck = false;\n    const offset = _v3A.set(x, y, z).sub(this._targetEnd);\n    this._encloseToBoundary(this._targetEnd, offset, this.boundaryFriction);\n    this._needsUpdate = true;\n    if (!enableTransition) {\n      this._target.copy(this._targetEnd);\n    }\n    const resolveImmediately = !enableTransition || approxEquals(this._target.x, this._targetEnd.x, this.restThreshold) && approxEquals(this._target.y, this._targetEnd.y, this.restThreshold) && approxEquals(this._target.z, this._targetEnd.z, this.restThreshold);\n    return this._createOnRestPromise(resolveImmediately);\n  }\n  /**\n   * Look in the given point direction.\n   * @param x point x.\n   * @param y point y.\n   * @param z point z.\n   * @param enableTransition Whether to move smoothly or immediately.\n   * @returns Transition end promise\n   * @category Methods\n   */\n  lookInDirectionOf(x, y, z, enableTransition = false) {\n    const point = _v3A.set(x, y, z);\n    const direction = point.sub(this._targetEnd).normalize();\n    const position = direction.multiplyScalar(-this._sphericalEnd.radius).add(this._targetEnd);\n    return this.setPosition(position.x, position.y, position.z, enableTransition);\n  }\n  /**\n   * Fit the viewport to the box or the bounding box of the object, using the nearest axis. paddings are in unit.\n   * set `cover: true` to fill enter screen.\n   * e.g.\n   * ```\n   * cameraControls.fitToBox( myMesh );\n   * ```\n   * @param box3OrObject Axis aligned bounding box to fit the view.\n   * @param enableTransition Whether to move smoothly or immediately.\n   * @param options | `<object>` { cover: boolean, paddingTop: number, paddingLeft: number, paddingBottom: number, paddingRight: number }\n   * @returns Transition end promise\n   * @category Methods\n   */\n  fitToBox(box3OrObject, enableTransition, { cover = false, paddingLeft = 0, paddingRight = 0, paddingBottom = 0, paddingTop = 0 } = {}) {\n    const promises = [];\n    const aabb = box3OrObject.isBox3 ? _box3A.copy(box3OrObject) : _box3A.setFromObject(box3OrObject);\n    if (aabb.isEmpty()) {\n      console.warn(\"camera-controls: fitTo() cannot be used with an empty box. Aborting\");\n      Promise.resolve();\n    }\n    const theta = roundToStep(this._sphericalEnd.theta, PI_HALF);\n    const phi = roundToStep(this._sphericalEnd.phi, PI_HALF);\n    promises.push(this.rotateTo(theta, phi, enableTransition));\n    const normal = _v3A.setFromSpherical(this._sphericalEnd).normalize();\n    const rotation = _quaternionA.setFromUnitVectors(normal, _AXIS_Z);\n    const viewFromPolar = approxEquals(Math.abs(normal.y), 1);\n    if (viewFromPolar) {\n      rotation.multiply(_quaternionB.setFromAxisAngle(_AXIS_Y, theta));\n    }\n    rotation.multiply(this._yAxisUpSpaceInverse);\n    const bb = _box3B.makeEmpty();\n    _v3B.copy(aabb.min).applyQuaternion(rotation);\n    bb.expandByPoint(_v3B);\n    _v3B.copy(aabb.min).setX(aabb.max.x).applyQuaternion(rotation);\n    bb.expandByPoint(_v3B);\n    _v3B.copy(aabb.min).setY(aabb.max.y).applyQuaternion(rotation);\n    bb.expandByPoint(_v3B);\n    _v3B.copy(aabb.max).setZ(aabb.min.z).applyQuaternion(rotation);\n    bb.expandByPoint(_v3B);\n    _v3B.copy(aabb.min).setZ(aabb.max.z).applyQuaternion(rotation);\n    bb.expandByPoint(_v3B);\n    _v3B.copy(aabb.max).setY(aabb.min.y).applyQuaternion(rotation);\n    bb.expandByPoint(_v3B);\n    _v3B.copy(aabb.max).setX(aabb.min.x).applyQuaternion(rotation);\n    bb.expandByPoint(_v3B);\n    _v3B.copy(aabb.max).applyQuaternion(rotation);\n    bb.expandByPoint(_v3B);\n    bb.min.x -= paddingLeft;\n    bb.min.y -= paddingBottom;\n    bb.max.x += paddingRight;\n    bb.max.y += paddingTop;\n    rotation.setFromUnitVectors(_AXIS_Z, normal);\n    if (viewFromPolar) {\n      rotation.premultiply(_quaternionB.invert());\n    }\n    rotation.premultiply(this._yAxisUpSpace);\n    const bbSize = bb.getSize(_v3A);\n    const center = bb.getCenter(_v3B).applyQuaternion(rotation);\n    if (isPerspectiveCamera(this._camera)) {\n      const distance = this.getDistanceToFitBox(bbSize.x, bbSize.y, bbSize.z, cover);\n      promises.push(this.moveTo(center.x, center.y, center.z, enableTransition));\n      promises.push(this.dollyTo(distance, enableTransition));\n      promises.push(this.setFocalOffset(0, 0, 0, enableTransition));\n    } else if (isOrthographicCamera(this._camera)) {\n      const camera = this._camera;\n      const width = camera.right - camera.left;\n      const height = camera.top - camera.bottom;\n      const zoom = cover ? Math.max(width / bbSize.x, height / bbSize.y) : Math.min(width / bbSize.x, height / bbSize.y);\n      promises.push(this.moveTo(center.x, center.y, center.z, enableTransition));\n      promises.push(this.zoomTo(zoom, enableTransition));\n      promises.push(this.setFocalOffset(0, 0, 0, enableTransition));\n    }\n    return Promise.all(promises);\n  }\n  /**\n   * Fit the viewport to the sphere or the bounding sphere of the object.\n   * @param sphereOrMesh\n   * @param enableTransition\n   * @category Methods\n   */\n  fitToSphere(sphereOrMesh, enableTransition) {\n    const promises = [];\n    const isObject3D = \"isObject3D\" in sphereOrMesh;\n    const boundingSphere = isObject3D ? CameraControls.createBoundingSphere(sphereOrMesh, _sphere) : _sphere.copy(sphereOrMesh);\n    promises.push(this.moveTo(boundingSphere.center.x, boundingSphere.center.y, boundingSphere.center.z, enableTransition));\n    if (isPerspectiveCamera(this._camera)) {\n      const distanceToFit = this.getDistanceToFitSphere(boundingSphere.radius);\n      promises.push(this.dollyTo(distanceToFit, enableTransition));\n    } else if (isOrthographicCamera(this._camera)) {\n      const width = this._camera.right - this._camera.left;\n      const height = this._camera.top - this._camera.bottom;\n      const diameter = 2 * boundingSphere.radius;\n      const zoom = Math.min(width / diameter, height / diameter);\n      promises.push(this.zoomTo(zoom, enableTransition));\n    }\n    promises.push(this.setFocalOffset(0, 0, 0, enableTransition));\n    return Promise.all(promises);\n  }\n  /**\n   * Look at the `target` from the `position`.\n   * @param positionX\n   * @param positionY\n   * @param positionZ\n   * @param targetX\n   * @param targetY\n   * @param targetZ\n   * @param enableTransition\n   * @category Methods\n   */\n  setLookAt(positionX, positionY, positionZ, targetX, targetY, targetZ, enableTransition = false) {\n    this._isUserControllingRotate = false;\n    this._isUserControllingDolly = false;\n    this._isUserControllingTruck = false;\n    this._lastDollyDirection = DOLLY_DIRECTION.NONE;\n    this._changedDolly = 0;\n    const target = _v3B.set(targetX, targetY, targetZ);\n    const position = _v3A.set(positionX, positionY, positionZ);\n    this._targetEnd.copy(target);\n    this._sphericalEnd.setFromVector3(position.sub(target).applyQuaternion(this._yAxisUpSpace));\n    this.normalizeRotations();\n    this._needsUpdate = true;\n    if (!enableTransition) {\n      this._target.copy(this._targetEnd);\n      this._spherical.copy(this._sphericalEnd);\n    }\n    const resolveImmediately = !enableTransition || approxEquals(this._target.x, this._targetEnd.x, this.restThreshold) && approxEquals(this._target.y, this._targetEnd.y, this.restThreshold) && approxEquals(this._target.z, this._targetEnd.z, this.restThreshold) && approxEquals(this._spherical.theta, this._sphericalEnd.theta, this.restThreshold) && approxEquals(this._spherical.phi, this._sphericalEnd.phi, this.restThreshold) && approxEquals(this._spherical.radius, this._sphericalEnd.radius, this.restThreshold);\n    return this._createOnRestPromise(resolveImmediately);\n  }\n  /**\n   * Similar to setLookAt, but it interpolates between two states.\n   * @param positionAX\n   * @param positionAY\n   * @param positionAZ\n   * @param targetAX\n   * @param targetAY\n   * @param targetAZ\n   * @param positionBX\n   * @param positionBY\n   * @param positionBZ\n   * @param targetBX\n   * @param targetBY\n   * @param targetBZ\n   * @param t\n   * @param enableTransition\n   * @category Methods\n   */\n  lerpLookAt(positionAX, positionAY, positionAZ, targetAX, targetAY, targetAZ, positionBX, positionBY, positionBZ, targetBX, targetBY, targetBZ, t, enableTransition = false) {\n    this._isUserControllingRotate = false;\n    this._isUserControllingDolly = false;\n    this._isUserControllingTruck = false;\n    this._lastDollyDirection = DOLLY_DIRECTION.NONE;\n    this._changedDolly = 0;\n    const targetA = _v3A.set(targetAX, targetAY, targetAZ);\n    const positionA = _v3B.set(positionAX, positionAY, positionAZ);\n    _sphericalA.setFromVector3(positionA.sub(targetA).applyQuaternion(this._yAxisUpSpace));\n    const targetB = _v3C.set(targetBX, targetBY, targetBZ);\n    const positionB = _v3B.set(positionBX, positionBY, positionBZ);\n    _sphericalB.setFromVector3(positionB.sub(targetB).applyQuaternion(this._yAxisUpSpace));\n    this._targetEnd.copy(targetA.lerp(targetB, t));\n    const deltaTheta = _sphericalB.theta - _sphericalA.theta;\n    const deltaPhi = _sphericalB.phi - _sphericalA.phi;\n    const deltaRadius = _sphericalB.radius - _sphericalA.radius;\n    this._sphericalEnd.set(_sphericalA.radius + deltaRadius * t, _sphericalA.phi + deltaPhi * t, _sphericalA.theta + deltaTheta * t);\n    this.normalizeRotations();\n    this._needsUpdate = true;\n    if (!enableTransition) {\n      this._target.copy(this._targetEnd);\n      this._spherical.copy(this._sphericalEnd);\n    }\n    const resolveImmediately = !enableTransition || approxEquals(this._target.x, this._targetEnd.x, this.restThreshold) && approxEquals(this._target.y, this._targetEnd.y, this.restThreshold) && approxEquals(this._target.z, this._targetEnd.z, this.restThreshold) && approxEquals(this._spherical.theta, this._sphericalEnd.theta, this.restThreshold) && approxEquals(this._spherical.phi, this._sphericalEnd.phi, this.restThreshold) && approxEquals(this._spherical.radius, this._sphericalEnd.radius, this.restThreshold);\n    return this._createOnRestPromise(resolveImmediately);\n  }\n  /**\n   * Set angle and distance by given position.\n   * An alias of `setLookAt()`, without target change. Thus keep gazing at the current target\n   * @param positionX\n   * @param positionY\n   * @param positionZ\n   * @param enableTransition\n   * @category Methods\n   */\n  setPosition(positionX, positionY, positionZ, enableTransition = false) {\n    return this.setLookAt(positionX, positionY, positionZ, this._targetEnd.x, this._targetEnd.y, this._targetEnd.z, enableTransition);\n  }\n  /**\n   * Set the target position where gaze at.\n   * An alias of `setLookAt()`, without position change. Thus keep the same position.\n   * @param targetX\n   * @param targetY\n   * @param targetZ\n   * @param enableTransition\n   * @category Methods\n   */\n  setTarget(targetX, targetY, targetZ, enableTransition = false) {\n    const pos = this.getPosition(_v3A);\n    const promise = this.setLookAt(pos.x, pos.y, pos.z, targetX, targetY, targetZ, enableTransition);\n    this._sphericalEnd.phi = clamp(this._sphericalEnd.phi, this.minPolarAngle, this.maxPolarAngle);\n    return promise;\n  }\n  /**\n   * Set focal offset using the screen parallel coordinates. z doesn't affect in Orthographic as with Dolly.\n   * @param x\n   * @param y\n   * @param z\n   * @param enableTransition\n   * @category Methods\n   */\n  setFocalOffset(x, y, z, enableTransition = false) {\n    this._isUserControllingOffset = false;\n    this._focalOffsetEnd.set(x, y, z);\n    this._needsUpdate = true;\n    if (!enableTransition)\n      this._focalOffset.copy(this._focalOffsetEnd);\n    const resolveImmediately = !enableTransition || approxEquals(this._focalOffset.x, this._focalOffsetEnd.x, this.restThreshold) && approxEquals(this._focalOffset.y, this._focalOffsetEnd.y, this.restThreshold) && approxEquals(this._focalOffset.z, this._focalOffsetEnd.z, this.restThreshold);\n    return this._createOnRestPromise(resolveImmediately);\n  }\n  /**\n   * Set orbit point without moving the camera.\n   * SHOULD NOT RUN DURING ANIMATIONS. `setOrbitPoint()` will immediately fix the positions.\n   * @param targetX\n   * @param targetY\n   * @param targetZ\n   * @category Methods\n   */\n  setOrbitPoint(targetX, targetY, targetZ) {\n    this._camera.updateMatrixWorld();\n    _xColumn.setFromMatrixColumn(this._camera.matrixWorldInverse, 0);\n    _yColumn.setFromMatrixColumn(this._camera.matrixWorldInverse, 1);\n    _zColumn.setFromMatrixColumn(this._camera.matrixWorldInverse, 2);\n    const position = _v3A.set(targetX, targetY, targetZ);\n    const distance = position.distanceTo(this._camera.position);\n    const cameraToPoint = position.sub(this._camera.position);\n    _xColumn.multiplyScalar(cameraToPoint.x);\n    _yColumn.multiplyScalar(cameraToPoint.y);\n    _zColumn.multiplyScalar(cameraToPoint.z);\n    _v3A.copy(_xColumn).add(_yColumn).add(_zColumn);\n    _v3A.z = _v3A.z + distance;\n    this.dollyTo(distance, false);\n    this.setFocalOffset(-_v3A.x, _v3A.y, -_v3A.z, false);\n    this.moveTo(targetX, targetY, targetZ, false);\n  }\n  /**\n   * Set the boundary box that encloses the target of the camera. box3 is in THREE.Box3\n   * @param box3\n   * @category Methods\n   */\n  setBoundary(box3) {\n    if (!box3) {\n      this._boundary.min.set(-Infinity, -Infinity, -Infinity);\n      this._boundary.max.set(Infinity, Infinity, Infinity);\n      this._needsUpdate = true;\n      return;\n    }\n    this._boundary.copy(box3);\n    this._boundary.clampPoint(this._targetEnd, this._targetEnd);\n    this._needsUpdate = true;\n  }\n  /**\n   * Set (or unset) the current viewport.\n   * Set this when you want to use renderer viewport and .dollyToCursor feature at the same time.\n   * @param viewportOrX\n   * @param y\n   * @param width\n   * @param height\n   * @category Methods\n   */\n  setViewport(viewportOrX, y, width, height) {\n    if (viewportOrX === null) {\n      this._viewport = null;\n      return;\n    }\n    this._viewport = this._viewport || new THREE.Vector4();\n    if (typeof viewportOrX === \"number\") {\n      this._viewport.set(viewportOrX, y, width, height);\n    } else {\n      this._viewport.copy(viewportOrX);\n    }\n  }\n  /**\n   * Calculate the distance to fit the box.\n   * @param width box width\n   * @param height box height\n   * @param depth box depth\n   * @returns distance\n   * @category Methods\n   */\n  getDistanceToFitBox(width, height, depth, cover = false) {\n    if (notSupportedInOrthographicCamera(this._camera, \"getDistanceToFitBox\"))\n      return this._spherical.radius;\n    const boundingRectAspect = width / height;\n    const fov = this._camera.getEffectiveFOV() * DEG2RAD;\n    const aspect = this._camera.aspect;\n    const heightToFit = (cover ? boundingRectAspect > aspect : boundingRectAspect < aspect) ? height : width / aspect;\n    return heightToFit * 0.5 / Math.tan(fov * 0.5) + depth * 0.5;\n  }\n  /**\n   * Calculate the distance to fit the sphere.\n   * @param radius sphere radius\n   * @returns distance\n   * @category Methods\n   */\n  getDistanceToFitSphere(radius) {\n    if (notSupportedInOrthographicCamera(this._camera, \"getDistanceToFitSphere\"))\n      return this._spherical.radius;\n    const vFOV = this._camera.getEffectiveFOV() * DEG2RAD;\n    const hFOV = Math.atan(Math.tan(vFOV * 0.5) * this._camera.aspect) * 2;\n    const fov = 1 < this._camera.aspect ? vFOV : hFOV;\n    return radius / Math.sin(fov * 0.5);\n  }\n  /**\n   * Returns the orbit center position, where the camera looking at.\n   * @param out The receiving Vector3 instance to copy the result\n   * @param receiveEndValue Whether receive the transition end coords or current. default is `true`\n   * @category Methods\n   */\n  getTarget(out, receiveEndValue = true) {\n    const _out = !!out && out.isVector3 ? out : new THREE.Vector3();\n    return _out.copy(receiveEndValue ? this._targetEnd : this._target);\n  }\n  /**\n   * Returns the camera position.\n   * @param out The receiving Vector3 instance to copy the result\n   * @param receiveEndValue Whether receive the transition end coords or current. default is `true`\n   * @category Methods\n   */\n  getPosition(out, receiveEndValue = true) {\n    const _out = !!out && out.isVector3 ? out : new THREE.Vector3();\n    return _out.setFromSpherical(receiveEndValue ? this._sphericalEnd : this._spherical).applyQuaternion(this._yAxisUpSpaceInverse).add(receiveEndValue ? this._targetEnd : this._target);\n  }\n  /**\n   * Returns the spherical coordinates of the orbit.\n   * @param out The receiving Spherical instance to copy the result\n   * @param receiveEndValue Whether receive the transition end coords or current. default is `true`\n   * @category Methods\n   */\n  getSpherical(out, receiveEndValue = true) {\n    const _out = out || new THREE.Spherical();\n    return _out.copy(receiveEndValue ? this._sphericalEnd : this._spherical);\n  }\n  /**\n   * Returns the focal offset, which is how much the camera appears to be translated in screen parallel coordinates.\n   * @param out The receiving Vector3 instance to copy the result\n   * @param receiveEndValue Whether receive the transition end coords or current. default is `true`\n   * @category Methods\n   */\n  getFocalOffset(out, receiveEndValue = true) {\n    const _out = !!out && out.isVector3 ? out : new THREE.Vector3();\n    return _out.copy(receiveEndValue ? this._focalOffsetEnd : this._focalOffset);\n  }\n  /**\n   * Normalize camera azimuth angle rotation between 0 and 360 degrees.\n   * @category Methods\n   */\n  normalizeRotations() {\n    this._sphericalEnd.theta = this._sphericalEnd.theta % PI_2;\n    if (this._sphericalEnd.theta < 0)\n      this._sphericalEnd.theta += PI_2;\n    this._spherical.theta += PI_2 * Math.round((this._sphericalEnd.theta - this._spherical.theta) / PI_2);\n  }\n  /**\n   * stop all transitions.\n   */\n  stop() {\n    this._focalOffset.copy(this._focalOffsetEnd);\n    this._target.copy(this._targetEnd);\n    this._spherical.copy(this._sphericalEnd);\n    this._zoom = this._zoomEnd;\n  }\n  /**\n   * Reset all rotation and position to defaults.\n   * @param enableTransition\n   * @category Methods\n   */\n  reset(enableTransition = false) {\n    if (!approxEquals(this._camera.up.x, this._cameraUp0.x) || !approxEquals(this._camera.up.y, this._cameraUp0.y) || !approxEquals(this._camera.up.z, this._cameraUp0.z)) {\n      this._camera.up.copy(this._cameraUp0);\n      const position = this.getPosition(_v3A);\n      this.updateCameraUp();\n      this.setPosition(position.x, position.y, position.z);\n    }\n    const promises = [\n      this.setLookAt(this._position0.x, this._position0.y, this._position0.z, this._target0.x, this._target0.y, this._target0.z, enableTransition),\n      this.setFocalOffset(this._focalOffset0.x, this._focalOffset0.y, this._focalOffset0.z, enableTransition),\n      this.zoomTo(this._zoom0, enableTransition)\n    ];\n    return Promise.all(promises);\n  }\n  /**\n   * Set current camera position as the default position.\n   * @category Methods\n   */\n  saveState() {\n    this._cameraUp0.copy(this._camera.up);\n    this.getTarget(this._target0);\n    this.getPosition(this._position0);\n    this._zoom0 = this._zoom;\n    this._focalOffset0.copy(this._focalOffset);\n  }\n  /**\n   * Sync camera-up direction.\n   * When camera-up vector is changed, `.updateCameraUp()` must be called.\n   * @category Methods\n   */\n  updateCameraUp() {\n    this._yAxisUpSpace.setFromUnitVectors(this._camera.up, _AXIS_Y);\n    this._yAxisUpSpaceInverse.copy(this._yAxisUpSpace).invert();\n  }\n  /**\n   * Apply current camera-up direction to the camera.\n   * The orbit system will be re-initialized with the current position.\n   * @category Methods\n   */\n  applyCameraUp() {\n    const cameraDirection = _v3A.subVectors(this._target, this._camera.position).normalize();\n    const side = _v3B.crossVectors(cameraDirection, this._camera.up);\n    this._camera.up.crossVectors(side, cameraDirection).normalize();\n    this._camera.updateMatrixWorld();\n    const position = this.getPosition(_v3A);\n    this.updateCameraUp();\n    this.setPosition(position.x, position.y, position.z);\n  }\n  /**\n   * Update camera position and directions.\n   * This should be called in your tick loop every time, and returns true if re-rendering is needed.\n   * @param delta\n   * @returns updated\n   * @category Methods\n   */\n  update(delta) {\n    const deltaTheta = this._sphericalEnd.theta - this._spherical.theta;\n    const deltaPhi = this._sphericalEnd.phi - this._spherical.phi;\n    const deltaRadius = this._sphericalEnd.radius - this._spherical.radius;\n    const deltaTarget = _deltaTarget.subVectors(this._targetEnd, this._target);\n    const deltaOffset = _deltaOffset.subVectors(this._focalOffsetEnd, this._focalOffset);\n    const deltaZoom = this._zoomEnd - this._zoom;\n    if (approxZero(deltaTheta)) {\n      this._thetaVelocity.value = 0;\n      this._spherical.theta = this._sphericalEnd.theta;\n    } else {\n      const smoothTime = this._isUserControllingRotate ? this.draggingSmoothTime : this.smoothTime;\n      this._spherical.theta = smoothDamp(this._spherical.theta, this._sphericalEnd.theta, this._thetaVelocity, smoothTime, Infinity, delta);\n      this._needsUpdate = true;\n    }\n    if (approxZero(deltaPhi)) {\n      this._phiVelocity.value = 0;\n      this._spherical.phi = this._sphericalEnd.phi;\n    } else {\n      const smoothTime = this._isUserControllingRotate ? this.draggingSmoothTime : this.smoothTime;\n      this._spherical.phi = smoothDamp(this._spherical.phi, this._sphericalEnd.phi, this._phiVelocity, smoothTime, Infinity, delta);\n      this._needsUpdate = true;\n    }\n    if (approxZero(deltaRadius)) {\n      this._radiusVelocity.value = 0;\n      this._spherical.radius = this._sphericalEnd.radius;\n    } else {\n      const smoothTime = this._isUserControllingDolly ? this.draggingSmoothTime : this.smoothTime;\n      this._spherical.radius = smoothDamp(this._spherical.radius, this._sphericalEnd.radius, this._radiusVelocity, smoothTime, this.maxSpeed, delta);\n      this._needsUpdate = true;\n    }\n    if (approxZero(deltaTarget.x) && approxZero(deltaTarget.y) && approxZero(deltaTarget.z)) {\n      this._targetVelocity.set(0, 0, 0);\n      this._target.copy(this._targetEnd);\n    } else {\n      const smoothTime = this._isUserControllingTruck ? this.draggingSmoothTime : this.smoothTime;\n      smoothDampVec3(this._target, this._targetEnd, this._targetVelocity, smoothTime, this.maxSpeed, delta, this._target);\n      this._needsUpdate = true;\n    }\n    if (approxZero(deltaOffset.x) && approxZero(deltaOffset.y) && approxZero(deltaOffset.z)) {\n      this._focalOffsetVelocity.set(0, 0, 0);\n      this._focalOffset.copy(this._focalOffsetEnd);\n    } else {\n      const smoothTime = this._isUserControllingOffset ? this.draggingSmoothTime : this.smoothTime;\n      smoothDampVec3(this._focalOffset, this._focalOffsetEnd, this._focalOffsetVelocity, smoothTime, this.maxSpeed, delta, this._focalOffset);\n      this._needsUpdate = true;\n    }\n    if (approxZero(deltaZoom)) {\n      this._zoomVelocity.value = 0;\n      this._zoom = this._zoomEnd;\n    } else {\n      const smoothTime = this._isUserControllingZoom ? this.draggingSmoothTime : this.smoothTime;\n      this._zoom = smoothDamp(this._zoom, this._zoomEnd, this._zoomVelocity, smoothTime, Infinity, delta);\n    }\n    if (this.dollyToCursor) {\n      if (isPerspectiveCamera(this._camera) && this._changedDolly !== 0) {\n        const dollyControlAmount = this._spherical.radius - this._lastDistance;\n        const camera = this._camera;\n        const cameraDirection = this._getCameraDirection(_cameraDirection);\n        const planeX = _v3A.copy(cameraDirection).cross(camera.up).normalize();\n        if (planeX.lengthSq() === 0)\n          planeX.x = 1;\n        const planeY = _v3B.crossVectors(planeX, cameraDirection);\n        const worldToScreen = this._sphericalEnd.radius * Math.tan(camera.getEffectiveFOV() * DEG2RAD * 0.5);\n        const prevRadius = this._sphericalEnd.radius - dollyControlAmount;\n        const lerpRatio = (prevRadius - this._sphericalEnd.radius) / this._sphericalEnd.radius;\n        const cursor = _v3C.copy(this._targetEnd).add(planeX.multiplyScalar(this._dollyControlCoord.x * worldToScreen * camera.aspect)).add(planeY.multiplyScalar(this._dollyControlCoord.y * worldToScreen));\n        const newTargetEnd = _v3A.copy(this._targetEnd).lerp(cursor, lerpRatio);\n        const isMin = this._lastDollyDirection === DOLLY_DIRECTION.IN && this._spherical.radius <= this.minDistance;\n        const isMax = this._lastDollyDirection === DOLLY_DIRECTION.OUT && this.maxDistance <= this._spherical.radius;\n        if (this.infinityDolly && (isMin || isMax)) {\n          this._sphericalEnd.radius -= dollyControlAmount;\n          this._spherical.radius -= dollyControlAmount;\n          const dollyAmount = _v3B.copy(cameraDirection).multiplyScalar(-dollyControlAmount);\n          newTargetEnd.add(dollyAmount);\n        }\n        this._boundary.clampPoint(newTargetEnd, newTargetEnd);\n        const targetEndDiff = _v3B.subVectors(newTargetEnd, this._targetEnd);\n        this._targetEnd.copy(newTargetEnd);\n        this._target.add(targetEndDiff);\n        this._changedDolly -= dollyControlAmount;\n        if (approxZero(this._changedDolly))\n          this._changedDolly = 0;\n      } else if (isOrthographicCamera(this._camera) && this._changedZoom !== 0) {\n        const dollyControlAmount = this._zoom - this._lastZoom;\n        const camera = this._camera;\n        const worldCursorPosition = _v3A.set(this._dollyControlCoord.x, this._dollyControlCoord.y, (camera.near + camera.far) / (camera.near - camera.far)).unproject(camera);\n        const quaternion = _v3B.set(0, 0, -1).applyQuaternion(camera.quaternion);\n        const cursor = _v3C.copy(worldCursorPosition).add(quaternion.multiplyScalar(-worldCursorPosition.dot(camera.up)));\n        const prevZoom = this._zoom - dollyControlAmount;\n        const lerpRatio = -(prevZoom - this._zoom) / this._zoom;\n        const cameraDirection = this._getCameraDirection(_cameraDirection);\n        const prevPlaneConstant = this._targetEnd.dot(cameraDirection);\n        const newTargetEnd = _v3A.copy(this._targetEnd).lerp(cursor, lerpRatio);\n        const newPlaneConstant = newTargetEnd.dot(cameraDirection);\n        const pullBack = cameraDirection.multiplyScalar(newPlaneConstant - prevPlaneConstant);\n        newTargetEnd.sub(pullBack);\n        this._boundary.clampPoint(newTargetEnd, newTargetEnd);\n        const targetEndDiff = _v3B.subVectors(newTargetEnd, this._targetEnd);\n        this._targetEnd.copy(newTargetEnd);\n        this._target.add(targetEndDiff);\n        this._changedZoom -= dollyControlAmount;\n        if (approxZero(this._changedZoom))\n          this._changedZoom = 0;\n      }\n    }\n    if (this._camera.zoom !== this._zoom) {\n      this._camera.zoom = this._zoom;\n      this._camera.updateProjectionMatrix();\n      this._updateNearPlaneCorners();\n      this._needsUpdate = true;\n    }\n    this._dragNeedsUpdate = true;\n    const maxDistance = this._collisionTest();\n    this._spherical.radius = Math.min(this._spherical.radius, maxDistance);\n    this._spherical.makeSafe();\n    this._camera.position.setFromSpherical(this._spherical).applyQuaternion(this._yAxisUpSpaceInverse).add(this._target);\n    this._camera.lookAt(this._target);\n    const affectOffset = !approxZero(this._focalOffset.x) || !approxZero(this._focalOffset.y) || !approxZero(this._focalOffset.z);\n    if (affectOffset) {\n      _xColumn.setFromMatrixColumn(this._camera.matrix, 0);\n      _yColumn.setFromMatrixColumn(this._camera.matrix, 1);\n      _zColumn.setFromMatrixColumn(this._camera.matrix, 2);\n      _xColumn.multiplyScalar(this._focalOffset.x);\n      _yColumn.multiplyScalar(-this._focalOffset.y);\n      _zColumn.multiplyScalar(this._focalOffset.z);\n      _v3A.copy(_xColumn).add(_yColumn).add(_zColumn);\n      this._camera.position.add(_v3A);\n      this._camera.updateMatrixWorld();\n    }\n    if (this._boundaryEnclosesCamera) {\n      this._encloseToBoundary(this._camera.position.copy(this._target), _v3A.setFromSpherical(this._spherical).applyQuaternion(this._yAxisUpSpaceInverse), 1);\n    }\n    const updated = this._needsUpdate;\n    if (updated && !this._updatedLastTime) {\n      this._hasRested = false;\n      this.dispatchEvent({ type: \"wake\" });\n      this.dispatchEvent({ type: \"update\" });\n    } else if (updated) {\n      this.dispatchEvent({ type: \"update\" });\n      if (approxZero(deltaTheta, this.restThreshold) && approxZero(deltaPhi, this.restThreshold) && approxZero(deltaRadius, this.restThreshold) && approxZero(deltaTarget.x, this.restThreshold) && approxZero(deltaTarget.y, this.restThreshold) && approxZero(deltaTarget.z, this.restThreshold) && approxZero(deltaOffset.x, this.restThreshold) && approxZero(deltaOffset.y, this.restThreshold) && approxZero(deltaOffset.z, this.restThreshold) && approxZero(deltaZoom, this.restThreshold) && !this._hasRested) {\n        this._hasRested = true;\n        this.dispatchEvent({ type: \"rest\" });\n      }\n    } else if (!updated && this._updatedLastTime) {\n      this.dispatchEvent({ type: \"sleep\" });\n    }\n    this._lastDistance = this._spherical.radius;\n    this._lastZoom = this._zoom;\n    this._updatedLastTime = updated;\n    this._needsUpdate = false;\n    return updated;\n  }\n  /**\n   * Get all state in JSON string\n   * @category Methods\n   */\n  toJSON() {\n    return JSON.stringify({\n      enabled: this._enabled,\n      minDistance: this.minDistance,\n      maxDistance: infinityToMaxNumber(this.maxDistance),\n      minZoom: this.minZoom,\n      maxZoom: infinityToMaxNumber(this.maxZoom),\n      minPolarAngle: this.minPolarAngle,\n      maxPolarAngle: infinityToMaxNumber(this.maxPolarAngle),\n      minAzimuthAngle: infinityToMaxNumber(this.minAzimuthAngle),\n      maxAzimuthAngle: infinityToMaxNumber(this.maxAzimuthAngle),\n      smoothTime: this.smoothTime,\n      draggingSmoothTime: this.draggingSmoothTime,\n      dollySpeed: this.dollySpeed,\n      truckSpeed: this.truckSpeed,\n      dollyToCursor: this.dollyToCursor,\n      target: this._targetEnd.toArray(),\n      position: _v3A.setFromSpherical(this._sphericalEnd).add(this._targetEnd).toArray(),\n      zoom: this._zoomEnd,\n      focalOffset: this._focalOffsetEnd.toArray(),\n      target0: this._target0.toArray(),\n      position0: this._position0.toArray(),\n      zoom0: this._zoom0,\n      focalOffset0: this._focalOffset0.toArray()\n    });\n  }\n  /**\n   * Reproduce the control state with JSON. enableTransition is where anim or not in a boolean.\n   * @param json\n   * @param enableTransition\n   * @category Methods\n   */\n  fromJSON(json, enableTransition = false) {\n    const obj = JSON.parse(json);\n    this.enabled = obj.enabled;\n    this.minDistance = obj.minDistance;\n    this.maxDistance = maxNumberToInfinity(obj.maxDistance);\n    this.minZoom = obj.minZoom;\n    this.maxZoom = maxNumberToInfinity(obj.maxZoom);\n    this.minPolarAngle = obj.minPolarAngle;\n    this.maxPolarAngle = maxNumberToInfinity(obj.maxPolarAngle);\n    this.minAzimuthAngle = maxNumberToInfinity(obj.minAzimuthAngle);\n    this.maxAzimuthAngle = maxNumberToInfinity(obj.maxAzimuthAngle);\n    this.smoothTime = obj.smoothTime;\n    this.draggingSmoothTime = obj.draggingSmoothTime;\n    this.dollySpeed = obj.dollySpeed;\n    this.truckSpeed = obj.truckSpeed;\n    this.dollyToCursor = obj.dollyToCursor;\n    this._target0.fromArray(obj.target0);\n    this._position0.fromArray(obj.position0);\n    this._zoom0 = obj.zoom0;\n    this._focalOffset0.fromArray(obj.focalOffset0);\n    this.moveTo(obj.target[0], obj.target[1], obj.target[2], enableTransition);\n    _sphericalA.setFromVector3(_v3A.fromArray(obj.position).sub(this._targetEnd).applyQuaternion(this._yAxisUpSpace));\n    this.rotateTo(_sphericalA.theta, _sphericalA.phi, enableTransition);\n    this.dollyTo(_sphericalA.radius, enableTransition);\n    this.zoomTo(obj.zoom, enableTransition);\n    this.setFocalOffset(obj.focalOffset[0], obj.focalOffset[1], obj.focalOffset[2], enableTransition);\n    this._needsUpdate = true;\n  }\n  /**\n   * Attach all internal event handlers to enable drag control.\n   * @category Methods\n   */\n  connect(domElement) {\n    if (this._domElement) {\n      console.warn(\"camera-controls is already connected.\");\n      return;\n    }\n    domElement.setAttribute(\"data-camera-controls-version\", VERSION);\n    this._addAllEventListeners(domElement);\n    this._getClientRect(this._elementRect);\n  }\n  /**\n   * Detach all internal event handlers to disable drag control.\n   */\n  disconnect() {\n    this.cancel();\n    this._removeAllEventListeners();\n    if (this._domElement) {\n      this._domElement.removeAttribute(\"data-camera-controls-version\");\n      this._domElement = void 0;\n    }\n  }\n  /**\n   * Dispose the cameraControls instance itself, remove all eventListeners.\n   * @category Methods\n   */\n  dispose() {\n    this.removeAllEventListeners();\n    this.disconnect();\n  }\n  // it's okay to expose public though\n  _getTargetDirection(out) {\n    return out.setFromSpherical(this._spherical).divideScalar(this._spherical.radius).applyQuaternion(this._yAxisUpSpaceInverse);\n  }\n  // it's okay to expose public though\n  _getCameraDirection(out) {\n    return this._getTargetDirection(out).negate();\n  }\n  _findPointerById(pointerId) {\n    return this._activePointers.find((activePointer) => activePointer.pointerId === pointerId);\n  }\n  _findPointerByMouseButton(mouseButton) {\n    return this._activePointers.find((activePointer) => activePointer.mouseButton === mouseButton);\n  }\n  _disposePointer(pointer) {\n    this._activePointers.splice(this._activePointers.indexOf(pointer), 1);\n  }\n  _encloseToBoundary(position, offset, friction) {\n    const offsetLength2 = offset.lengthSq();\n    if (offsetLength2 === 0) {\n      return position;\n    }\n    const newTarget = _v3B.copy(offset).add(position);\n    const clampedTarget = this._boundary.clampPoint(newTarget, _v3C);\n    const deltaClampedTarget = clampedTarget.sub(newTarget);\n    const deltaClampedTargetLength2 = deltaClampedTarget.lengthSq();\n    if (deltaClampedTargetLength2 === 0) {\n      return position.add(offset);\n    } else if (deltaClampedTargetLength2 === offsetLength2) {\n      return position;\n    } else if (friction === 0) {\n      return position.add(offset).add(deltaClampedTarget);\n    } else {\n      const offsetFactor = 1 + friction * deltaClampedTargetLength2 / offset.dot(deltaClampedTarget);\n      return position.add(_v3B.copy(offset).multiplyScalar(offsetFactor)).add(deltaClampedTarget.multiplyScalar(1 - friction));\n    }\n  }\n  _updateNearPlaneCorners() {\n    if (isPerspectiveCamera(this._camera)) {\n      const camera = this._camera;\n      const near = camera.near;\n      const fov = camera.getEffectiveFOV() * DEG2RAD;\n      const heightHalf = Math.tan(fov * 0.5) * near;\n      const widthHalf = heightHalf * camera.aspect;\n      this._nearPlaneCorners[0].set(-widthHalf, -heightHalf, 0);\n      this._nearPlaneCorners[1].set(widthHalf, -heightHalf, 0);\n      this._nearPlaneCorners[2].set(widthHalf, heightHalf, 0);\n      this._nearPlaneCorners[3].set(-widthHalf, heightHalf, 0);\n    } else if (isOrthographicCamera(this._camera)) {\n      const camera = this._camera;\n      const zoomInv = 1 / camera.zoom;\n      const left = camera.left * zoomInv;\n      const right = camera.right * zoomInv;\n      const top = camera.top * zoomInv;\n      const bottom = camera.bottom * zoomInv;\n      this._nearPlaneCorners[0].set(left, top, 0);\n      this._nearPlaneCorners[1].set(right, top, 0);\n      this._nearPlaneCorners[2].set(right, bottom, 0);\n      this._nearPlaneCorners[3].set(left, bottom, 0);\n    }\n  }\n  // lateUpdate\n  _collisionTest() {\n    let distance = Infinity;\n    const hasCollider = this.colliderMeshes.length >= 1;\n    if (!hasCollider)\n      return distance;\n    if (notSupportedInOrthographicCamera(this._camera, \"_collisionTest\"))\n      return distance;\n    const rayDirection = this._getTargetDirection(_cameraDirection);\n    _rotationMatrix.lookAt(_ORIGIN, rayDirection, this._camera.up);\n    for (let i = 0; i < 4; i++) {\n      const nearPlaneCorner = _v3B.copy(this._nearPlaneCorners[i]);\n      nearPlaneCorner.applyMatrix4(_rotationMatrix);\n      const origin = _v3C.addVectors(this._target, nearPlaneCorner);\n      _raycaster$1.set(origin, rayDirection);\n      _raycaster$1.far = this._spherical.radius + 1;\n      const intersects = _raycaster$1.intersectObjects(this.colliderMeshes);\n      if (intersects.length !== 0 && intersects[0].distance < distance) {\n        distance = intersects[0].distance;\n      }\n    }\n    return distance;\n  }\n  /**\n   * Get its client rect and package into given `DOMRect` .\n   */\n  _getClientRect(target) {\n    if (!this._domElement)\n      return;\n    const rect = this._domElement.getBoundingClientRect();\n    target.x = rect.left;\n    target.y = rect.top;\n    if (this._viewport) {\n      target.x += this._viewport.x;\n      target.y += rect.height - this._viewport.w - this._viewport.y;\n      target.width = this._viewport.z;\n      target.height = this._viewport.w;\n    } else {\n      target.width = rect.width;\n      target.height = rect.height;\n    }\n    return target;\n  }\n  _createOnRestPromise(resolveImmediately) {\n    if (resolveImmediately)\n      return Promise.resolve();\n    this._hasRested = false;\n    this.dispatchEvent({ type: \"transitionstart\" });\n    return new Promise((resolve) => {\n      const onResolve = () => {\n        this.removeEventListener(\"rest\", onResolve);\n        resolve();\n      };\n      this.addEventListener(\"rest\", onResolve);\n    });\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  _addAllEventListeners(_domElement) {\n  }\n  _removeAllEventListeners() {\n  }\n  /**\n   * backward compatible\n   * @deprecated use smoothTime (in seconds) instead\n   * @category Properties\n   */\n  get dampingFactor() {\n    console.warn(\".dampingFactor has been deprecated. use smoothTime (in seconds) instead.\");\n    return 0;\n  }\n  /**\n   * backward compatible\n   * @deprecated use smoothTime (in seconds) instead\n   * @category Properties\n   */\n  set dampingFactor(_) {\n    console.warn(\".dampingFactor has been deprecated. use smoothTime (in seconds) instead.\");\n  }\n  /**\n   * backward compatible\n   * @deprecated use draggingSmoothTime (in seconds) instead\n   * @category Properties\n   */\n  get draggingDampingFactor() {\n    console.warn(\".draggingDampingFactor has been deprecated. use draggingSmoothTime (in seconds) instead.\");\n    return 0;\n  }\n  /**\n   * backward compatible\n   * @deprecated use draggingSmoothTime (in seconds) instead\n   * @category Properties\n   */\n  set draggingDampingFactor(_) {\n    console.warn(\".draggingDampingFactor has been deprecated. use draggingSmoothTime (in seconds) instead.\");\n  }\n  static createBoundingSphere(object3d, out = new THREE.Sphere()) {\n    const boundingSphere = out;\n    const center = boundingSphere.center;\n    _box3A.makeEmpty();\n    object3d.traverseVisible((object) => {\n      if (!object.isMesh)\n        return;\n      _box3A.expandByObject(object);\n    });\n    _box3A.getCenter(center);\n    let maxRadiusSq = 0;\n    object3d.traverseVisible((object) => {\n      if (!object.isMesh)\n        return;\n      const mesh = object;\n      if (!mesh.geometry)\n        return;\n      const geometry = mesh.geometry.clone();\n      geometry.applyMatrix4(mesh.matrixWorld);\n      const bufferGeometry = geometry;\n      const position = bufferGeometry.attributes.position;\n      for (let i = 0, l = position.count; i < l; i++) {\n        _v3A.fromBufferAttribute(position, i);\n        maxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(_v3A));\n      }\n    });\n    boundingSphere.radius = Math.sqrt(maxRadiusSq);\n    return boundingSphere;\n  }\n}\nclass SimpleCamera extends BaseCamera {\n  constructor(components) {\n    super(components);\n    /** {@link Updateable.onBeforeUpdate} */\n    __publicField(this, \"onBeforeUpdate\", new Event());\n    /** {@link Updateable.onAfterUpdate} */\n    __publicField(this, \"onAfterUpdate\", new Event());\n    /**\n     * Event that is triggered when the aspect of the camera has been updated.\n     * This event is useful when you need to perform actions after the aspect of the camera has been changed.\n     */\n    __publicField(this, \"onAspectUpdated\", new Event());\n    /** {@link Disposable.onDisposed} */\n    __publicField(this, \"onDisposed\", new Event());\n    /**\n     * A three.js PerspectiveCamera or OrthographicCamera instance.\n     * This camera is used for rendering the scene.\n     */\n    __publicField(this, \"three\");\n    __publicField(this, \"_allControls\", /* @__PURE__ */ new Map());\n    /**\n     * Updates the aspect of the camera to match the size of the\n     * {@link Components.renderer}.\n     */\n    __publicField(this, \"updateAspect\", () => {\n      var _a2;\n      if (!this.currentWorld || !this.currentWorld.renderer)\n        return;\n      if (this.three instanceof THREE$1.OrthographicCamera) {\n        this.onAspectUpdated.trigger();\n        return;\n      }\n      if ((_a2 = this.currentWorld.renderer) == null ? void 0 : _a2.isResizeable()) {\n        const size = this.currentWorld.renderer.getSize();\n        this.three.aspect = size.width / size.height;\n        this.three.updateProjectionMatrix();\n        this.onAspectUpdated.trigger();\n      }\n    });\n    this.three = this.setupCamera();\n    this.setupEvents(true);\n    this.worlds.onItemSet.add(({ value: world }) => {\n      const controls = this.newCameraControls();\n      this._allControls.set(world.uuid, controls);\n    });\n    this.worlds.onBeforeDelete.add(({ value: world }) => {\n      const controls = this._allControls.get(world.uuid);\n      if (controls) {\n        controls.dispose();\n        this._allControls.delete(world.uuid);\n      }\n    });\n  }\n  /**\n   * The object that controls the camera. An instance of\n   * [yomotsu's cameracontrols](https://github.com/yomotsu/camera-controls).\n   * Transforming the camera directly will have no effect: you need to use this\n   * object to move, rotate, look at objects, etc.\n   */\n  get controls() {\n    if (!this.currentWorld) {\n      throw new Error(\"This camera needs a world to work!\");\n    }\n    const controls = this._allControls.get(this.currentWorld.uuid);\n    if (!controls) {\n      throw new Error(\"Controls not found!\");\n    }\n    return controls;\n  }\n  /**\n   * Getter for the enabled state of the camera controls.\n   * If the current world is null, it returns false.\n   * Otherwise, it returns the enabled state of the camera controls.\n   *\n   * @returns {boolean} The enabled state of the camera controls.\n   */\n  get enabled() {\n    if (this.currentWorld === null) {\n      return false;\n    }\n    return this.controls.enabled;\n  }\n  /**\n   * Setter for the enabled state of the camera controls.\n   * If the current world is not null, it sets the enabled state of the camera controls to the provided value.\n   *\n   * @param {boolean} enabled - The new enabled state of the camera controls.\n   */\n  set enabled(enabled) {\n    if (this.currentWorld !== null) {\n      this.controls.enabled = enabled;\n    }\n  }\n  set currentWorld(value) {\n    super.currentWorld = value;\n    if (!value)\n      return;\n    const existingWorld = this.worlds.get(value.uuid);\n    if (!existingWorld)\n      this.worlds.set(value.uuid, value);\n  }\n  get currentWorld() {\n    return this._currentWorld;\n  }\n  /** {@link Disposable.dispose} */\n  dispose() {\n    this.setupEvents(false);\n    this.onAspectUpdated.reset();\n    this.onBeforeUpdate.reset();\n    this.onAfterUpdate.reset();\n    this.three.removeFromParent();\n    this.onDisposed.trigger();\n    this.onDisposed.reset();\n    for (const [_id, controls] of this._allControls) {\n      controls.dispose();\n    }\n    this.worlds.clear();\n  }\n  async fitToItems(items) {\n    const sphere = await this.getItemsBounding(items);\n    await this.controls.fitToSphere(sphere, true);\n  }\n  async setOrbitToItems(items) {\n    const sphere = await this.getItemsBounding(items);\n    this.controls.setOrbitPoint(\n      sphere.center.x,\n      sphere.center.y,\n      sphere.center.z\n    );\n  }\n  /** {@link Updateable.update} */\n  update(_delta) {\n    if (this.enabled) {\n      this.onBeforeUpdate.trigger(this);\n      this.controls.update(_delta);\n      this.onAfterUpdate.trigger(this);\n    }\n  }\n  async getItemsBounding(items) {\n    const fragments = this.components.get(FragmentsManager);\n    const boxer = this.components.get(BoundingBoxer);\n    boxer.list.clear();\n    const sphere = new THREE$1.Sphere();\n    if (items) {\n      await boxer.addFromModelIdMap(items);\n    } else {\n      for (const [, model] of fragments.list) {\n        boxer.list.add(model.box);\n      }\n    }\n    boxer.get().getBoundingSphere(sphere);\n    boxer.list.clear();\n    return sphere;\n  }\n  setupCamera() {\n    const aspect = window.innerWidth / window.innerHeight;\n    const camera = new THREE$1.PerspectiveCamera(60, aspect, 1, 1e3);\n    camera.position.set(50, 50, 50);\n    camera.lookAt(new THREE$1.Vector3(0, 0, 0));\n    return camera;\n  }\n  newCameraControls() {\n    if (!this.currentWorld) {\n      throw new Error(\"This camera needs a world to work!\");\n    }\n    if (!this.currentWorld.renderer) {\n      throw new Error(\"This camera needs a renderer to work!\");\n    }\n    CameraControls.install({ THREE: SimpleCamera.getSubsetOfThree() });\n    const { domElement } = this.currentWorld.renderer.three;\n    const controls = new CameraControls(this.three, domElement);\n    controls.smoothTime = 0.2;\n    controls.dollyToCursor = true;\n    controls.infinityDolly = true;\n    controls.minDistance = 6;\n    return controls;\n  }\n  setupEvents(active) {\n    if (active) {\n      window.addEventListener(\"resize\", this.updateAspect);\n    } else {\n      window.removeEventListener(\"resize\", this.updateAspect);\n    }\n  }\n  static getSubsetOfThree() {\n    return {\n      MOUSE: THREE$1.MOUSE,\n      Vector2: THREE$1.Vector2,\n      Vector3: THREE$1.Vector3,\n      Vector4: THREE$1.Vector4,\n      Quaternion: THREE$1.Quaternion,\n      Matrix4: THREE$1.Matrix4,\n      Spherical: THREE$1.Spherical,\n      Box3: THREE$1.Box3,\n      Sphere: THREE$1.Sphere,\n      Raycaster: THREE$1.Raycaster,\n      MathUtils: THREE$1.MathUtils\n    };\n  }\n}\nconst _Worlds = class _Worlds extends Component {\n  constructor(components) {\n    super(components);\n    /** {@link Updateable.onAfterUpdate} */\n    __publicField(this, \"onAfterUpdate\", new Event());\n    /** {@link Updateable.onBeforeUpdate} */\n    __publicField(this, \"onBeforeUpdate\", new Event());\n    /** {@link Disposable.onDisposed} */\n    __publicField(this, \"onDisposed\", new Event());\n    /**\n     * A collection of worlds managed by this component.\n     * The key is the unique identifier (UUID) of the world, and the value is the World instance.\n     */\n    __publicField(this, \"list\", new DataMap());\n    /** {@link Component.enabled} */\n    __publicField(this, \"enabled\", true);\n    components.add(_Worlds.uuid, this);\n  }\n  /**\n   * Creates a new instance of a SimpleWorld and adds it to the list of worlds.\n   *\n   * @template T - The type of the scene, extending from BaseScene. Defaults to BaseScene.\n   * @template U - The type of the camera, extending from BaseCamera. Defaults to BaseCamera.\n   * @template S - The type of the renderer, extending from BaseRenderer. Defaults to BaseRenderer.\n   *\n   * @throws {Error} - Throws an error if a world with the same UUID already exists in the list.\n   */\n  create() {\n    const world = new SimpleWorld(this.components);\n    const id = world.uuid;\n    if (this.list.has(id)) {\n      throw new Error(\"There is already a world with this name!\");\n    }\n    this.list.set(id, world);\n    return world;\n  }\n  /**\n   * Deletes a world from the list of worlds.\n   *\n   * @param {World} world - The world to be deleted.\n   *\n   * @throws {Error} - Throws an error if the provided world is not found in the list.\n   */\n  delete(world) {\n    if (!this.list.has(world.uuid)) {\n      throw new Error(\"The provided world is not found in the list!\");\n    }\n    this.list.delete(world.uuid);\n    world.dispose();\n  }\n  /**\n   * Disposes of the Worlds component and all its managed worlds.\n   * This method sets the enabled flag to false, disposes of all worlds, clears the list,\n   * and triggers the onDisposed event.\n   */\n  dispose() {\n    this.enabled = false;\n    for (const [_id, world] of this.list) {\n      world.dispose();\n    }\n    this.list.clear();\n    this.onDisposed.trigger();\n  }\n  /** {@link Updateable.update} */\n  update(delta) {\n    if (!this.enabled)\n      return;\n    for (const [_id, world] of this.list) {\n      world.update(delta);\n    }\n  }\n};\n/**\n * A unique identifier for the component.\n * This UUID is used to register the component within the Components system.\n */\n__publicField(_Worlds, \"uuid\", \"fdb61dc4-2ec1-4966-b83d-54ea795fad4a\");\nlet Worlds = _Worlds;\nclass SimpleGridConfigManager extends Configurator {\n  constructor() {\n    super(...arguments);\n    __publicField(this, \"_config\", {\n      visible: {\n        value: true,\n        type: \"Boolean\"\n      },\n      color: {\n        value: new THREE$1.Color(),\n        type: \"Color\"\n      },\n      primarySize: {\n        type: \"Number\",\n        interpolable: true,\n        value: 1,\n        min: 0,\n        max: 1e3\n      },\n      secondarySize: {\n        type: \"Number\",\n        interpolable: true,\n        value: 10,\n        min: 0,\n        max: 1e3\n      },\n      distance: {\n        type: \"Number\",\n        interpolable: true,\n        value: 500,\n        min: 0,\n        max: 500\n      }\n    });\n  }\n  /**\n   * Whether the grid is visible or not.\n   */\n  get visible() {\n    return this._config.visible.value;\n  }\n  /**\n   * Whether the grid is visible or not.\n   */\n  set visible(value) {\n    this._config.visible.value = value;\n    this._component.visible = value;\n  }\n  /**\n   * The color of the grid lines.\n   */\n  get color() {\n    return this._config.color.value;\n  }\n  /**\n   * The color of the grid lines.\n   */\n  set color(value) {\n    this._config.color.value = value;\n    this._component.material.uniforms.uColor.value = value;\n    this._component.material.uniformsNeedUpdate = true;\n  }\n  /**\n   * The size of the primary grid lines.\n   */\n  get primarySize() {\n    return this._config.primarySize.value;\n  }\n  /**\n   * The size of the primary grid lines.\n   */\n  set primarySize(value) {\n    this._config.primarySize.value = value;\n    this._component.material.uniforms.uSize1.value = value;\n    this._component.material.uniformsNeedUpdate = true;\n  }\n  /**\n   * The size of the secondary grid lines.\n   */\n  get secondarySize() {\n    return this._config.secondarySize.value;\n  }\n  /**\n   * The size of the secondary grid lines.\n   */\n  set secondarySize(value) {\n    this._config.secondarySize.value = value;\n    this._component.material.uniforms.uSize2.value = value;\n    this._component.material.uniformsNeedUpdate = true;\n  }\n  /**\n   * The distance at which the grid lines start to fade away.\n   */\n  get distance() {\n    return this._config.distance.value;\n  }\n  /**\n   * The distance at which the grid lines start to fade away.\n   */\n  set distance(value) {\n    this._config.distance.value = value;\n    this._component.material.uniforms.uDistance.value = value;\n    this._component.material.uniformsNeedUpdate = true;\n  }\n}\nclass SimpleGrid {\n  constructor(components, world) {\n    /** {@link Disposable.onDisposed} */\n    __publicField(this, \"onDisposed\", new Event());\n    /** {@link Configurable.onSetup} */\n    __publicField(this, \"onSetup\", new Event());\n    /** {@link Configurable.isSetup} */\n    __publicField(this, \"isSetup\", false);\n    /** The world instance to which this Raycaster belongs. */\n    __publicField(this, \"world\");\n    /** The components instance to which this grid belongs. */\n    __publicField(this, \"components\");\n    /** {@link Configurable.config} */\n    __publicField(this, \"config\");\n    __publicField(this, \"_defaultConfig\", {\n      visible: true,\n      color: new THREE$1.Color(12303291),\n      primarySize: 1,\n      secondarySize: 10,\n      distance: 500\n    });\n    /** The Three.js mesh that contains the infinite grid. */\n    __publicField(this, \"three\");\n    __publicField(this, \"_fade\", 3);\n    __publicField(this, \"updateZoom\", () => {\n      if (!(this.world.camera instanceof SimpleCamera)) {\n        return;\n      }\n      this.material.uniforms.uZoom.value = this.world.camera.three.zoom;\n    });\n    this.world = world;\n    const { color, primarySize, secondarySize, distance } = this._defaultConfig;\n    this.components = components;\n    this.config = new SimpleGridConfigManager(this, this.components, \"Grid\");\n    const geometry = new THREE$1.PlaneGeometry(2, 2, 1, 1);\n    const material = new THREE$1.ShaderMaterial({\n      side: THREE$1.DoubleSide,\n      uniforms: {\n        uSize1: {\n          value: primarySize\n        },\n        uSize2: {\n          value: secondarySize\n        },\n        uColor: {\n          value: color\n        },\n        uDistance: {\n          value: distance\n        },\n        uFade: {\n          value: this._fade\n        },\n        uZoom: {\n          value: 1\n        }\n      },\n      transparent: true,\n      vertexShader: `\n            \n            varying vec3 worldPosition;\n            \n            uniform float uDistance;\n            \n            void main() {\n            \n                    vec3 pos = position.xzy * uDistance;\n                    pos.xz += cameraPosition.xz;\n                    \n                    worldPosition = pos;\n                    \n                    gl_Position = projectionMatrix * modelViewMatrix * vec4(pos, 1.0);\n            \n            }\n            `,\n      fragmentShader: `\n            \n            varying vec3 worldPosition;\n            \n            uniform float uZoom;\n            uniform float uFade;\n            uniform float uSize1;\n            uniform float uSize2;\n            uniform vec3 uColor;\n            uniform float uDistance;\n                \n                \n                \n                float getGrid(float size) {\n                \n                    vec2 r = worldPosition.xz / size;\n                    \n                    \n                    vec2 grid = abs(fract(r - 0.5) - 0.5) / fwidth(r);\n                    float line = min(grid.x, grid.y);\n                    \n                \n                    return 1.0 - min(line, 1.0);\n                }\n                \n            void main() {\n            \n                    \n                    float d = 1.0 - min(distance(cameraPosition.xz, worldPosition.xz) / uDistance, 1.0);\n                    \n                    float g1 = getGrid(uSize1);\n                    float g2 = getGrid(uSize2);\n                    \n                    // Ortho camera fades the grid away when zooming out\n                    float minZoom = step(0.2, uZoom);\n                    float zoomFactor = pow(min(uZoom, 1.), 2.) * minZoom;\n                    \n                    gl_FragColor = vec4(uColor.rgb, mix(g2, g1, g1) * pow(d, uFade));\n                    gl_FragColor.a = mix(0.5 * gl_FragColor.a, gl_FragColor.a, g2) * zoomFactor;\n                    \n                    if ( gl_FragColor.a <= 0.0 ) discard;\n                    \n            \n            }\n            \n            `,\n      extensions: {\n        derivatives: true\n      }\n    });\n    this.three = new THREE$1.Mesh(geometry, material);\n    this.three.frustumCulled = false;\n    world.scene.three.add(this.three);\n    this.setupEvents(true);\n  }\n  /** {@link Hideable.visible} */\n  get visible() {\n    return this.three.visible;\n  }\n  /** {@link Hideable.visible} */\n  set visible(visible) {\n    this.three.visible = visible;\n    if (visible) {\n      const scene = this.world.scene.three;\n      scene.add(this.three);\n    } else {\n      this.three.removeFromParent();\n    }\n  }\n  /** The material of the grid. */\n  get material() {\n    return this.three.material;\n  }\n  /**\n   * Whether the grid should fade away with distance. Recommended to be true for\n   * perspective cameras and false for orthographic cameras.\n   */\n  get fade() {\n    return this._fade === 3;\n  }\n  /**\n   * Whether the grid should fade away with distance. Recommended to be true for\n   * perspective cameras and false for orthographic cameras.\n   */\n  set fade(active) {\n    this._fade = active ? 3 : 0;\n    this.material.uniforms.uFade.value = this._fade;\n  }\n  /** {@link Configurable.setup} */\n  setup(config) {\n    const fullConfig = { ...this._defaultConfig, ...config };\n    this.config.visible = true;\n    this.config.color = fullConfig.color;\n    this.config.primarySize = fullConfig.primarySize;\n    this.config.secondarySize = fullConfig.secondarySize;\n    this.config.distance = fullConfig.distance;\n    this.isSetup = true;\n    this.onSetup.trigger();\n  }\n  /** {@link Disposable.dispose} */\n  dispose() {\n    this.setupEvents(false);\n    const configs = this.components.get(ConfigManager);\n    configs.list.delete(this.config.uuid);\n    const disposer = this.components.get(Disposer);\n    disposer.destroy(this.three);\n    this.onDisposed.trigger();\n    this.onDisposed.reset();\n    this.world = null;\n    this.components = null;\n  }\n  setupEvents(active) {\n    if (this.world.isDisposing) {\n      return;\n    }\n    if (!(this.world.camera instanceof SimpleCamera)) {\n      return;\n    }\n    const controls = this.world.camera.controls;\n    if (active) {\n      controls.addEventListener(\"update\", this.updateZoom);\n    } else {\n      controls.removeEventListener(\"update\", this.updateZoom);\n    }\n  }\n}\nconst _Grids = class _Grids extends Component {\n  constructor(components) {\n    super(components);\n    /**\n     * A map of world UUIDs to their corresponding grid instances.\n     */\n    __publicField(this, \"list\", /* @__PURE__ */ new Map());\n    /** {@link Disposable.onDisposed} */\n    __publicField(this, \"onDisposed\", new Event());\n    /** {@link Component.enabled} */\n    __publicField(this, \"enabled\", true);\n    components.add(_Grids.uuid, this);\n  }\n  /**\n   * Creates a new grid for the given world.\n   * Throws an error if a grid already exists for the world.\n   *\n   * @param world - The world to create the grid for.\n   * @returns The newly created grid.\n   *\n   * @throws Will throw an error if a grid already exists for the given world.\n   */\n  create(world) {\n    if (this.list.has(world.uuid)) {\n      throw new Error(\"This world already has a grid!\");\n    }\n    const grid = new SimpleGrid(this.components, world);\n    this.list.set(world.uuid, grid);\n    world.onDisposed.add(() => {\n      this.delete(world);\n    });\n    return grid;\n  }\n  /**\n   * Deletes the grid associated with the given world.\n   * If a grid does not exist for the given world, this method does nothing.\n   *\n   * @param world - The world for which to delete the grid.\n   *\n   * @remarks\n   * This method will dispose of the grid and remove it from the internal list.\n   * If the world is disposed before calling this method, the grid will be automatically deleted.\n   */\n  delete(world) {\n    const grid = this.list.get(world.uuid);\n    if (grid) {\n      grid.dispose();\n    }\n    this.list.delete(world.uuid);\n  }\n  /** {@link Disposable.dispose} */\n  dispose() {\n    for (const [_id, grid] of this.list) {\n      grid.dispose();\n    }\n    this.list.clear();\n    this.onDisposed.trigger();\n    this.onDisposed.reset();\n  }\n};\n/**\n * A unique identifier for the component.\n * This UUID is used to register the component within the Components system.\n */\n__publicField(_Grids, \"uuid\", \"d1e814d5-b81c-4452-87a2-f039375e0489\");\nlet Grids = _Grids;\nconst CENTER = 0;\nconst AVERAGE = 1;\nconst SAH = 2;\nconst CONTAINED = 2;\nconst TRIANGLE_INTERSECT_COST = 1.25;\nconst TRAVERSAL_COST = 1;\nconst BYTES_PER_NODE = 6 * 4 + 4 + 4;\nconst IS_LEAFNODE_FLAG = 65535;\nconst FLOAT32_EPSILON = Math.pow(2, -24);\nconst SKIP_GENERATION = Symbol(\"SKIP_GENERATION\");\nfunction getVertexCount(geo) {\n  return geo.index ? geo.index.count : geo.attributes.position.count;\n}\nfunction getTriCount(geo) {\n  return getVertexCount(geo) / 3;\n}\nfunction getIndexArray(vertexCount, BufferConstructor = ArrayBuffer) {\n  if (vertexCount > 65535) {\n    return new Uint32Array(new BufferConstructor(4 * vertexCount));\n  } else {\n    return new Uint16Array(new BufferConstructor(2 * vertexCount));\n  }\n}\nfunction ensureIndex(geo, options) {\n  if (!geo.index) {\n    const vertexCount = geo.attributes.position.count;\n    const BufferConstructor = options.useSharedArrayBuffer ? SharedArrayBuffer : ArrayBuffer;\n    const index = getIndexArray(vertexCount, BufferConstructor);\n    geo.setIndex(new BufferAttribute(index, 1));\n    for (let i = 0; i < vertexCount; i++) {\n      index[i] = i;\n    }\n  }\n}\nfunction getFullGeometryRange(geo) {\n  const triCount = getTriCount(geo);\n  const drawRange = geo.drawRange;\n  const start = drawRange.start / 3;\n  const end = (drawRange.start + drawRange.count) / 3;\n  const offset = Math.max(0, start);\n  const count = Math.min(triCount, end) - offset;\n  return [{\n    offset: Math.floor(offset),\n    count: Math.floor(count)\n  }];\n}\nfunction getRootIndexRanges(geo) {\n  if (!geo.groups || !geo.groups.length) {\n    return getFullGeometryRange(geo);\n  }\n  const ranges = [];\n  const rangeBoundaries = /* @__PURE__ */ new Set();\n  const drawRange = geo.drawRange;\n  const drawRangeStart = drawRange.start / 3;\n  const drawRangeEnd = (drawRange.start + drawRange.count) / 3;\n  for (const group of geo.groups) {\n    const groupStart = group.start / 3;\n    const groupEnd = (group.start + group.count) / 3;\n    rangeBoundaries.add(Math.max(drawRangeStart, groupStart));\n    rangeBoundaries.add(Math.min(drawRangeEnd, groupEnd));\n  }\n  const sortedBoundaries = Array.from(rangeBoundaries.values()).sort((a, b) => a - b);\n  for (let i = 0; i < sortedBoundaries.length - 1; i++) {\n    const start = sortedBoundaries[i];\n    const end = sortedBoundaries[i + 1];\n    ranges.push({\n      offset: Math.floor(start),\n      count: Math.floor(end - start)\n    });\n  }\n  return ranges;\n}\nfunction hasGroupGaps(geometry) {\n  if (geometry.groups.length === 0) {\n    return false;\n  }\n  const vertexCount = getTriCount(geometry);\n  const groups = getRootIndexRanges(geometry).sort((a, b) => a.offset - b.offset);\n  const finalGroup = groups[groups.length - 1];\n  finalGroup.count = Math.min(vertexCount - finalGroup.offset, finalGroup.count);\n  let total = 0;\n  groups.forEach(({ count }) => total += count);\n  return vertexCount !== total;\n}\nfunction arrayToBox(nodeIndex32, array, target) {\n  target.min.x = array[nodeIndex32];\n  target.min.y = array[nodeIndex32 + 1];\n  target.min.z = array[nodeIndex32 + 2];\n  target.max.x = array[nodeIndex32 + 3];\n  target.max.y = array[nodeIndex32 + 4];\n  target.max.z = array[nodeIndex32 + 5];\n  return target;\n}\nfunction makeEmptyBounds(target) {\n  target[0] = target[1] = target[2] = Infinity;\n  target[3] = target[4] = target[5] = -Infinity;\n}\nfunction getLongestEdgeIndex(bounds) {\n  let splitDimIdx = -1;\n  let splitDist = -Infinity;\n  for (let i = 0; i < 3; i++) {\n    const dist = bounds[i + 3] - bounds[i];\n    if (dist > splitDist) {\n      splitDist = dist;\n      splitDimIdx = i;\n    }\n  }\n  return splitDimIdx;\n}\nfunction copyBounds(source, target) {\n  target.set(source);\n}\nfunction unionBounds(a, b, target) {\n  let aVal, bVal;\n  for (let d = 0; d < 3; d++) {\n    const d3 = d + 3;\n    aVal = a[d];\n    bVal = b[d];\n    target[d] = aVal < bVal ? aVal : bVal;\n    aVal = a[d3];\n    bVal = b[d3];\n    target[d3] = aVal > bVal ? aVal : bVal;\n  }\n}\nfunction expandByTriangleBounds(startIndex, triangleBounds, bounds) {\n  for (let d = 0; d < 3; d++) {\n    const tCenter = triangleBounds[startIndex + 2 * d];\n    const tHalf = triangleBounds[startIndex + 2 * d + 1];\n    const tMin = tCenter - tHalf;\n    const tMax = tCenter + tHalf;\n    if (tMin < bounds[d]) {\n      bounds[d] = tMin;\n    }\n    if (tMax > bounds[d + 3]) {\n      bounds[d + 3] = tMax;\n    }\n  }\n}\nfunction computeSurfaceArea(bounds) {\n  const d0 = bounds[3] - bounds[0];\n  const d1 = bounds[4] - bounds[1];\n  const d2 = bounds[5] - bounds[2];\n  return 2 * (d0 * d1 + d1 * d2 + d2 * d0);\n}\nfunction getBounds(triangleBounds, offset, count, target, centroidTarget = null) {\n  let minx = Infinity;\n  let miny = Infinity;\n  let minz = Infinity;\n  let maxx = -Infinity;\n  let maxy = -Infinity;\n  let maxz = -Infinity;\n  let cminx = Infinity;\n  let cminy = Infinity;\n  let cminz = Infinity;\n  let cmaxx = -Infinity;\n  let cmaxy = -Infinity;\n  let cmaxz = -Infinity;\n  const includeCentroid = centroidTarget !== null;\n  for (let i = offset * 6, end = (offset + count) * 6; i < end; i += 6) {\n    const cx = triangleBounds[i + 0];\n    const hx = triangleBounds[i + 1];\n    const lx = cx - hx;\n    const rx = cx + hx;\n    if (lx < minx)\n      minx = lx;\n    if (rx > maxx)\n      maxx = rx;\n    if (includeCentroid && cx < cminx)\n      cminx = cx;\n    if (includeCentroid && cx > cmaxx)\n      cmaxx = cx;\n    const cy = triangleBounds[i + 2];\n    const hy = triangleBounds[i + 3];\n    const ly = cy - hy;\n    const ry = cy + hy;\n    if (ly < miny)\n      miny = ly;\n    if (ry > maxy)\n      maxy = ry;\n    if (includeCentroid && cy < cminy)\n      cminy = cy;\n    if (includeCentroid && cy > cmaxy)\n      cmaxy = cy;\n    const cz = triangleBounds[i + 4];\n    const hz = triangleBounds[i + 5];\n    const lz = cz - hz;\n    const rz = cz + hz;\n    if (lz < minz)\n      minz = lz;\n    if (rz > maxz)\n      maxz = rz;\n    if (includeCentroid && cz < cminz)\n      cminz = cz;\n    if (includeCentroid && cz > cmaxz)\n      cmaxz = cz;\n  }\n  target[0] = minx;\n  target[1] = miny;\n  target[2] = minz;\n  target[3] = maxx;\n  target[4] = maxy;\n  target[5] = maxz;\n  if (includeCentroid) {\n    centroidTarget[0] = cminx;\n    centroidTarget[1] = cminy;\n    centroidTarget[2] = cminz;\n    centroidTarget[3] = cmaxx;\n    centroidTarget[4] = cmaxy;\n    centroidTarget[5] = cmaxz;\n  }\n}\nfunction getCentroidBounds(triangleBounds, offset, count, centroidTarget) {\n  let cminx = Infinity;\n  let cminy = Infinity;\n  let cminz = Infinity;\n  let cmaxx = -Infinity;\n  let cmaxy = -Infinity;\n  let cmaxz = -Infinity;\n  for (let i = offset * 6, end = (offset + count) * 6; i < end; i += 6) {\n    const cx = triangleBounds[i + 0];\n    if (cx < cminx)\n      cminx = cx;\n    if (cx > cmaxx)\n      cmaxx = cx;\n    const cy = triangleBounds[i + 2];\n    if (cy < cminy)\n      cminy = cy;\n    if (cy > cmaxy)\n      cmaxy = cy;\n    const cz = triangleBounds[i + 4];\n    if (cz < cminz)\n      cminz = cz;\n    if (cz > cmaxz)\n      cmaxz = cz;\n  }\n  centroidTarget[0] = cminx;\n  centroidTarget[1] = cminy;\n  centroidTarget[2] = cminz;\n  centroidTarget[3] = cmaxx;\n  centroidTarget[4] = cmaxy;\n  centroidTarget[5] = cmaxz;\n}\nfunction computeTriangleBounds(geo, fullBounds) {\n  makeEmptyBounds(fullBounds);\n  const posAttr = geo.attributes.position;\n  const index = geo.index ? geo.index.array : null;\n  const triCount = getTriCount(geo);\n  const triangleBounds = new Float32Array(triCount * 6);\n  const normalized = posAttr.normalized;\n  const posArr = posAttr.array;\n  const bufferOffset = posAttr.offset || 0;\n  let stride = 3;\n  if (posAttr.isInterleavedBufferAttribute) {\n    stride = posAttr.data.stride;\n  }\n  const getters = [\"getX\", \"getY\", \"getZ\"];\n  for (let tri = 0; tri < triCount; tri++) {\n    const tri3 = tri * 3;\n    const tri6 = tri * 6;\n    let ai = tri3 + 0;\n    let bi = tri3 + 1;\n    let ci = tri3 + 2;\n    if (index) {\n      ai = index[ai];\n      bi = index[bi];\n      ci = index[ci];\n    }\n    if (!normalized) {\n      ai = ai * stride + bufferOffset;\n      bi = bi * stride + bufferOffset;\n      ci = ci * stride + bufferOffset;\n    }\n    for (let el = 0; el < 3; el++) {\n      let a, b, c;\n      if (normalized) {\n        a = posAttr[getters[el]](ai);\n        b = posAttr[getters[el]](bi);\n        c = posAttr[getters[el]](ci);\n      } else {\n        a = posArr[ai + el];\n        b = posArr[bi + el];\n        c = posArr[ci + el];\n      }\n      let min = a;\n      if (b < min)\n        min = b;\n      if (c < min)\n        min = c;\n      let max = a;\n      if (b > max)\n        max = b;\n      if (c > max)\n        max = c;\n      const halfExtents = (max - min) / 2;\n      const el2 = el * 2;\n      triangleBounds[tri6 + el2 + 0] = min + halfExtents;\n      triangleBounds[tri6 + el2 + 1] = halfExtents + (Math.abs(min) + halfExtents) * FLOAT32_EPSILON;\n      if (min < fullBounds[el])\n        fullBounds[el] = min;\n      if (max > fullBounds[el + 3])\n        fullBounds[el + 3] = max;\n    }\n  }\n  return triangleBounds;\n}\nconst BIN_COUNT = 32;\nconst binsSort = (a, b) => a.candidate - b.candidate;\nconst sahBins = new Array(BIN_COUNT).fill().map(() => {\n  return {\n    count: 0,\n    bounds: new Float32Array(6),\n    rightCacheBounds: new Float32Array(6),\n    leftCacheBounds: new Float32Array(6),\n    candidate: 0\n  };\n});\nconst leftBounds = new Float32Array(6);\nfunction getOptimalSplit(nodeBoundingData, centroidBoundingData, triangleBounds, offset, count, strategy) {\n  let axis = -1;\n  let pos = 0;\n  if (strategy === CENTER) {\n    axis = getLongestEdgeIndex(centroidBoundingData);\n    if (axis !== -1) {\n      pos = (centroidBoundingData[axis] + centroidBoundingData[axis + 3]) / 2;\n    }\n  } else if (strategy === AVERAGE) {\n    axis = getLongestEdgeIndex(nodeBoundingData);\n    if (axis !== -1) {\n      pos = getAverage(triangleBounds, offset, count, axis);\n    }\n  } else if (strategy === SAH) {\n    const rootSurfaceArea = computeSurfaceArea(nodeBoundingData);\n    let bestCost = TRIANGLE_INTERSECT_COST * count;\n    const cStart = offset * 6;\n    const cEnd = (offset + count) * 6;\n    for (let a = 0; a < 3; a++) {\n      const axisLeft = centroidBoundingData[a];\n      const axisRight = centroidBoundingData[a + 3];\n      const axisLength = axisRight - axisLeft;\n      const binWidth = axisLength / BIN_COUNT;\n      if (count < BIN_COUNT / 4) {\n        const truncatedBins = [...sahBins];\n        truncatedBins.length = count;\n        let b = 0;\n        for (let c = cStart; c < cEnd; c += 6, b++) {\n          const bin = truncatedBins[b];\n          bin.candidate = triangleBounds[c + 2 * a];\n          bin.count = 0;\n          const {\n            bounds,\n            leftCacheBounds,\n            rightCacheBounds\n          } = bin;\n          for (let d = 0; d < 3; d++) {\n            rightCacheBounds[d] = Infinity;\n            rightCacheBounds[d + 3] = -Infinity;\n            leftCacheBounds[d] = Infinity;\n            leftCacheBounds[d + 3] = -Infinity;\n            bounds[d] = Infinity;\n            bounds[d + 3] = -Infinity;\n          }\n          expandByTriangleBounds(c, triangleBounds, bounds);\n        }\n        truncatedBins.sort(binsSort);\n        let splitCount = count;\n        for (let bi = 0; bi < splitCount; bi++) {\n          const bin = truncatedBins[bi];\n          while (bi + 1 < splitCount && truncatedBins[bi + 1].candidate === bin.candidate) {\n            truncatedBins.splice(bi + 1, 1);\n            splitCount--;\n          }\n        }\n        for (let c = cStart; c < cEnd; c += 6) {\n          const center = triangleBounds[c + 2 * a];\n          for (let bi = 0; bi < splitCount; bi++) {\n            const bin = truncatedBins[bi];\n            if (center >= bin.candidate) {\n              expandByTriangleBounds(c, triangleBounds, bin.rightCacheBounds);\n            } else {\n              expandByTriangleBounds(c, triangleBounds, bin.leftCacheBounds);\n              bin.count++;\n            }\n          }\n        }\n        for (let bi = 0; bi < splitCount; bi++) {\n          const bin = truncatedBins[bi];\n          const leftCount = bin.count;\n          const rightCount = count - bin.count;\n          const leftBounds2 = bin.leftCacheBounds;\n          const rightBounds = bin.rightCacheBounds;\n          let leftProb = 0;\n          if (leftCount !== 0) {\n            leftProb = computeSurfaceArea(leftBounds2) / rootSurfaceArea;\n          }\n          let rightProb = 0;\n          if (rightCount !== 0) {\n            rightProb = computeSurfaceArea(rightBounds) / rootSurfaceArea;\n          }\n          const cost = TRAVERSAL_COST + TRIANGLE_INTERSECT_COST * (leftProb * leftCount + rightProb * rightCount);\n          if (cost < bestCost) {\n            axis = a;\n            bestCost = cost;\n            pos = bin.candidate;\n          }\n        }\n      } else {\n        for (let i = 0; i < BIN_COUNT; i++) {\n          const bin = sahBins[i];\n          bin.count = 0;\n          bin.candidate = axisLeft + binWidth + i * binWidth;\n          const bounds = bin.bounds;\n          for (let d = 0; d < 3; d++) {\n            bounds[d] = Infinity;\n            bounds[d + 3] = -Infinity;\n          }\n        }\n        for (let c = cStart; c < cEnd; c += 6) {\n          const triCenter = triangleBounds[c + 2 * a];\n          const relativeCenter = triCenter - axisLeft;\n          let binIndex = ~~(relativeCenter / binWidth);\n          if (binIndex >= BIN_COUNT)\n            binIndex = BIN_COUNT - 1;\n          const bin = sahBins[binIndex];\n          bin.count++;\n          expandByTriangleBounds(c, triangleBounds, bin.bounds);\n        }\n        const lastBin = sahBins[BIN_COUNT - 1];\n        copyBounds(lastBin.bounds, lastBin.rightCacheBounds);\n        for (let i = BIN_COUNT - 2; i >= 0; i--) {\n          const bin = sahBins[i];\n          const nextBin = sahBins[i + 1];\n          unionBounds(bin.bounds, nextBin.rightCacheBounds, bin.rightCacheBounds);\n        }\n        let leftCount = 0;\n        for (let i = 0; i < BIN_COUNT - 1; i++) {\n          const bin = sahBins[i];\n          const binCount = bin.count;\n          const bounds = bin.bounds;\n          const nextBin = sahBins[i + 1];\n          const rightBounds = nextBin.rightCacheBounds;\n          if (binCount !== 0) {\n            if (leftCount === 0) {\n              copyBounds(bounds, leftBounds);\n            } else {\n              unionBounds(bounds, leftBounds, leftBounds);\n            }\n          }\n          leftCount += binCount;\n          let leftProb = 0;\n          let rightProb = 0;\n          if (leftCount !== 0) {\n            leftProb = computeSurfaceArea(leftBounds) / rootSurfaceArea;\n          }\n          const rightCount = count - leftCount;\n          if (rightCount !== 0) {\n            rightProb = computeSurfaceArea(rightBounds) / rootSurfaceArea;\n          }\n          const cost = TRAVERSAL_COST + TRIANGLE_INTERSECT_COST * (leftProb * leftCount + rightProb * rightCount);\n          if (cost < bestCost) {\n            axis = a;\n            bestCost = cost;\n            pos = bin.candidate;\n          }\n        }\n      }\n    }\n  } else {\n    console.warn(`MeshBVH: Invalid build strategy value ${strategy} used.`);\n  }\n  return { axis, pos };\n}\nfunction getAverage(triangleBounds, offset, count, axis) {\n  let avg = 0;\n  for (let i = offset, end = offset + count; i < end; i++) {\n    avg += triangleBounds[i * 6 + axis * 2];\n  }\n  return avg / count;\n}\nclass MeshBVHNode {\n  constructor() {\n  }\n}\nfunction partition(indirectBuffer, index, triangleBounds, offset, count, split) {\n  let left = offset;\n  let right = offset + count - 1;\n  const pos = split.pos;\n  const axisOffset = split.axis * 2;\n  while (true) {\n    while (left <= right && triangleBounds[left * 6 + axisOffset] < pos) {\n      left++;\n    }\n    while (left <= right && triangleBounds[right * 6 + axisOffset] >= pos) {\n      right--;\n    }\n    if (left < right) {\n      for (let i = 0; i < 3; i++) {\n        let t0 = index[left * 3 + i];\n        index[left * 3 + i] = index[right * 3 + i];\n        index[right * 3 + i] = t0;\n      }\n      for (let i = 0; i < 6; i++) {\n        let tb = triangleBounds[left * 6 + i];\n        triangleBounds[left * 6 + i] = triangleBounds[right * 6 + i];\n        triangleBounds[right * 6 + i] = tb;\n      }\n      left++;\n      right--;\n    } else {\n      return left;\n    }\n  }\n}\nfunction partition_indirect(indirectBuffer, index, triangleBounds, offset, count, split) {\n  let left = offset;\n  let right = offset + count - 1;\n  const pos = split.pos;\n  const axisOffset = split.axis * 2;\n  while (true) {\n    while (left <= right && triangleBounds[left * 6 + axisOffset] < pos) {\n      left++;\n    }\n    while (left <= right && triangleBounds[right * 6 + axisOffset] >= pos) {\n      right--;\n    }\n    if (left < right) {\n      let t = indirectBuffer[left];\n      indirectBuffer[left] = indirectBuffer[right];\n      indirectBuffer[right] = t;\n      for (let i = 0; i < 6; i++) {\n        let tb = triangleBounds[left * 6 + i];\n        triangleBounds[left * 6 + i] = triangleBounds[right * 6 + i];\n        triangleBounds[right * 6 + i] = tb;\n      }\n      left++;\n      right--;\n    } else {\n      return left;\n    }\n  }\n}\nfunction generateIndirectBuffer(geometry, useSharedArrayBuffer) {\n  const triCount = (geometry.index ? geometry.index.count : geometry.attributes.position.count) / 3;\n  const useUint32 = triCount > 2 ** 16;\n  const byteCount = useUint32 ? 4 : 2;\n  const buffer = useSharedArrayBuffer ? new SharedArrayBuffer(triCount * byteCount) : new ArrayBuffer(triCount * byteCount);\n  const indirectBuffer = useUint32 ? new Uint32Array(buffer) : new Uint16Array(buffer);\n  for (let i = 0, l = indirectBuffer.length; i < l; i++) {\n    indirectBuffer[i] = i;\n  }\n  return indirectBuffer;\n}\nfunction buildTree(bvh, options) {\n  const geometry = bvh.geometry;\n  const indexArray = geometry.index ? geometry.index.array : null;\n  const maxDepth = options.maxDepth;\n  const verbose = options.verbose;\n  const maxLeafTris = options.maxLeafTris;\n  const strategy = options.strategy;\n  const onProgress = options.onProgress;\n  const totalTriangles = getTriCount(geometry);\n  const indirectBuffer = bvh._indirectBuffer;\n  let reachedMaxDepth = false;\n  const fullBounds = new Float32Array(6);\n  const cacheCentroidBoundingData = new Float32Array(6);\n  const triangleBounds = computeTriangleBounds(geometry, fullBounds);\n  const partionFunc = options.indirect ? partition_indirect : partition;\n  const roots = [];\n  const ranges = options.indirect ? getFullGeometryRange(geometry) : getRootIndexRanges(geometry);\n  if (ranges.length === 1) {\n    const range = ranges[0];\n    const root = new MeshBVHNode();\n    root.boundingData = fullBounds;\n    getCentroidBounds(triangleBounds, range.offset, range.count, cacheCentroidBoundingData);\n    splitNode(root, range.offset, range.count, cacheCentroidBoundingData);\n    roots.push(root);\n  } else {\n    for (let range of ranges) {\n      const root = new MeshBVHNode();\n      root.boundingData = new Float32Array(6);\n      getBounds(triangleBounds, range.offset, range.count, root.boundingData, cacheCentroidBoundingData);\n      splitNode(root, range.offset, range.count, cacheCentroidBoundingData);\n      roots.push(root);\n    }\n  }\n  return roots;\n  function triggerProgress(trianglesProcessed) {\n    if (onProgress) {\n      onProgress(trianglesProcessed / totalTriangles);\n    }\n  }\n  function splitNode(node, offset, count, centroidBoundingData = null, depth = 0) {\n    if (!reachedMaxDepth && depth >= maxDepth) {\n      reachedMaxDepth = true;\n      if (verbose) {\n        console.warn(`MeshBVH: Max depth of ${maxDepth} reached when generating BVH. Consider increasing maxDepth.`);\n        console.warn(geometry);\n      }\n    }\n    if (count <= maxLeafTris || depth >= maxDepth) {\n      triggerProgress(offset + count);\n      node.offset = offset;\n      node.count = count;\n      return node;\n    }\n    const split = getOptimalSplit(node.boundingData, centroidBoundingData, triangleBounds, offset, count, strategy);\n    if (split.axis === -1) {\n      triggerProgress(offset + count);\n      node.offset = offset;\n      node.count = count;\n      return node;\n    }\n    const splitOffset = partionFunc(indirectBuffer, indexArray, triangleBounds, offset, count, split);\n    if (splitOffset === offset || splitOffset === offset + count) {\n      triggerProgress(offset + count);\n      node.offset = offset;\n      node.count = count;\n    } else {\n      node.splitAxis = split.axis;\n      const left = new MeshBVHNode();\n      const lstart = offset;\n      const lcount = splitOffset - offset;\n      node.left = left;\n      left.boundingData = new Float32Array(6);\n      getBounds(triangleBounds, lstart, lcount, left.boundingData, cacheCentroidBoundingData);\n      splitNode(left, lstart, lcount, cacheCentroidBoundingData, depth + 1);\n      const right = new MeshBVHNode();\n      const rstart = splitOffset;\n      const rcount = count - lcount;\n      node.right = right;\n      right.boundingData = new Float32Array(6);\n      getBounds(triangleBounds, rstart, rcount, right.boundingData, cacheCentroidBoundingData);\n      splitNode(right, rstart, rcount, cacheCentroidBoundingData, depth + 1);\n    }\n    return node;\n  }\n}\nfunction buildPackedTree(bvh, options) {\n  const geometry = bvh.geometry;\n  if (options.indirect) {\n    bvh._indirectBuffer = generateIndirectBuffer(geometry, options.useSharedArrayBuffer);\n    if (hasGroupGaps(geometry) && !options.verbose) {\n      console.warn(\n        'MeshBVH: Provided geometry contains groups that do not fully span the vertex contents while using the \"indirect\" option. BVH may incorrectly report intersections on unrendered portions of the geometry.'\n      );\n    }\n  }\n  if (!bvh._indirectBuffer) {\n    ensureIndex(geometry, options);\n  }\n  const roots = buildTree(bvh, options);\n  let float32Array;\n  let uint32Array;\n  let uint16Array;\n  const packedRoots = [];\n  const BufferConstructor = options.useSharedArrayBuffer ? SharedArrayBuffer : ArrayBuffer;\n  for (let i = 0; i < roots.length; i++) {\n    const root = roots[i];\n    let nodeCount = countNodes(root);\n    const buffer = new BufferConstructor(BYTES_PER_NODE * nodeCount);\n    float32Array = new Float32Array(buffer);\n    uint32Array = new Uint32Array(buffer);\n    uint16Array = new Uint16Array(buffer);\n    populateBuffer(0, root);\n    packedRoots.push(buffer);\n  }\n  bvh._roots = packedRoots;\n  return;\n  function countNodes(node) {\n    if (node.count) {\n      return 1;\n    } else {\n      return 1 + countNodes(node.left) + countNodes(node.right);\n    }\n  }\n  function populateBuffer(byteOffset, node) {\n    const stride4Offset = byteOffset / 4;\n    const stride2Offset = byteOffset / 2;\n    const isLeaf = !!node.count;\n    const boundingData = node.boundingData;\n    for (let i = 0; i < 6; i++) {\n      float32Array[stride4Offset + i] = boundingData[i];\n    }\n    if (isLeaf) {\n      const offset = node.offset;\n      const count = node.count;\n      uint32Array[stride4Offset + 6] = offset;\n      uint16Array[stride2Offset + 14] = count;\n      uint16Array[stride2Offset + 15] = IS_LEAFNODE_FLAG;\n      return byteOffset + BYTES_PER_NODE;\n    } else {\n      const left = node.left;\n      const right = node.right;\n      const splitAxis = node.splitAxis;\n      let nextUnusedPointer;\n      nextUnusedPointer = populateBuffer(byteOffset + BYTES_PER_NODE, left);\n      if (nextUnusedPointer / 4 > Math.pow(2, 32)) {\n        throw new Error(\"MeshBVH: Cannot store child pointer greater than 32 bits.\");\n      }\n      uint32Array[stride4Offset + 6] = nextUnusedPointer / 4;\n      nextUnusedPointer = populateBuffer(nextUnusedPointer, right);\n      uint32Array[stride4Offset + 7] = splitAxis;\n      return nextUnusedPointer;\n    }\n  }\n}\nclass SeparatingAxisBounds {\n  constructor() {\n    this.min = Infinity;\n    this.max = -Infinity;\n  }\n  setFromPointsField(points, field) {\n    let min = Infinity;\n    let max = -Infinity;\n    for (let i = 0, l = points.length; i < l; i++) {\n      const p = points[i];\n      const val2 = p[field];\n      min = val2 < min ? val2 : min;\n      max = val2 > max ? val2 : max;\n    }\n    this.min = min;\n    this.max = max;\n  }\n  setFromPoints(axis, points) {\n    let min = Infinity;\n    let max = -Infinity;\n    for (let i = 0, l = points.length; i < l; i++) {\n      const p = points[i];\n      const val2 = axis.dot(p);\n      min = val2 < min ? val2 : min;\n      max = val2 > max ? val2 : max;\n    }\n    this.min = min;\n    this.max = max;\n  }\n  isSeparated(other) {\n    return this.min > other.max || other.min > this.max;\n  }\n}\nSeparatingAxisBounds.prototype.setFromBox = function() {\n  const p = new Vector3();\n  return function setFromBox(axis, box) {\n    const boxMin = box.min;\n    const boxMax = box.max;\n    let min = Infinity;\n    let max = -Infinity;\n    for (let x = 0; x <= 1; x++) {\n      for (let y = 0; y <= 1; y++) {\n        for (let z = 0; z <= 1; z++) {\n          p.x = boxMin.x * x + boxMax.x * (1 - x);\n          p.y = boxMin.y * y + boxMax.y * (1 - y);\n          p.z = boxMin.z * z + boxMax.z * (1 - z);\n          const val2 = axis.dot(p);\n          min = Math.min(val2, min);\n          max = Math.max(val2, max);\n        }\n      }\n    }\n    this.min = min;\n    this.max = max;\n  };\n}();\nconst closestPointLineToLine = function() {\n  const dir1 = new Vector3();\n  const dir2 = new Vector3();\n  const v02 = new Vector3();\n  return function closestPointLineToLine2(l1, l2, result) {\n    const v0 = l1.start;\n    const v10 = dir1;\n    const v2 = l2.start;\n    const v32 = dir2;\n    v02.subVectors(v0, v2);\n    dir1.subVectors(l1.end, l1.start);\n    dir2.subVectors(l2.end, l2.start);\n    const d0232 = v02.dot(v32);\n    const d3210 = v32.dot(v10);\n    const d3232 = v32.dot(v32);\n    const d0210 = v02.dot(v10);\n    const d1010 = v10.dot(v10);\n    const denom = d1010 * d3232 - d3210 * d3210;\n    let d, d2;\n    if (denom !== 0) {\n      d = (d0232 * d3210 - d0210 * d3232) / denom;\n    } else {\n      d = 0;\n    }\n    d2 = (d0232 + d * d3210) / d3232;\n    result.x = d;\n    result.y = d2;\n  };\n}();\nconst closestPointsSegmentToSegment = function() {\n  const paramResult = new Vector2();\n  const temp12 = new Vector3();\n  const temp22 = new Vector3();\n  return function closestPointsSegmentToSegment2(l1, l2, target1, target2) {\n    closestPointLineToLine(l1, l2, paramResult);\n    let d = paramResult.x;\n    let d2 = paramResult.y;\n    if (d >= 0 && d <= 1 && d2 >= 0 && d2 <= 1) {\n      l1.at(d, target1);\n      l2.at(d2, target2);\n      return;\n    } else if (d >= 0 && d <= 1) {\n      if (d2 < 0) {\n        l2.at(0, target2);\n      } else {\n        l2.at(1, target2);\n      }\n      l1.closestPointToPoint(target2, true, target1);\n      return;\n    } else if (d2 >= 0 && d2 <= 1) {\n      if (d < 0) {\n        l1.at(0, target1);\n      } else {\n        l1.at(1, target1);\n      }\n      l2.closestPointToPoint(target1, true, target2);\n      return;\n    } else {\n      let p;\n      if (d < 0) {\n        p = l1.start;\n      } else {\n        p = l1.end;\n      }\n      let p2;\n      if (d2 < 0) {\n        p2 = l2.start;\n      } else {\n        p2 = l2.end;\n      }\n      const closestPoint = temp12;\n      const closestPoint2 = temp22;\n      l1.closestPointToPoint(p2, true, temp12);\n      l2.closestPointToPoint(p, true, temp22);\n      if (closestPoint.distanceToSquared(p2) <= closestPoint2.distanceToSquared(p)) {\n        target1.copy(closestPoint);\n        target2.copy(p2);\n        return;\n      } else {\n        target1.copy(p);\n        target2.copy(closestPoint2);\n        return;\n      }\n    }\n  };\n}();\nconst sphereIntersectTriangle = function() {\n  const closestPointTemp = new Vector3();\n  const projectedPointTemp = new Vector3();\n  const planeTemp = new Plane();\n  const lineTemp = new Line3();\n  return function sphereIntersectTriangle2(sphere, triangle3) {\n    const { radius, center } = sphere;\n    const { a, b, c } = triangle3;\n    lineTemp.start = a;\n    lineTemp.end = b;\n    const closestPoint1 = lineTemp.closestPointToPoint(center, true, closestPointTemp);\n    if (closestPoint1.distanceTo(center) <= radius)\n      return true;\n    lineTemp.start = a;\n    lineTemp.end = c;\n    const closestPoint2 = lineTemp.closestPointToPoint(center, true, closestPointTemp);\n    if (closestPoint2.distanceTo(center) <= radius)\n      return true;\n    lineTemp.start = b;\n    lineTemp.end = c;\n    const closestPoint3 = lineTemp.closestPointToPoint(center, true, closestPointTemp);\n    if (closestPoint3.distanceTo(center) <= radius)\n      return true;\n    const plane = triangle3.getPlane(planeTemp);\n    const dp = Math.abs(plane.distanceToPoint(center));\n    if (dp <= radius) {\n      const pp = plane.projectPoint(center, projectedPointTemp);\n      const cp = triangle3.containsPoint(pp);\n      if (cp)\n        return true;\n    }\n    return false;\n  };\n}();\nconst ZERO_EPSILON = 1e-15;\nfunction isNearZero(value) {\n  return Math.abs(value) < ZERO_EPSILON;\n}\nclass ExtendedTriangle extends Triangle {\n  constructor(...args) {\n    super(...args);\n    this.isExtendedTriangle = true;\n    this.satAxes = new Array(4).fill().map(() => new Vector3());\n    this.satBounds = new Array(4).fill().map(() => new SeparatingAxisBounds());\n    this.points = [this.a, this.b, this.c];\n    this.sphere = new Sphere();\n    this.plane = new Plane();\n    this.needsUpdate = true;\n  }\n  intersectsSphere(sphere) {\n    return sphereIntersectTriangle(sphere, this);\n  }\n  update() {\n    const a = this.a;\n    const b = this.b;\n    const c = this.c;\n    const points = this.points;\n    const satAxes = this.satAxes;\n    const satBounds = this.satBounds;\n    const axis0 = satAxes[0];\n    const sab0 = satBounds[0];\n    this.getNormal(axis0);\n    sab0.setFromPoints(axis0, points);\n    const axis1 = satAxes[1];\n    const sab1 = satBounds[1];\n    axis1.subVectors(a, b);\n    sab1.setFromPoints(axis1, points);\n    const axis2 = satAxes[2];\n    const sab2 = satBounds[2];\n    axis2.subVectors(b, c);\n    sab2.setFromPoints(axis2, points);\n    const axis3 = satAxes[3];\n    const sab3 = satBounds[3];\n    axis3.subVectors(c, a);\n    sab3.setFromPoints(axis3, points);\n    this.sphere.setFromPoints(this.points);\n    this.plane.setFromNormalAndCoplanarPoint(axis0, a);\n    this.needsUpdate = false;\n  }\n}\nExtendedTriangle.prototype.closestPointToSegment = function() {\n  const point1 = new Vector3();\n  const point2 = new Vector3();\n  const edge = new Line3();\n  return function distanceToSegment(segment, target1 = null, target2 = null) {\n    const { start, end } = segment;\n    const points = this.points;\n    let distSq;\n    let closestDistanceSq = Infinity;\n    for (let i = 0; i < 3; i++) {\n      const nexti = (i + 1) % 3;\n      edge.start.copy(points[i]);\n      edge.end.copy(points[nexti]);\n      closestPointsSegmentToSegment(edge, segment, point1, point2);\n      distSq = point1.distanceToSquared(point2);\n      if (distSq < closestDistanceSq) {\n        closestDistanceSq = distSq;\n        if (target1)\n          target1.copy(point1);\n        if (target2)\n          target2.copy(point2);\n      }\n    }\n    this.closestPointToPoint(start, point1);\n    distSq = start.distanceToSquared(point1);\n    if (distSq < closestDistanceSq) {\n      closestDistanceSq = distSq;\n      if (target1)\n        target1.copy(point1);\n      if (target2)\n        target2.copy(start);\n    }\n    this.closestPointToPoint(end, point1);\n    distSq = end.distanceToSquared(point1);\n    if (distSq < closestDistanceSq) {\n      closestDistanceSq = distSq;\n      if (target1)\n        target1.copy(point1);\n      if (target2)\n        target2.copy(end);\n    }\n    return Math.sqrt(closestDistanceSq);\n  };\n}();\nExtendedTriangle.prototype.intersectsTriangle = function() {\n  const saTri2 = new ExtendedTriangle();\n  const arr1 = new Array(3);\n  const arr2 = new Array(3);\n  const cachedSatBounds = new SeparatingAxisBounds();\n  const cachedSatBounds2 = new SeparatingAxisBounds();\n  const cachedAxis = new Vector3();\n  const dir = new Vector3();\n  const dir1 = new Vector3();\n  const dir2 = new Vector3();\n  const tempDir = new Vector3();\n  const edge = new Line3();\n  const edge1 = new Line3();\n  const edge2 = new Line3();\n  const tempPoint = new Vector3();\n  function triIntersectPlane(tri, plane, targetEdge) {\n    const points = tri.points;\n    let count = 0;\n    let startPointIntersection = -1;\n    for (let i = 0; i < 3; i++) {\n      const { start, end } = edge;\n      start.copy(points[i]);\n      end.copy(points[(i + 1) % 3]);\n      edge.delta(dir);\n      const startIntersects = isNearZero(plane.distanceToPoint(start));\n      if (isNearZero(plane.normal.dot(dir)) && startIntersects) {\n        targetEdge.copy(edge);\n        count = 2;\n        break;\n      }\n      const doesIntersect = plane.intersectLine(edge, tempPoint);\n      if (!doesIntersect && startIntersects) {\n        tempPoint.copy(start);\n      }\n      if ((doesIntersect || startIntersects) && !isNearZero(tempPoint.distanceTo(end))) {\n        if (count <= 1) {\n          const point = count === 1 ? targetEdge.start : targetEdge.end;\n          point.copy(tempPoint);\n          if (startIntersects) {\n            startPointIntersection = count;\n          }\n        } else if (count >= 2) {\n          const point = startPointIntersection === 1 ? targetEdge.start : targetEdge.end;\n          point.copy(tempPoint);\n          count = 2;\n          break;\n        }\n        count++;\n        if (count === 2 && startPointIntersection === -1) {\n          break;\n        }\n      }\n    }\n    return count;\n  }\n  return function intersectsTriangle(other, target = null, suppressLog = false) {\n    if (this.needsUpdate) {\n      this.update();\n    }\n    if (!other.isExtendedTriangle) {\n      saTri2.copy(other);\n      saTri2.update();\n      other = saTri2;\n    } else if (other.needsUpdate) {\n      other.update();\n    }\n    const plane1 = this.plane;\n    const plane2 = other.plane;\n    if (Math.abs(plane1.normal.dot(plane2.normal)) > 1 - 1e-10) {\n      const satBounds1 = this.satBounds;\n      const satAxes1 = this.satAxes;\n      arr2[0] = other.a;\n      arr2[1] = other.b;\n      arr2[2] = other.c;\n      for (let i = 0; i < 4; i++) {\n        const sb = satBounds1[i];\n        const sa = satAxes1[i];\n        cachedSatBounds.setFromPoints(sa, arr2);\n        if (sb.isSeparated(cachedSatBounds))\n          return false;\n      }\n      const satBounds2 = other.satBounds;\n      const satAxes2 = other.satAxes;\n      arr1[0] = this.a;\n      arr1[1] = this.b;\n      arr1[2] = this.c;\n      for (let i = 0; i < 4; i++) {\n        const sb = satBounds2[i];\n        const sa = satAxes2[i];\n        cachedSatBounds.setFromPoints(sa, arr1);\n        if (sb.isSeparated(cachedSatBounds))\n          return false;\n      }\n      for (let i = 0; i < 4; i++) {\n        const sa1 = satAxes1[i];\n        for (let i2 = 0; i2 < 4; i2++) {\n          const sa2 = satAxes2[i2];\n          cachedAxis.crossVectors(sa1, sa2);\n          cachedSatBounds.setFromPoints(cachedAxis, arr1);\n          cachedSatBounds2.setFromPoints(cachedAxis, arr2);\n          if (cachedSatBounds.isSeparated(cachedSatBounds2))\n            return false;\n        }\n      }\n      if (target) {\n        if (!suppressLog) {\n          console.warn(\"ExtendedTriangle.intersectsTriangle: Triangles are coplanar which does not support an output edge. Setting edge to 0, 0, 0.\");\n        }\n        target.start.set(0, 0, 0);\n        target.end.set(0, 0, 0);\n      }\n      return true;\n    } else {\n      const count1 = triIntersectPlane(this, plane2, edge1);\n      if (count1 === 1 && other.containsPoint(edge1.end)) {\n        if (target) {\n          target.start.copy(edge1.end);\n          target.end.copy(edge1.end);\n        }\n        return true;\n      } else if (count1 !== 2) {\n        return false;\n      }\n      const count2 = triIntersectPlane(other, plane1, edge2);\n      if (count2 === 1 && this.containsPoint(edge2.end)) {\n        if (target) {\n          target.start.copy(edge2.end);\n          target.end.copy(edge2.end);\n        }\n        return true;\n      } else if (count2 !== 2) {\n        return false;\n      }\n      edge1.delta(dir1);\n      edge2.delta(dir2);\n      if (dir1.dot(dir2) < 0) {\n        let tmp = edge2.start;\n        edge2.start = edge2.end;\n        edge2.end = tmp;\n      }\n      const s1 = edge1.start.dot(dir1);\n      const e1 = edge1.end.dot(dir1);\n      const s2 = edge2.start.dot(dir1);\n      const e2 = edge2.end.dot(dir1);\n      const separated1 = e1 < s2;\n      const separated2 = s1 < e2;\n      if (s1 !== e2 && s2 !== e1 && separated1 === separated2) {\n        return false;\n      }\n      if (target) {\n        tempDir.subVectors(edge1.start, edge2.start);\n        if (tempDir.dot(dir1) > 0) {\n          target.start.copy(edge1.start);\n        } else {\n          target.start.copy(edge2.start);\n        }\n        tempDir.subVectors(edge1.end, edge2.end);\n        if (tempDir.dot(dir1) < 0) {\n          target.end.copy(edge1.end);\n        } else {\n          target.end.copy(edge2.end);\n        }\n      }\n      return true;\n    }\n  };\n}();\nExtendedTriangle.prototype.distanceToPoint = function() {\n  const target = new Vector3();\n  return function distanceToPoint(point) {\n    this.closestPointToPoint(point, target);\n    return point.distanceTo(target);\n  };\n}();\nExtendedTriangle.prototype.distanceToTriangle = function() {\n  const point = new Vector3();\n  const point2 = new Vector3();\n  const cornerFields = [\"a\", \"b\", \"c\"];\n  const line1 = new Line3();\n  const line2 = new Line3();\n  return function distanceToTriangle(other, target1 = null, target2 = null) {\n    const lineTarget = target1 || target2 ? line1 : null;\n    if (this.intersectsTriangle(other, lineTarget)) {\n      if (target1 || target2) {\n        if (target1)\n          lineTarget.getCenter(target1);\n        if (target2)\n          lineTarget.getCenter(target2);\n      }\n      return 0;\n    }\n    let closestDistanceSq = Infinity;\n    for (let i = 0; i < 3; i++) {\n      let dist;\n      const field = cornerFields[i];\n      const otherVec = other[field];\n      this.closestPointToPoint(otherVec, point);\n      dist = otherVec.distanceToSquared(point);\n      if (dist < closestDistanceSq) {\n        closestDistanceSq = dist;\n        if (target1)\n          target1.copy(point);\n        if (target2)\n          target2.copy(otherVec);\n      }\n      const thisVec = this[field];\n      other.closestPointToPoint(thisVec, point);\n      dist = thisVec.distanceToSquared(point);\n      if (dist < closestDistanceSq) {\n        closestDistanceSq = dist;\n        if (target1)\n          target1.copy(thisVec);\n        if (target2)\n          target2.copy(point);\n      }\n    }\n    for (let i = 0; i < 3; i++) {\n      const f11 = cornerFields[i];\n      const f12 = cornerFields[(i + 1) % 3];\n      line1.set(this[f11], this[f12]);\n      for (let i2 = 0; i2 < 3; i2++) {\n        const f21 = cornerFields[i2];\n        const f22 = cornerFields[(i2 + 1) % 3];\n        line2.set(other[f21], other[f22]);\n        closestPointsSegmentToSegment(line1, line2, point, point2);\n        const dist = point.distanceToSquared(point2);\n        if (dist < closestDistanceSq) {\n          closestDistanceSq = dist;\n          if (target1)\n            target1.copy(point);\n          if (target2)\n            target2.copy(point2);\n        }\n      }\n    }\n    return Math.sqrt(closestDistanceSq);\n  };\n}();\nclass OrientedBox {\n  constructor(min, max, matrix) {\n    this.isOrientedBox = true;\n    this.min = new Vector3();\n    this.max = new Vector3();\n    this.matrix = new Matrix4();\n    this.invMatrix = new Matrix4();\n    this.points = new Array(8).fill().map(() => new Vector3());\n    this.satAxes = new Array(3).fill().map(() => new Vector3());\n    this.satBounds = new Array(3).fill().map(() => new SeparatingAxisBounds());\n    this.alignedSatBounds = new Array(3).fill().map(() => new SeparatingAxisBounds());\n    this.needsUpdate = false;\n    if (min)\n      this.min.copy(min);\n    if (max)\n      this.max.copy(max);\n    if (matrix)\n      this.matrix.copy(matrix);\n  }\n  set(min, max, matrix) {\n    this.min.copy(min);\n    this.max.copy(max);\n    this.matrix.copy(matrix);\n    this.needsUpdate = true;\n  }\n  copy(other) {\n    this.min.copy(other.min);\n    this.max.copy(other.max);\n    this.matrix.copy(other.matrix);\n    this.needsUpdate = true;\n  }\n}\nOrientedBox.prototype.update = /* @__PURE__ */ function() {\n  return function update() {\n    const matrix = this.matrix;\n    const min = this.min;\n    const max = this.max;\n    const points = this.points;\n    for (let x = 0; x <= 1; x++) {\n      for (let y = 0; y <= 1; y++) {\n        for (let z = 0; z <= 1; z++) {\n          const i = (1 << 0) * x | (1 << 1) * y | (1 << 2) * z;\n          const v = points[i];\n          v.x = x ? max.x : min.x;\n          v.y = y ? max.y : min.y;\n          v.z = z ? max.z : min.z;\n          v.applyMatrix4(matrix);\n        }\n      }\n    }\n    const satBounds = this.satBounds;\n    const satAxes = this.satAxes;\n    const minVec = points[0];\n    for (let i = 0; i < 3; i++) {\n      const axis = satAxes[i];\n      const sb = satBounds[i];\n      const index = 1 << i;\n      const pi = points[index];\n      axis.subVectors(minVec, pi);\n      sb.setFromPoints(axis, points);\n    }\n    const alignedSatBounds = this.alignedSatBounds;\n    alignedSatBounds[0].setFromPointsField(points, \"x\");\n    alignedSatBounds[1].setFromPointsField(points, \"y\");\n    alignedSatBounds[2].setFromPointsField(points, \"z\");\n    this.invMatrix.copy(this.matrix).invert();\n    this.needsUpdate = false;\n  };\n}();\nOrientedBox.prototype.intersectsBox = function() {\n  const aabbBounds = new SeparatingAxisBounds();\n  return function intersectsBox(box) {\n    if (this.needsUpdate) {\n      this.update();\n    }\n    const min = box.min;\n    const max = box.max;\n    const satBounds = this.satBounds;\n    const satAxes = this.satAxes;\n    const alignedSatBounds = this.alignedSatBounds;\n    aabbBounds.min = min.x;\n    aabbBounds.max = max.x;\n    if (alignedSatBounds[0].isSeparated(aabbBounds))\n      return false;\n    aabbBounds.min = min.y;\n    aabbBounds.max = max.y;\n    if (alignedSatBounds[1].isSeparated(aabbBounds))\n      return false;\n    aabbBounds.min = min.z;\n    aabbBounds.max = max.z;\n    if (alignedSatBounds[2].isSeparated(aabbBounds))\n      return false;\n    for (let i = 0; i < 3; i++) {\n      const axis = satAxes[i];\n      const sb = satBounds[i];\n      aabbBounds.setFromBox(axis, box);\n      if (sb.isSeparated(aabbBounds))\n        return false;\n    }\n    return true;\n  };\n}();\nOrientedBox.prototype.intersectsTriangle = function() {\n  const saTri = new ExtendedTriangle();\n  const pointsArr = new Array(3);\n  const cachedSatBounds = new SeparatingAxisBounds();\n  const cachedSatBounds2 = new SeparatingAxisBounds();\n  const cachedAxis = new Vector3();\n  return function intersectsTriangle(triangle3) {\n    if (this.needsUpdate) {\n      this.update();\n    }\n    if (!triangle3.isExtendedTriangle) {\n      saTri.copy(triangle3);\n      saTri.update();\n      triangle3 = saTri;\n    } else if (triangle3.needsUpdate) {\n      triangle3.update();\n    }\n    const satBounds = this.satBounds;\n    const satAxes = this.satAxes;\n    pointsArr[0] = triangle3.a;\n    pointsArr[1] = triangle3.b;\n    pointsArr[2] = triangle3.c;\n    for (let i = 0; i < 3; i++) {\n      const sb = satBounds[i];\n      const sa = satAxes[i];\n      cachedSatBounds.setFromPoints(sa, pointsArr);\n      if (sb.isSeparated(cachedSatBounds))\n        return false;\n    }\n    const triSatBounds = triangle3.satBounds;\n    const triSatAxes = triangle3.satAxes;\n    const points = this.points;\n    for (let i = 0; i < 3; i++) {\n      const sb = triSatBounds[i];\n      const sa = triSatAxes[i];\n      cachedSatBounds.setFromPoints(sa, points);\n      if (sb.isSeparated(cachedSatBounds))\n        return false;\n    }\n    for (let i = 0; i < 3; i++) {\n      const sa1 = satAxes[i];\n      for (let i2 = 0; i2 < 4; i2++) {\n        const sa2 = triSatAxes[i2];\n        cachedAxis.crossVectors(sa1, sa2);\n        cachedSatBounds.setFromPoints(cachedAxis, pointsArr);\n        cachedSatBounds2.setFromPoints(cachedAxis, points);\n        if (cachedSatBounds.isSeparated(cachedSatBounds2))\n          return false;\n      }\n    }\n    return true;\n  };\n}();\nOrientedBox.prototype.closestPointToPoint = /* @__PURE__ */ function() {\n  return function closestPointToPoint2(point, target1) {\n    if (this.needsUpdate) {\n      this.update();\n    }\n    target1.copy(point).applyMatrix4(this.invMatrix).clamp(this.min, this.max).applyMatrix4(this.matrix);\n    return target1;\n  };\n}();\nOrientedBox.prototype.distanceToPoint = function() {\n  const target = new Vector3();\n  return function distanceToPoint(point) {\n    this.closestPointToPoint(point, target);\n    return point.distanceTo(target);\n  };\n}();\nOrientedBox.prototype.distanceToBox = function() {\n  const xyzFields = [\"x\", \"y\", \"z\"];\n  const segments1 = new Array(12).fill().map(() => new Line3());\n  const segments2 = new Array(12).fill().map(() => new Line3());\n  const point1 = new Vector3();\n  const point2 = new Vector3();\n  return function distanceToBox(box, threshold = 0, target1 = null, target2 = null) {\n    if (this.needsUpdate) {\n      this.update();\n    }\n    if (this.intersectsBox(box)) {\n      if (target1 || target2) {\n        box.getCenter(point2);\n        this.closestPointToPoint(point2, point1);\n        box.closestPointToPoint(point1, point2);\n        if (target1)\n          target1.copy(point1);\n        if (target2)\n          target2.copy(point2);\n      }\n      return 0;\n    }\n    const threshold2 = threshold * threshold;\n    const min = box.min;\n    const max = box.max;\n    const points = this.points;\n    let closestDistanceSq = Infinity;\n    for (let i = 0; i < 8; i++) {\n      const p = points[i];\n      point2.copy(p).clamp(min, max);\n      const dist = p.distanceToSquared(point2);\n      if (dist < closestDistanceSq) {\n        closestDistanceSq = dist;\n        if (target1)\n          target1.copy(p);\n        if (target2)\n          target2.copy(point2);\n        if (dist < threshold2)\n          return Math.sqrt(dist);\n      }\n    }\n    let count = 0;\n    for (let i = 0; i < 3; i++) {\n      for (let i1 = 0; i1 <= 1; i1++) {\n        for (let i2 = 0; i2 <= 1; i2++) {\n          const nextIndex = (i + 1) % 3;\n          const nextIndex2 = (i + 2) % 3;\n          const index = i1 << nextIndex | i2 << nextIndex2;\n          const index2 = 1 << i | i1 << nextIndex | i2 << nextIndex2;\n          const p1 = points[index];\n          const p2 = points[index2];\n          const line1 = segments1[count];\n          line1.set(p1, p2);\n          const f1 = xyzFields[i];\n          const f2 = xyzFields[nextIndex];\n          const f3 = xyzFields[nextIndex2];\n          const line2 = segments2[count];\n          const start = line2.start;\n          const end = line2.end;\n          start[f1] = min[f1];\n          start[f2] = i1 ? min[f2] : max[f2];\n          start[f3] = i2 ? min[f3] : max[f2];\n          end[f1] = max[f1];\n          end[f2] = i1 ? min[f2] : max[f2];\n          end[f3] = i2 ? min[f3] : max[f2];\n          count++;\n        }\n      }\n    }\n    for (let x = 0; x <= 1; x++) {\n      for (let y = 0; y <= 1; y++) {\n        for (let z = 0; z <= 1; z++) {\n          point2.x = x ? max.x : min.x;\n          point2.y = y ? max.y : min.y;\n          point2.z = z ? max.z : min.z;\n          this.closestPointToPoint(point2, point1);\n          const dist = point2.distanceToSquared(point1);\n          if (dist < closestDistanceSq) {\n            closestDistanceSq = dist;\n            if (target1)\n              target1.copy(point1);\n            if (target2)\n              target2.copy(point2);\n            if (dist < threshold2)\n              return Math.sqrt(dist);\n          }\n        }\n      }\n    }\n    for (let i = 0; i < 12; i++) {\n      const l1 = segments1[i];\n      for (let i2 = 0; i2 < 12; i2++) {\n        const l2 = segments2[i2];\n        closestPointsSegmentToSegment(l1, l2, point1, point2);\n        const dist = point1.distanceToSquared(point2);\n        if (dist < closestDistanceSq) {\n          closestDistanceSq = dist;\n          if (target1)\n            target1.copy(point1);\n          if (target2)\n            target2.copy(point2);\n          if (dist < threshold2)\n            return Math.sqrt(dist);\n        }\n      }\n    }\n    return Math.sqrt(closestDistanceSq);\n  };\n}();\nclass PrimitivePool {\n  constructor(getNewPrimitive) {\n    this._getNewPrimitive = getNewPrimitive;\n    this._primitives = [];\n  }\n  getPrimitive() {\n    const primitives = this._primitives;\n    if (primitives.length === 0) {\n      return this._getNewPrimitive();\n    } else {\n      return primitives.pop();\n    }\n  }\n  releasePrimitive(primitive) {\n    this._primitives.push(primitive);\n  }\n}\nclass ExtendedTrianglePoolBase extends PrimitivePool {\n  constructor() {\n    super(() => new ExtendedTriangle());\n  }\n}\nconst ExtendedTrianglePool = /* @__PURE__ */ new ExtendedTrianglePoolBase();\nfunction IS_LEAF(n16, uint16Array) {\n  return uint16Array[n16 + 15] === 65535;\n}\nfunction OFFSET(n32, uint32Array) {\n  return uint32Array[n32 + 6];\n}\nfunction COUNT(n16, uint16Array) {\n  return uint16Array[n16 + 14];\n}\nfunction LEFT_NODE(n32) {\n  return n32 + 8;\n}\nfunction RIGHT_NODE(n32, uint32Array) {\n  return uint32Array[n32 + 6];\n}\nfunction SPLIT_AXIS(n32, uint32Array) {\n  return uint32Array[n32 + 7];\n}\nfunction BOUNDING_DATA_INDEX(n32) {\n  return n32;\n}\nclass _BufferStack {\n  constructor() {\n    this.float32Array = null;\n    this.uint16Array = null;\n    this.uint32Array = null;\n    const stack = [];\n    let prevBuffer = null;\n    this.setBuffer = (buffer) => {\n      if (prevBuffer) {\n        stack.push(prevBuffer);\n      }\n      prevBuffer = buffer;\n      this.float32Array = new Float32Array(buffer);\n      this.uint16Array = new Uint16Array(buffer);\n      this.uint32Array = new Uint32Array(buffer);\n    };\n    this.clearBuffer = () => {\n      prevBuffer = null;\n      this.float32Array = null;\n      this.uint16Array = null;\n      this.uint32Array = null;\n      if (stack.length !== 0) {\n        this.setBuffer(stack.pop());\n      }\n    };\n  }\n}\nconst BufferStack = new _BufferStack();\nlet _box1, _box2;\nconst boxStack = [];\nconst boxPool = /* @__PURE__ */ new PrimitivePool(() => new Box3());\nfunction shapecast(bvh, root, intersectsBounds, intersectsRange, boundsTraverseOrder, byteOffset) {\n  _box1 = boxPool.getPrimitive();\n  _box2 = boxPool.getPrimitive();\n  boxStack.push(_box1, _box2);\n  BufferStack.setBuffer(bvh._roots[root]);\n  const result = shapecastTraverse(0, bvh.geometry, intersectsBounds, intersectsRange, boundsTraverseOrder, byteOffset);\n  BufferStack.clearBuffer();\n  boxPool.releasePrimitive(_box1);\n  boxPool.releasePrimitive(_box2);\n  boxStack.pop();\n  boxStack.pop();\n  const length = boxStack.length;\n  if (length > 0) {\n    _box2 = boxStack[length - 1];\n    _box1 = boxStack[length - 2];\n  }\n  return result;\n}\nfunction shapecastTraverse(nodeIndex32, geometry, intersectsBoundsFunc, intersectsRangeFunc, nodeScoreFunc = null, nodeIndexByteOffset = 0, depth = 0) {\n  const { float32Array, uint16Array, uint32Array } = BufferStack;\n  let nodeIndex16 = nodeIndex32 * 2;\n  const isLeaf = IS_LEAF(nodeIndex16, uint16Array);\n  if (isLeaf) {\n    const offset = OFFSET(nodeIndex32, uint32Array);\n    const count = COUNT(nodeIndex16, uint16Array);\n    arrayToBox(BOUNDING_DATA_INDEX(nodeIndex32), float32Array, _box1);\n    return intersectsRangeFunc(offset, count, false, depth, nodeIndexByteOffset + nodeIndex32, _box1);\n  } else {\n    let getLeftOffset = function(nodeIndex322) {\n      const { uint16Array: uint16Array2, uint32Array: uint32Array2 } = BufferStack;\n      let nodeIndex162 = nodeIndex322 * 2;\n      while (!IS_LEAF(nodeIndex162, uint16Array2)) {\n        nodeIndex322 = LEFT_NODE(nodeIndex322);\n        nodeIndex162 = nodeIndex322 * 2;\n      }\n      return OFFSET(nodeIndex322, uint32Array2);\n    }, getRightEndOffset = function(nodeIndex322) {\n      const { uint16Array: uint16Array2, uint32Array: uint32Array2 } = BufferStack;\n      let nodeIndex162 = nodeIndex322 * 2;\n      while (!IS_LEAF(nodeIndex162, uint16Array2)) {\n        nodeIndex322 = RIGHT_NODE(nodeIndex322, uint32Array2);\n        nodeIndex162 = nodeIndex322 * 2;\n      }\n      return OFFSET(nodeIndex322, uint32Array2) + COUNT(nodeIndex162, uint16Array2);\n    };\n    const left = LEFT_NODE(nodeIndex32);\n    const right = RIGHT_NODE(nodeIndex32, uint32Array);\n    let c1 = left;\n    let c2 = right;\n    let score1, score2;\n    let box1, box2;\n    if (nodeScoreFunc) {\n      box1 = _box1;\n      box2 = _box2;\n      arrayToBox(BOUNDING_DATA_INDEX(c1), float32Array, box1);\n      arrayToBox(BOUNDING_DATA_INDEX(c2), float32Array, box2);\n      score1 = nodeScoreFunc(box1);\n      score2 = nodeScoreFunc(box2);\n      if (score2 < score1) {\n        c1 = right;\n        c2 = left;\n        const temp5 = score1;\n        score1 = score2;\n        score2 = temp5;\n        box1 = box2;\n      }\n    }\n    if (!box1) {\n      box1 = _box1;\n      arrayToBox(BOUNDING_DATA_INDEX(c1), float32Array, box1);\n    }\n    const isC1Leaf = IS_LEAF(c1 * 2, uint16Array);\n    const c1Intersection = intersectsBoundsFunc(box1, isC1Leaf, score1, depth + 1, nodeIndexByteOffset + c1);\n    let c1StopTraversal;\n    if (c1Intersection === CONTAINED) {\n      const offset = getLeftOffset(c1);\n      const end = getRightEndOffset(c1);\n      const count = end - offset;\n      c1StopTraversal = intersectsRangeFunc(offset, count, true, depth + 1, nodeIndexByteOffset + c1, box1);\n    } else {\n      c1StopTraversal = c1Intersection && shapecastTraverse(\n        c1,\n        geometry,\n        intersectsBoundsFunc,\n        intersectsRangeFunc,\n        nodeScoreFunc,\n        nodeIndexByteOffset,\n        depth + 1\n      );\n    }\n    if (c1StopTraversal)\n      return true;\n    box2 = _box2;\n    arrayToBox(BOUNDING_DATA_INDEX(c2), float32Array, box2);\n    const isC2Leaf = IS_LEAF(c2 * 2, uint16Array);\n    const c2Intersection = intersectsBoundsFunc(box2, isC2Leaf, score2, depth + 1, nodeIndexByteOffset + c2);\n    let c2StopTraversal;\n    if (c2Intersection === CONTAINED) {\n      const offset = getLeftOffset(c2);\n      const end = getRightEndOffset(c2);\n      const count = end - offset;\n      c2StopTraversal = intersectsRangeFunc(offset, count, true, depth + 1, nodeIndexByteOffset + c2, box2);\n    } else {\n      c2StopTraversal = c2Intersection && shapecastTraverse(\n        c2,\n        geometry,\n        intersectsBoundsFunc,\n        intersectsRangeFunc,\n        nodeScoreFunc,\n        nodeIndexByteOffset,\n        depth + 1\n      );\n    }\n    if (c2StopTraversal)\n      return true;\n    return false;\n  }\n}\nconst temp = /* @__PURE__ */ new Vector3();\nconst temp1$2 = /* @__PURE__ */ new Vector3();\nfunction closestPointToPoint(bvh, point, target = {}, minThreshold = 0, maxThreshold = Infinity) {\n  const minThresholdSq = minThreshold * minThreshold;\n  const maxThresholdSq = maxThreshold * maxThreshold;\n  let closestDistanceSq = Infinity;\n  let closestDistanceTriIndex = null;\n  bvh.shapecast(\n    {\n      boundsTraverseOrder: (box) => {\n        temp.copy(point).clamp(box.min, box.max);\n        return temp.distanceToSquared(point);\n      },\n      intersectsBounds: (box, isLeaf, score) => {\n        return score < closestDistanceSq && score < maxThresholdSq;\n      },\n      intersectsTriangle: (tri, triIndex) => {\n        tri.closestPointToPoint(point, temp);\n        const distSq = point.distanceToSquared(temp);\n        if (distSq < closestDistanceSq) {\n          temp1$2.copy(temp);\n          closestDistanceSq = distSq;\n          closestDistanceTriIndex = triIndex;\n        }\n        if (distSq < minThresholdSq) {\n          return true;\n        } else {\n          return false;\n        }\n      }\n    }\n  );\n  if (closestDistanceSq === Infinity)\n    return null;\n  const closestDistance = Math.sqrt(closestDistanceSq);\n  if (!target.point)\n    target.point = temp1$2.clone();\n  else\n    target.point.copy(temp1$2);\n  target.distance = closestDistance, target.faceIndex = closestDistanceTriIndex;\n  return target;\n}\nconst _vA = /* @__PURE__ */ new Vector3();\nconst _vB = /* @__PURE__ */ new Vector3();\nconst _vC = /* @__PURE__ */ new Vector3();\nconst _uvA = /* @__PURE__ */ new Vector2();\nconst _uvB = /* @__PURE__ */ new Vector2();\nconst _uvC = /* @__PURE__ */ new Vector2();\nconst _normalA = /* @__PURE__ */ new Vector3();\nconst _normalB = /* @__PURE__ */ new Vector3();\nconst _normalC = /* @__PURE__ */ new Vector3();\nconst _intersectionPoint = /* @__PURE__ */ new Vector3();\nfunction checkIntersection(ray2, pA, pB, pC, point, side) {\n  let intersect;\n  if (side === BackSide) {\n    intersect = ray2.intersectTriangle(pC, pB, pA, true, point);\n  } else {\n    intersect = ray2.intersectTriangle(pA, pB, pC, side !== DoubleSide, point);\n  }\n  if (intersect === null)\n    return null;\n  const distance = ray2.origin.distanceTo(point);\n  return {\n    distance,\n    point: point.clone()\n  };\n}\nfunction checkBufferGeometryIntersection(ray2, position, normal, uv, uv1, a, b, c, side) {\n  _vA.fromBufferAttribute(position, a);\n  _vB.fromBufferAttribute(position, b);\n  _vC.fromBufferAttribute(position, c);\n  const intersection = checkIntersection(ray2, _vA, _vB, _vC, _intersectionPoint, side);\n  if (intersection) {\n    if (uv) {\n      _uvA.fromBufferAttribute(uv, a);\n      _uvB.fromBufferAttribute(uv, b);\n      _uvC.fromBufferAttribute(uv, c);\n      intersection.uv = Triangle.getInterpolation(_intersectionPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2());\n    }\n    if (uv1) {\n      _uvA.fromBufferAttribute(uv1, a);\n      _uvB.fromBufferAttribute(uv1, b);\n      _uvC.fromBufferAttribute(uv1, c);\n      intersection.uv1 = Triangle.getInterpolation(_intersectionPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2());\n    }\n    if (normal) {\n      _normalA.fromBufferAttribute(normal, a);\n      _normalB.fromBufferAttribute(normal, b);\n      _normalC.fromBufferAttribute(normal, c);\n      intersection.normal = Triangle.getInterpolation(_intersectionPoint, _vA, _vB, _vC, _normalA, _normalB, _normalC, new Vector3());\n      if (intersection.normal.dot(ray2.direction) > 0) {\n        intersection.normal.multiplyScalar(-1);\n      }\n    }\n    const face = {\n      a,\n      b,\n      c,\n      normal: new Vector3(),\n      materialIndex: 0\n    };\n    Triangle.getNormal(_vA, _vB, _vC, face.normal);\n    intersection.face = face;\n    intersection.faceIndex = a;\n  }\n  return intersection;\n}\nfunction intersectTri(geo, side, ray2, tri, intersections) {\n  const triOffset = tri * 3;\n  let a = triOffset + 0;\n  let b = triOffset + 1;\n  let c = triOffset + 2;\n  const index = geo.index;\n  if (geo.index) {\n    a = index.getX(a);\n    b = index.getX(b);\n    c = index.getX(c);\n  }\n  const { position, normal, uv, uv1 } = geo.attributes;\n  const intersection = checkBufferGeometryIntersection(ray2, position, normal, uv, uv1, a, b, c, side);\n  if (intersection) {\n    intersection.faceIndex = tri;\n    if (intersections)\n      intersections.push(intersection);\n    return intersection;\n  }\n  return null;\n}\nfunction setTriangle(tri, i, index, pos) {\n  const ta = tri.a;\n  const tb = tri.b;\n  const tc = tri.c;\n  let i0 = i;\n  let i1 = i + 1;\n  let i2 = i + 2;\n  if (index) {\n    i0 = index.getX(i0);\n    i1 = index.getX(i1);\n    i2 = index.getX(i2);\n  }\n  ta.x = pos.getX(i0);\n  ta.y = pos.getY(i0);\n  ta.z = pos.getZ(i0);\n  tb.x = pos.getX(i1);\n  tb.y = pos.getY(i1);\n  tb.z = pos.getZ(i1);\n  tc.x = pos.getX(i2);\n  tc.y = pos.getY(i2);\n  tc.z = pos.getZ(i2);\n}\nfunction intersectTris(bvh, side, ray2, offset, count, intersections) {\n  const { geometry, _indirectBuffer } = bvh;\n  for (let i = offset, end = offset + count; i < end; i++) {\n    intersectTri(geometry, side, ray2, i, intersections);\n  }\n}\nfunction intersectClosestTri(bvh, side, ray2, offset, count) {\n  const { geometry, _indirectBuffer } = bvh;\n  let dist = Infinity;\n  let res = null;\n  for (let i = offset, end = offset + count; i < end; i++) {\n    let intersection;\n    intersection = intersectTri(geometry, side, ray2, i);\n    if (intersection && intersection.distance < dist) {\n      res = intersection;\n      dist = intersection.distance;\n    }\n  }\n  return res;\n}\nfunction iterateOverTriangles(offset, count, bvh, intersectsTriangleFunc, contained, depth, triangle3) {\n  const { geometry } = bvh;\n  const { index } = geometry;\n  const pos = geometry.attributes.position;\n  for (let i = offset, l = count + offset; i < l; i++) {\n    let tri;\n    tri = i;\n    setTriangle(triangle3, tri * 3, index, pos);\n    triangle3.needsUpdate = true;\n    if (intersectsTriangleFunc(triangle3, tri, contained, depth)) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction refit(bvh, nodeIndices = null) {\n  if (nodeIndices && Array.isArray(nodeIndices)) {\n    nodeIndices = new Set(nodeIndices);\n  }\n  const geometry = bvh.geometry;\n  const indexArr = geometry.index ? geometry.index.array : null;\n  const posAttr = geometry.attributes.position;\n  let buffer, uint32Array, uint16Array, float32Array;\n  let byteOffset = 0;\n  const roots = bvh._roots;\n  for (let i = 0, l = roots.length; i < l; i++) {\n    buffer = roots[i];\n    uint32Array = new Uint32Array(buffer);\n    uint16Array = new Uint16Array(buffer);\n    float32Array = new Float32Array(buffer);\n    _traverse2(0, byteOffset);\n    byteOffset += buffer.byteLength;\n  }\n  function _traverse2(node32Index, byteOffset2, force = false) {\n    const node16Index = node32Index * 2;\n    const isLeaf = uint16Array[node16Index + 15] === IS_LEAFNODE_FLAG;\n    if (isLeaf) {\n      const offset = uint32Array[node32Index + 6];\n      const count = uint16Array[node16Index + 14];\n      let minx = Infinity;\n      let miny = Infinity;\n      let minz = Infinity;\n      let maxx = -Infinity;\n      let maxy = -Infinity;\n      let maxz = -Infinity;\n      for (let i = 3 * offset, l = 3 * (offset + count); i < l; i++) {\n        let index = indexArr[i];\n        const x = posAttr.getX(index);\n        const y = posAttr.getY(index);\n        const z = posAttr.getZ(index);\n        if (x < minx)\n          minx = x;\n        if (x > maxx)\n          maxx = x;\n        if (y < miny)\n          miny = y;\n        if (y > maxy)\n          maxy = y;\n        if (z < minz)\n          minz = z;\n        if (z > maxz)\n          maxz = z;\n      }\n      if (float32Array[node32Index + 0] !== minx || float32Array[node32Index + 1] !== miny || float32Array[node32Index + 2] !== minz || float32Array[node32Index + 3] !== maxx || float32Array[node32Index + 4] !== maxy || float32Array[node32Index + 5] !== maxz) {\n        float32Array[node32Index + 0] = minx;\n        float32Array[node32Index + 1] = miny;\n        float32Array[node32Index + 2] = minz;\n        float32Array[node32Index + 3] = maxx;\n        float32Array[node32Index + 4] = maxy;\n        float32Array[node32Index + 5] = maxz;\n        return true;\n      } else {\n        return false;\n      }\n    } else {\n      const left = node32Index + 8;\n      const right = uint32Array[node32Index + 6];\n      const offsetLeft = left + byteOffset2;\n      const offsetRight = right + byteOffset2;\n      let forceChildren = force;\n      let includesLeft = false;\n      let includesRight = false;\n      if (nodeIndices) {\n        if (!forceChildren) {\n          includesLeft = nodeIndices.has(offsetLeft);\n          includesRight = nodeIndices.has(offsetRight);\n          forceChildren = !includesLeft && !includesRight;\n        }\n      } else {\n        includesLeft = true;\n        includesRight = true;\n      }\n      const traverseLeft = forceChildren || includesLeft;\n      const traverseRight = forceChildren || includesRight;\n      let leftChange = false;\n      if (traverseLeft) {\n        leftChange = _traverse2(left, byteOffset2, forceChildren);\n      }\n      let rightChange = false;\n      if (traverseRight) {\n        rightChange = _traverse2(right, byteOffset2, forceChildren);\n      }\n      const didChange = leftChange || rightChange;\n      if (didChange) {\n        for (let i = 0; i < 3; i++) {\n          const lefti = left + i;\n          const righti = right + i;\n          const minLeftValue = float32Array[lefti];\n          const maxLeftValue = float32Array[lefti + 3];\n          const minRightValue = float32Array[righti];\n          const maxRightValue = float32Array[righti + 3];\n          float32Array[node32Index + i] = minLeftValue < minRightValue ? minLeftValue : minRightValue;\n          float32Array[node32Index + i + 3] = maxLeftValue > maxRightValue ? maxLeftValue : maxRightValue;\n        }\n      }\n      return didChange;\n    }\n  }\n}\nconst _boundingBox = /* @__PURE__ */ new Box3();\nfunction intersectRay(nodeIndex32, array, ray2, target) {\n  arrayToBox(nodeIndex32, array, _boundingBox);\n  return ray2.intersectBox(_boundingBox, target);\n}\nfunction intersectTris_indirect(bvh, side, ray2, offset, count, intersections) {\n  const { geometry, _indirectBuffer } = bvh;\n  for (let i = offset, end = offset + count; i < end; i++) {\n    let vi = _indirectBuffer ? _indirectBuffer[i] : i;\n    intersectTri(geometry, side, ray2, vi, intersections);\n  }\n}\nfunction intersectClosestTri_indirect(bvh, side, ray2, offset, count) {\n  const { geometry, _indirectBuffer } = bvh;\n  let dist = Infinity;\n  let res = null;\n  for (let i = offset, end = offset + count; i < end; i++) {\n    let intersection;\n    intersection = intersectTri(geometry, side, ray2, _indirectBuffer ? _indirectBuffer[i] : i);\n    if (intersection && intersection.distance < dist) {\n      res = intersection;\n      dist = intersection.distance;\n    }\n  }\n  return res;\n}\nfunction iterateOverTriangles_indirect(offset, count, bvh, intersectsTriangleFunc, contained, depth, triangle3) {\n  const { geometry } = bvh;\n  const { index } = geometry;\n  const pos = geometry.attributes.position;\n  for (let i = offset, l = count + offset; i < l; i++) {\n    let tri;\n    tri = bvh.resolveTriangleIndex(i);\n    setTriangle(triangle3, tri * 3, index, pos);\n    triangle3.needsUpdate = true;\n    if (intersectsTriangleFunc(triangle3, tri, contained, depth)) {\n      return true;\n    }\n  }\n  return false;\n}\nconst _boxIntersection$3 = /* @__PURE__ */ new Vector3();\nfunction raycast(bvh, root, side, ray2, intersects) {\n  BufferStack.setBuffer(bvh._roots[root]);\n  _raycast$1(0, bvh, side, ray2, intersects);\n  BufferStack.clearBuffer();\n}\nfunction _raycast$1(nodeIndex32, bvh, side, ray2, intersects) {\n  const { float32Array, uint16Array, uint32Array } = BufferStack;\n  const nodeIndex16 = nodeIndex32 * 2;\n  const isLeaf = IS_LEAF(nodeIndex16, uint16Array);\n  if (isLeaf) {\n    const offset = OFFSET(nodeIndex32, uint32Array);\n    const count = COUNT(nodeIndex16, uint16Array);\n    intersectTris(bvh, side, ray2, offset, count, intersects);\n  } else {\n    const leftIndex = LEFT_NODE(nodeIndex32);\n    if (intersectRay(leftIndex, float32Array, ray2, _boxIntersection$3)) {\n      _raycast$1(leftIndex, bvh, side, ray2, intersects);\n    }\n    const rightIndex = RIGHT_NODE(nodeIndex32, uint32Array);\n    if (intersectRay(rightIndex, float32Array, ray2, _boxIntersection$3)) {\n      _raycast$1(rightIndex, bvh, side, ray2, intersects);\n    }\n  }\n}\nconst _boxIntersection$2 = /* @__PURE__ */ new Vector3();\nconst _xyzFields$1 = [\"x\", \"y\", \"z\"];\nfunction raycastFirst(bvh, root, side, ray2) {\n  BufferStack.setBuffer(bvh._roots[root]);\n  const result = _raycastFirst$1(0, bvh, side, ray2);\n  BufferStack.clearBuffer();\n  return result;\n}\nfunction _raycastFirst$1(nodeIndex32, bvh, side, ray2) {\n  const { float32Array, uint16Array, uint32Array } = BufferStack;\n  let nodeIndex16 = nodeIndex32 * 2;\n  const isLeaf = IS_LEAF(nodeIndex16, uint16Array);\n  if (isLeaf) {\n    const offset = OFFSET(nodeIndex32, uint32Array);\n    const count = COUNT(nodeIndex16, uint16Array);\n    return intersectClosestTri(bvh, side, ray2, offset, count);\n  } else {\n    const splitAxis = SPLIT_AXIS(nodeIndex32, uint32Array);\n    const xyzAxis = _xyzFields$1[splitAxis];\n    const rayDir = ray2.direction[xyzAxis];\n    const leftToRight = rayDir >= 0;\n    let c1, c2;\n    if (leftToRight) {\n      c1 = LEFT_NODE(nodeIndex32);\n      c2 = RIGHT_NODE(nodeIndex32, uint32Array);\n    } else {\n      c1 = RIGHT_NODE(nodeIndex32, uint32Array);\n      c2 = LEFT_NODE(nodeIndex32);\n    }\n    const c1Intersection = intersectRay(c1, float32Array, ray2, _boxIntersection$2);\n    const c1Result = c1Intersection ? _raycastFirst$1(c1, bvh, side, ray2) : null;\n    if (c1Result) {\n      const point = c1Result.point[xyzAxis];\n      const isOutside = leftToRight ? point <= float32Array[c2 + splitAxis] : (\n        // min bounding data\n        point >= float32Array[c2 + splitAxis + 3]\n      );\n      if (isOutside) {\n        return c1Result;\n      }\n    }\n    const c2Intersection = intersectRay(c2, float32Array, ray2, _boxIntersection$2);\n    const c2Result = c2Intersection ? _raycastFirst$1(c2, bvh, side, ray2) : null;\n    if (c1Result && c2Result) {\n      return c1Result.distance <= c2Result.distance ? c1Result : c2Result;\n    } else {\n      return c1Result || c2Result || null;\n    }\n  }\n}\nconst boundingBox$1 = /* @__PURE__ */ new Box3();\nconst triangle$1 = /* @__PURE__ */ new ExtendedTriangle();\nconst triangle2$1 = /* @__PURE__ */ new ExtendedTriangle();\nconst invertedMat$1 = /* @__PURE__ */ new Matrix4();\nconst obb$4 = /* @__PURE__ */ new OrientedBox();\nconst obb2$3 = /* @__PURE__ */ new OrientedBox();\nfunction intersectsGeometry(bvh, root, otherGeometry, geometryToBvh) {\n  BufferStack.setBuffer(bvh._roots[root]);\n  const result = _intersectsGeometry$1(0, bvh, otherGeometry, geometryToBvh);\n  BufferStack.clearBuffer();\n  return result;\n}\nfunction _intersectsGeometry$1(nodeIndex32, bvh, otherGeometry, geometryToBvh, cachedObb = null) {\n  const { float32Array, uint16Array, uint32Array } = BufferStack;\n  let nodeIndex16 = nodeIndex32 * 2;\n  if (cachedObb === null) {\n    if (!otherGeometry.boundingBox) {\n      otherGeometry.computeBoundingBox();\n    }\n    obb$4.set(otherGeometry.boundingBox.min, otherGeometry.boundingBox.max, geometryToBvh);\n    cachedObb = obb$4;\n  }\n  const isLeaf = IS_LEAF(nodeIndex16, uint16Array);\n  if (isLeaf) {\n    const thisGeometry = bvh.geometry;\n    const thisIndex = thisGeometry.index;\n    const thisPos = thisGeometry.attributes.position;\n    const index = otherGeometry.index;\n    const pos = otherGeometry.attributes.position;\n    const offset = OFFSET(nodeIndex32, uint32Array);\n    const count = COUNT(nodeIndex16, uint16Array);\n    invertedMat$1.copy(geometryToBvh).invert();\n    if (otherGeometry.boundsTree) {\n      arrayToBox(BOUNDING_DATA_INDEX(nodeIndex32), float32Array, obb2$3);\n      obb2$3.matrix.copy(invertedMat$1);\n      obb2$3.needsUpdate = true;\n      const res = otherGeometry.boundsTree.shapecast({\n        intersectsBounds: (box) => obb2$3.intersectsBox(box),\n        intersectsTriangle: (tri) => {\n          tri.a.applyMatrix4(geometryToBvh);\n          tri.b.applyMatrix4(geometryToBvh);\n          tri.c.applyMatrix4(geometryToBvh);\n          tri.needsUpdate = true;\n          for (let i = offset * 3, l = (count + offset) * 3; i < l; i += 3) {\n            setTriangle(triangle2$1, i, thisIndex, thisPos);\n            triangle2$1.needsUpdate = true;\n            if (tri.intersectsTriangle(triangle2$1)) {\n              return true;\n            }\n          }\n          return false;\n        }\n      });\n      return res;\n    } else {\n      for (let i = offset * 3, l = (count + offset) * 3; i < l; i += 3) {\n        setTriangle(triangle$1, i, thisIndex, thisPos);\n        triangle$1.a.applyMatrix4(invertedMat$1);\n        triangle$1.b.applyMatrix4(invertedMat$1);\n        triangle$1.c.applyMatrix4(invertedMat$1);\n        triangle$1.needsUpdate = true;\n        for (let i2 = 0, l2 = index.count; i2 < l2; i2 += 3) {\n          setTriangle(triangle2$1, i2, index, pos);\n          triangle2$1.needsUpdate = true;\n          if (triangle$1.intersectsTriangle(triangle2$1)) {\n            return true;\n          }\n        }\n      }\n    }\n  } else {\n    const left = nodeIndex32 + 8;\n    const right = uint32Array[nodeIndex32 + 6];\n    arrayToBox(BOUNDING_DATA_INDEX(left), float32Array, boundingBox$1);\n    const leftIntersection = cachedObb.intersectsBox(boundingBox$1) && _intersectsGeometry$1(left, bvh, otherGeometry, geometryToBvh, cachedObb);\n    if (leftIntersection)\n      return true;\n    arrayToBox(BOUNDING_DATA_INDEX(right), float32Array, boundingBox$1);\n    const rightIntersection = cachedObb.intersectsBox(boundingBox$1) && _intersectsGeometry$1(right, bvh, otherGeometry, geometryToBvh, cachedObb);\n    if (rightIntersection)\n      return true;\n    return false;\n  }\n}\nconst tempMatrix$1 = /* @__PURE__ */ new Matrix4();\nconst obb$3 = /* @__PURE__ */ new OrientedBox();\nconst obb2$2 = /* @__PURE__ */ new OrientedBox();\nconst temp1$1 = /* @__PURE__ */ new Vector3();\nconst temp2$1 = /* @__PURE__ */ new Vector3();\nconst temp3$1 = /* @__PURE__ */ new Vector3();\nconst temp4$1 = /* @__PURE__ */ new Vector3();\nfunction closestPointToGeometry(bvh, otherGeometry, geometryToBvh, target1 = {}, target2 = {}, minThreshold = 0, maxThreshold = Infinity) {\n  if (!otherGeometry.boundingBox) {\n    otherGeometry.computeBoundingBox();\n  }\n  obb$3.set(otherGeometry.boundingBox.min, otherGeometry.boundingBox.max, geometryToBvh);\n  obb$3.needsUpdate = true;\n  const geometry = bvh.geometry;\n  const pos = geometry.attributes.position;\n  const index = geometry.index;\n  const otherPos = otherGeometry.attributes.position;\n  const otherIndex = otherGeometry.index;\n  const triangle3 = ExtendedTrianglePool.getPrimitive();\n  const triangle22 = ExtendedTrianglePool.getPrimitive();\n  let tempTarget1 = temp1$1;\n  let tempTargetDest1 = temp2$1;\n  let tempTarget2 = null;\n  let tempTargetDest2 = null;\n  if (target2) {\n    tempTarget2 = temp3$1;\n    tempTargetDest2 = temp4$1;\n  }\n  let closestDistance = Infinity;\n  let closestDistanceTriIndex = null;\n  let closestDistanceOtherTriIndex = null;\n  tempMatrix$1.copy(geometryToBvh).invert();\n  obb2$2.matrix.copy(tempMatrix$1);\n  bvh.shapecast(\n    {\n      boundsTraverseOrder: (box) => {\n        return obb$3.distanceToBox(box);\n      },\n      intersectsBounds: (box, isLeaf, score) => {\n        if (score < closestDistance && score < maxThreshold) {\n          if (isLeaf) {\n            obb2$2.min.copy(box.min);\n            obb2$2.max.copy(box.max);\n            obb2$2.needsUpdate = true;\n          }\n          return true;\n        }\n        return false;\n      },\n      intersectsRange: (offset, count) => {\n        if (otherGeometry.boundsTree) {\n          const otherBvh = otherGeometry.boundsTree;\n          return otherBvh.shapecast({\n            boundsTraverseOrder: (box) => {\n              return obb2$2.distanceToBox(box);\n            },\n            intersectsBounds: (box, isLeaf, score) => {\n              return score < closestDistance && score < maxThreshold;\n            },\n            intersectsRange: (otherOffset, otherCount) => {\n              for (let i2 = otherOffset, l2 = otherOffset + otherCount; i2 < l2; i2++) {\n                setTriangle(triangle22, 3 * i2, otherIndex, otherPos);\n                triangle22.a.applyMatrix4(geometryToBvh);\n                triangle22.b.applyMatrix4(geometryToBvh);\n                triangle22.c.applyMatrix4(geometryToBvh);\n                triangle22.needsUpdate = true;\n                for (let i = offset, l = offset + count; i < l; i++) {\n                  setTriangle(triangle3, 3 * i, index, pos);\n                  triangle3.needsUpdate = true;\n                  const dist = triangle3.distanceToTriangle(triangle22, tempTarget1, tempTarget2);\n                  if (dist < closestDistance) {\n                    tempTargetDest1.copy(tempTarget1);\n                    if (tempTargetDest2) {\n                      tempTargetDest2.copy(tempTarget2);\n                    }\n                    closestDistance = dist;\n                    closestDistanceTriIndex = i;\n                    closestDistanceOtherTriIndex = i2;\n                  }\n                  if (dist < minThreshold) {\n                    return true;\n                  }\n                }\n              }\n            }\n          });\n        } else {\n          const triCount = getTriCount(otherGeometry);\n          for (let i2 = 0, l2 = triCount; i2 < l2; i2++) {\n            setTriangle(triangle22, 3 * i2, otherIndex, otherPos);\n            triangle22.a.applyMatrix4(geometryToBvh);\n            triangle22.b.applyMatrix4(geometryToBvh);\n            triangle22.c.applyMatrix4(geometryToBvh);\n            triangle22.needsUpdate = true;\n            for (let i = offset, l = offset + count; i < l; i++) {\n              setTriangle(triangle3, 3 * i, index, pos);\n              triangle3.needsUpdate = true;\n              const dist = triangle3.distanceToTriangle(triangle22, tempTarget1, tempTarget2);\n              if (dist < closestDistance) {\n                tempTargetDest1.copy(tempTarget1);\n                if (tempTargetDest2) {\n                  tempTargetDest2.copy(tempTarget2);\n                }\n                closestDistance = dist;\n                closestDistanceTriIndex = i;\n                closestDistanceOtherTriIndex = i2;\n              }\n              if (dist < minThreshold) {\n                return true;\n              }\n            }\n          }\n        }\n      }\n    }\n  );\n  ExtendedTrianglePool.releasePrimitive(triangle3);\n  ExtendedTrianglePool.releasePrimitive(triangle22);\n  if (closestDistance === Infinity) {\n    return null;\n  }\n  if (!target1.point) {\n    target1.point = tempTargetDest1.clone();\n  } else {\n    target1.point.copy(tempTargetDest1);\n  }\n  target1.distance = closestDistance, target1.faceIndex = closestDistanceTriIndex;\n  if (target2) {\n    if (!target2.point)\n      target2.point = tempTargetDest2.clone();\n    else\n      target2.point.copy(tempTargetDest2);\n    target2.point.applyMatrix4(tempMatrix$1);\n    tempTargetDest1.applyMatrix4(tempMatrix$1);\n    target2.distance = tempTargetDest1.sub(target2.point).length();\n    target2.faceIndex = closestDistanceOtherTriIndex;\n  }\n  return target1;\n}\nfunction refit_indirect(bvh, nodeIndices = null) {\n  if (nodeIndices && Array.isArray(nodeIndices)) {\n    nodeIndices = new Set(nodeIndices);\n  }\n  const geometry = bvh.geometry;\n  const indexArr = geometry.index ? geometry.index.array : null;\n  const posAttr = geometry.attributes.position;\n  let buffer, uint32Array, uint16Array, float32Array;\n  let byteOffset = 0;\n  const roots = bvh._roots;\n  for (let i = 0, l = roots.length; i < l; i++) {\n    buffer = roots[i];\n    uint32Array = new Uint32Array(buffer);\n    uint16Array = new Uint16Array(buffer);\n    float32Array = new Float32Array(buffer);\n    _traverse2(0, byteOffset);\n    byteOffset += buffer.byteLength;\n  }\n  function _traverse2(node32Index, byteOffset2, force = false) {\n    const node16Index = node32Index * 2;\n    const isLeaf = uint16Array[node16Index + 15] === IS_LEAFNODE_FLAG;\n    if (isLeaf) {\n      const offset = uint32Array[node32Index + 6];\n      const count = uint16Array[node16Index + 14];\n      let minx = Infinity;\n      let miny = Infinity;\n      let minz = Infinity;\n      let maxx = -Infinity;\n      let maxy = -Infinity;\n      let maxz = -Infinity;\n      for (let i = offset, l = offset + count; i < l; i++) {\n        const t = 3 * bvh.resolveTriangleIndex(i);\n        for (let j = 0; j < 3; j++) {\n          let index = t + j;\n          index = indexArr ? indexArr[index] : index;\n          const x = posAttr.getX(index);\n          const y = posAttr.getY(index);\n          const z = posAttr.getZ(index);\n          if (x < minx)\n            minx = x;\n          if (x > maxx)\n            maxx = x;\n          if (y < miny)\n            miny = y;\n          if (y > maxy)\n            maxy = y;\n          if (z < minz)\n            minz = z;\n          if (z > maxz)\n            maxz = z;\n        }\n      }\n      if (float32Array[node32Index + 0] !== minx || float32Array[node32Index + 1] !== miny || float32Array[node32Index + 2] !== minz || float32Array[node32Index + 3] !== maxx || float32Array[node32Index + 4] !== maxy || float32Array[node32Index + 5] !== maxz) {\n        float32Array[node32Index + 0] = minx;\n        float32Array[node32Index + 1] = miny;\n        float32Array[node32Index + 2] = minz;\n        float32Array[node32Index + 3] = maxx;\n        float32Array[node32Index + 4] = maxy;\n        float32Array[node32Index + 5] = maxz;\n        return true;\n      } else {\n        return false;\n      }\n    } else {\n      const left = node32Index + 8;\n      const right = uint32Array[node32Index + 6];\n      const offsetLeft = left + byteOffset2;\n      const offsetRight = right + byteOffset2;\n      let forceChildren = force;\n      let includesLeft = false;\n      let includesRight = false;\n      if (nodeIndices) {\n        if (!forceChildren) {\n          includesLeft = nodeIndices.has(offsetLeft);\n          includesRight = nodeIndices.has(offsetRight);\n          forceChildren = !includesLeft && !includesRight;\n        }\n      } else {\n        includesLeft = true;\n        includesRight = true;\n      }\n      const traverseLeft = forceChildren || includesLeft;\n      const traverseRight = forceChildren || includesRight;\n      let leftChange = false;\n      if (traverseLeft) {\n        leftChange = _traverse2(left, byteOffset2, forceChildren);\n      }\n      let rightChange = false;\n      if (traverseRight) {\n        rightChange = _traverse2(right, byteOffset2, forceChildren);\n      }\n      const didChange = leftChange || rightChange;\n      if (didChange) {\n        for (let i = 0; i < 3; i++) {\n          const lefti = left + i;\n          const righti = right + i;\n          const minLeftValue = float32Array[lefti];\n          const maxLeftValue = float32Array[lefti + 3];\n          const minRightValue = float32Array[righti];\n          const maxRightValue = float32Array[righti + 3];\n          float32Array[node32Index + i] = minLeftValue < minRightValue ? minLeftValue : minRightValue;\n          float32Array[node32Index + i + 3] = maxLeftValue > maxRightValue ? maxLeftValue : maxRightValue;\n        }\n      }\n      return didChange;\n    }\n  }\n}\nconst _boxIntersection$1 = /* @__PURE__ */ new Vector3();\nfunction raycast_indirect(bvh, root, side, ray2, intersects) {\n  BufferStack.setBuffer(bvh._roots[root]);\n  _raycast(0, bvh, side, ray2, intersects);\n  BufferStack.clearBuffer();\n}\nfunction _raycast(nodeIndex32, bvh, side, ray2, intersects) {\n  const { float32Array, uint16Array, uint32Array } = BufferStack;\n  const nodeIndex16 = nodeIndex32 * 2;\n  const isLeaf = IS_LEAF(nodeIndex16, uint16Array);\n  if (isLeaf) {\n    const offset = OFFSET(nodeIndex32, uint32Array);\n    const count = COUNT(nodeIndex16, uint16Array);\n    intersectTris_indirect(bvh, side, ray2, offset, count, intersects);\n  } else {\n    const leftIndex = LEFT_NODE(nodeIndex32);\n    if (intersectRay(leftIndex, float32Array, ray2, _boxIntersection$1)) {\n      _raycast(leftIndex, bvh, side, ray2, intersects);\n    }\n    const rightIndex = RIGHT_NODE(nodeIndex32, uint32Array);\n    if (intersectRay(rightIndex, float32Array, ray2, _boxIntersection$1)) {\n      _raycast(rightIndex, bvh, side, ray2, intersects);\n    }\n  }\n}\nconst _boxIntersection = /* @__PURE__ */ new Vector3();\nconst _xyzFields = [\"x\", \"y\", \"z\"];\nfunction raycastFirst_indirect(bvh, root, side, ray2) {\n  BufferStack.setBuffer(bvh._roots[root]);\n  const result = _raycastFirst(0, bvh, side, ray2);\n  BufferStack.clearBuffer();\n  return result;\n}\nfunction _raycastFirst(nodeIndex32, bvh, side, ray2) {\n  const { float32Array, uint16Array, uint32Array } = BufferStack;\n  let nodeIndex16 = nodeIndex32 * 2;\n  const isLeaf = IS_LEAF(nodeIndex16, uint16Array);\n  if (isLeaf) {\n    const offset = OFFSET(nodeIndex32, uint32Array);\n    const count = COUNT(nodeIndex16, uint16Array);\n    return intersectClosestTri_indirect(bvh, side, ray2, offset, count);\n  } else {\n    const splitAxis = SPLIT_AXIS(nodeIndex32, uint32Array);\n    const xyzAxis = _xyzFields[splitAxis];\n    const rayDir = ray2.direction[xyzAxis];\n    const leftToRight = rayDir >= 0;\n    let c1, c2;\n    if (leftToRight) {\n      c1 = LEFT_NODE(nodeIndex32);\n      c2 = RIGHT_NODE(nodeIndex32, uint32Array);\n    } else {\n      c1 = RIGHT_NODE(nodeIndex32, uint32Array);\n      c2 = LEFT_NODE(nodeIndex32);\n    }\n    const c1Intersection = intersectRay(c1, float32Array, ray2, _boxIntersection);\n    const c1Result = c1Intersection ? _raycastFirst(c1, bvh, side, ray2) : null;\n    if (c1Result) {\n      const point = c1Result.point[xyzAxis];\n      const isOutside = leftToRight ? point <= float32Array[c2 + splitAxis] : (\n        // min bounding data\n        point >= float32Array[c2 + splitAxis + 3]\n      );\n      if (isOutside) {\n        return c1Result;\n      }\n    }\n    const c2Intersection = intersectRay(c2, float32Array, ray2, _boxIntersection);\n    const c2Result = c2Intersection ? _raycastFirst(c2, bvh, side, ray2) : null;\n    if (c1Result && c2Result) {\n      return c1Result.distance <= c2Result.distance ? c1Result : c2Result;\n    } else {\n      return c1Result || c2Result || null;\n    }\n  }\n}\nconst boundingBox = /* @__PURE__ */ new Box3();\nconst triangle = /* @__PURE__ */ new ExtendedTriangle();\nconst triangle2 = /* @__PURE__ */ new ExtendedTriangle();\nconst invertedMat = /* @__PURE__ */ new Matrix4();\nconst obb$2 = /* @__PURE__ */ new OrientedBox();\nconst obb2$1 = /* @__PURE__ */ new OrientedBox();\nfunction intersectsGeometry_indirect(bvh, root, otherGeometry, geometryToBvh) {\n  BufferStack.setBuffer(bvh._roots[root]);\n  const result = _intersectsGeometry(0, bvh, otherGeometry, geometryToBvh);\n  BufferStack.clearBuffer();\n  return result;\n}\nfunction _intersectsGeometry(nodeIndex32, bvh, otherGeometry, geometryToBvh, cachedObb = null) {\n  const { float32Array, uint16Array, uint32Array } = BufferStack;\n  let nodeIndex16 = nodeIndex32 * 2;\n  if (cachedObb === null) {\n    if (!otherGeometry.boundingBox) {\n      otherGeometry.computeBoundingBox();\n    }\n    obb$2.set(otherGeometry.boundingBox.min, otherGeometry.boundingBox.max, geometryToBvh);\n    cachedObb = obb$2;\n  }\n  const isLeaf = IS_LEAF(nodeIndex16, uint16Array);\n  if (isLeaf) {\n    const thisGeometry = bvh.geometry;\n    const thisIndex = thisGeometry.index;\n    const thisPos = thisGeometry.attributes.position;\n    const index = otherGeometry.index;\n    const pos = otherGeometry.attributes.position;\n    const offset = OFFSET(nodeIndex32, uint32Array);\n    const count = COUNT(nodeIndex16, uint16Array);\n    invertedMat.copy(geometryToBvh).invert();\n    if (otherGeometry.boundsTree) {\n      arrayToBox(BOUNDING_DATA_INDEX(nodeIndex32), float32Array, obb2$1);\n      obb2$1.matrix.copy(invertedMat);\n      obb2$1.needsUpdate = true;\n      const res = otherGeometry.boundsTree.shapecast({\n        intersectsBounds: (box) => obb2$1.intersectsBox(box),\n        intersectsTriangle: (tri) => {\n          tri.a.applyMatrix4(geometryToBvh);\n          tri.b.applyMatrix4(geometryToBvh);\n          tri.c.applyMatrix4(geometryToBvh);\n          tri.needsUpdate = true;\n          for (let i = offset, l = count + offset; i < l; i++) {\n            setTriangle(triangle2, 3 * bvh.resolveTriangleIndex(i), thisIndex, thisPos);\n            triangle2.needsUpdate = true;\n            if (tri.intersectsTriangle(triangle2)) {\n              return true;\n            }\n          }\n          return false;\n        }\n      });\n      return res;\n    } else {\n      for (let i = offset, l = count + offset; i < l; i++) {\n        const ti = bvh.resolveTriangleIndex(i);\n        setTriangle(triangle, 3 * ti, thisIndex, thisPos);\n        triangle.a.applyMatrix4(invertedMat);\n        triangle.b.applyMatrix4(invertedMat);\n        triangle.c.applyMatrix4(invertedMat);\n        triangle.needsUpdate = true;\n        for (let i2 = 0, l2 = index.count; i2 < l2; i2 += 3) {\n          setTriangle(triangle2, i2, index, pos);\n          triangle2.needsUpdate = true;\n          if (triangle.intersectsTriangle(triangle2)) {\n            return true;\n          }\n        }\n      }\n    }\n  } else {\n    const left = nodeIndex32 + 8;\n    const right = uint32Array[nodeIndex32 + 6];\n    arrayToBox(BOUNDING_DATA_INDEX(left), float32Array, boundingBox);\n    const leftIntersection = cachedObb.intersectsBox(boundingBox) && _intersectsGeometry(left, bvh, otherGeometry, geometryToBvh, cachedObb);\n    if (leftIntersection)\n      return true;\n    arrayToBox(BOUNDING_DATA_INDEX(right), float32Array, boundingBox);\n    const rightIntersection = cachedObb.intersectsBox(boundingBox) && _intersectsGeometry(right, bvh, otherGeometry, geometryToBvh, cachedObb);\n    if (rightIntersection)\n      return true;\n    return false;\n  }\n}\nconst tempMatrix = /* @__PURE__ */ new Matrix4();\nconst obb$1 = /* @__PURE__ */ new OrientedBox();\nconst obb2 = /* @__PURE__ */ new OrientedBox();\nconst temp1 = /* @__PURE__ */ new Vector3();\nconst temp2 = /* @__PURE__ */ new Vector3();\nconst temp3 = /* @__PURE__ */ new Vector3();\nconst temp4 = /* @__PURE__ */ new Vector3();\nfunction closestPointToGeometry_indirect(bvh, otherGeometry, geometryToBvh, target1 = {}, target2 = {}, minThreshold = 0, maxThreshold = Infinity) {\n  if (!otherGeometry.boundingBox) {\n    otherGeometry.computeBoundingBox();\n  }\n  obb$1.set(otherGeometry.boundingBox.min, otherGeometry.boundingBox.max, geometryToBvh);\n  obb$1.needsUpdate = true;\n  const geometry = bvh.geometry;\n  const pos = geometry.attributes.position;\n  const index = geometry.index;\n  const otherPos = otherGeometry.attributes.position;\n  const otherIndex = otherGeometry.index;\n  const triangle3 = ExtendedTrianglePool.getPrimitive();\n  const triangle22 = ExtendedTrianglePool.getPrimitive();\n  let tempTarget1 = temp1;\n  let tempTargetDest1 = temp2;\n  let tempTarget2 = null;\n  let tempTargetDest2 = null;\n  if (target2) {\n    tempTarget2 = temp3;\n    tempTargetDest2 = temp4;\n  }\n  let closestDistance = Infinity;\n  let closestDistanceTriIndex = null;\n  let closestDistanceOtherTriIndex = null;\n  tempMatrix.copy(geometryToBvh).invert();\n  obb2.matrix.copy(tempMatrix);\n  bvh.shapecast(\n    {\n      boundsTraverseOrder: (box) => {\n        return obb$1.distanceToBox(box);\n      },\n      intersectsBounds: (box, isLeaf, score) => {\n        if (score < closestDistance && score < maxThreshold) {\n          if (isLeaf) {\n            obb2.min.copy(box.min);\n            obb2.max.copy(box.max);\n            obb2.needsUpdate = true;\n          }\n          return true;\n        }\n        return false;\n      },\n      intersectsRange: (offset, count) => {\n        if (otherGeometry.boundsTree) {\n          const otherBvh = otherGeometry.boundsTree;\n          return otherBvh.shapecast({\n            boundsTraverseOrder: (box) => {\n              return obb2.distanceToBox(box);\n            },\n            intersectsBounds: (box, isLeaf, score) => {\n              return score < closestDistance && score < maxThreshold;\n            },\n            intersectsRange: (otherOffset, otherCount) => {\n              for (let i2 = otherOffset, l2 = otherOffset + otherCount; i2 < l2; i2++) {\n                const ti2 = otherBvh.resolveTriangleIndex(i2);\n                setTriangle(triangle22, 3 * ti2, otherIndex, otherPos);\n                triangle22.a.applyMatrix4(geometryToBvh);\n                triangle22.b.applyMatrix4(geometryToBvh);\n                triangle22.c.applyMatrix4(geometryToBvh);\n                triangle22.needsUpdate = true;\n                for (let i = offset, l = offset + count; i < l; i++) {\n                  const ti = bvh.resolveTriangleIndex(i);\n                  setTriangle(triangle3, 3 * ti, index, pos);\n                  triangle3.needsUpdate = true;\n                  const dist = triangle3.distanceToTriangle(triangle22, tempTarget1, tempTarget2);\n                  if (dist < closestDistance) {\n                    tempTargetDest1.copy(tempTarget1);\n                    if (tempTargetDest2) {\n                      tempTargetDest2.copy(tempTarget2);\n                    }\n                    closestDistance = dist;\n                    closestDistanceTriIndex = i;\n                    closestDistanceOtherTriIndex = i2;\n                  }\n                  if (dist < minThreshold) {\n                    return true;\n                  }\n                }\n              }\n            }\n          });\n        } else {\n          const triCount = getTriCount(otherGeometry);\n          for (let i2 = 0, l2 = triCount; i2 < l2; i2++) {\n            setTriangle(triangle22, 3 * i2, otherIndex, otherPos);\n            triangle22.a.applyMatrix4(geometryToBvh);\n            triangle22.b.applyMatrix4(geometryToBvh);\n            triangle22.c.applyMatrix4(geometryToBvh);\n            triangle22.needsUpdate = true;\n            for (let i = offset, l = offset + count; i < l; i++) {\n              const ti = bvh.resolveTriangleIndex(i);\n              setTriangle(triangle3, 3 * ti, index, pos);\n              triangle3.needsUpdate = true;\n              const dist = triangle3.distanceToTriangle(triangle22, tempTarget1, tempTarget2);\n              if (dist < closestDistance) {\n                tempTargetDest1.copy(tempTarget1);\n                if (tempTargetDest2) {\n                  tempTargetDest2.copy(tempTarget2);\n                }\n                closestDistance = dist;\n                closestDistanceTriIndex = i;\n                closestDistanceOtherTriIndex = i2;\n              }\n              if (dist < minThreshold) {\n                return true;\n              }\n            }\n          }\n        }\n      }\n    }\n  );\n  ExtendedTrianglePool.releasePrimitive(triangle3);\n  ExtendedTrianglePool.releasePrimitive(triangle22);\n  if (closestDistance === Infinity) {\n    return null;\n  }\n  if (!target1.point) {\n    target1.point = tempTargetDest1.clone();\n  } else {\n    target1.point.copy(tempTargetDest1);\n  }\n  target1.distance = closestDistance, target1.faceIndex = closestDistanceTriIndex;\n  if (target2) {\n    if (!target2.point)\n      target2.point = tempTargetDest2.clone();\n    else\n      target2.point.copy(tempTargetDest2);\n    target2.point.applyMatrix4(tempMatrix);\n    tempTargetDest1.applyMatrix4(tempMatrix);\n    target2.distance = tempTargetDest1.sub(target2.point).length();\n    target2.faceIndex = closestDistanceOtherTriIndex;\n  }\n  return target1;\n}\nfunction isSharedArrayBufferSupported() {\n  return typeof SharedArrayBuffer !== \"undefined\";\n}\nconst _bufferStack1 = new BufferStack.constructor();\nconst _bufferStack2 = new BufferStack.constructor();\nconst _boxPool = new PrimitivePool(() => new Box3());\nconst _leftBox1 = new Box3();\nconst _rightBox1 = new Box3();\nconst _leftBox2 = new Box3();\nconst _rightBox2 = new Box3();\nlet _active = false;\nfunction bvhcast(bvh, otherBvh, matrixToLocal, intersectsRanges) {\n  if (_active) {\n    throw new Error(\"MeshBVH: Recursive calls to bvhcast not supported.\");\n  }\n  _active = true;\n  const roots = bvh._roots;\n  const otherRoots = otherBvh._roots;\n  let result;\n  let offset1 = 0;\n  let offset2 = 0;\n  const invMat = new Matrix4().copy(matrixToLocal).invert();\n  for (let i = 0, il = roots.length; i < il; i++) {\n    _bufferStack1.setBuffer(roots[i]);\n    offset2 = 0;\n    const localBox = _boxPool.getPrimitive();\n    arrayToBox(BOUNDING_DATA_INDEX(0), _bufferStack1.float32Array, localBox);\n    localBox.applyMatrix4(invMat);\n    for (let j = 0, jl = otherRoots.length; j < jl; j++) {\n      _bufferStack2.setBuffer(otherRoots[i]);\n      result = _traverse(\n        0,\n        0,\n        matrixToLocal,\n        invMat,\n        intersectsRanges,\n        offset1,\n        offset2,\n        0,\n        0,\n        localBox\n      );\n      _bufferStack2.clearBuffer();\n      offset2 += otherRoots[j].length;\n      if (result) {\n        break;\n      }\n    }\n    _boxPool.releasePrimitive(localBox);\n    _bufferStack1.clearBuffer();\n    offset1 += roots[i].length;\n    if (result) {\n      break;\n    }\n  }\n  _active = false;\n  return result;\n}\nfunction _traverse(node1Index32, node2Index32, matrix2to1, matrix1to2, intersectsRangesFunc, node1IndexByteOffset = 0, node2IndexByteOffset = 0, depth1 = 0, depth2 = 0, currBox = null, reversed = false) {\n  let bufferStack1, bufferStack2;\n  if (reversed) {\n    bufferStack1 = _bufferStack2;\n    bufferStack2 = _bufferStack1;\n  } else {\n    bufferStack1 = _bufferStack1;\n    bufferStack2 = _bufferStack2;\n  }\n  const float32Array1 = bufferStack1.float32Array, uint32Array1 = bufferStack1.uint32Array, uint16Array1 = bufferStack1.uint16Array, float32Array2 = bufferStack2.float32Array, uint32Array2 = bufferStack2.uint32Array, uint16Array2 = bufferStack2.uint16Array;\n  const node1Index16 = node1Index32 * 2;\n  const node2Index16 = node2Index32 * 2;\n  const isLeaf1 = IS_LEAF(node1Index16, uint16Array1);\n  const isLeaf2 = IS_LEAF(node2Index16, uint16Array2);\n  let result = false;\n  if (isLeaf2 && isLeaf1) {\n    if (reversed) {\n      result = intersectsRangesFunc(\n        OFFSET(node2Index32, uint32Array2),\n        COUNT(node2Index32 * 2, uint16Array2),\n        OFFSET(node1Index32, uint32Array1),\n        COUNT(node1Index32 * 2, uint16Array1),\n        depth2,\n        node2IndexByteOffset + node2Index32,\n        depth1,\n        node1IndexByteOffset + node1Index32\n      );\n    } else {\n      result = intersectsRangesFunc(\n        OFFSET(node1Index32, uint32Array1),\n        COUNT(node1Index32 * 2, uint16Array1),\n        OFFSET(node2Index32, uint32Array2),\n        COUNT(node2Index32 * 2, uint16Array2),\n        depth1,\n        node1IndexByteOffset + node1Index32,\n        depth2,\n        node2IndexByteOffset + node2Index32\n      );\n    }\n  } else if (isLeaf2) {\n    const newBox = _boxPool.getPrimitive();\n    arrayToBox(BOUNDING_DATA_INDEX(node2Index32), float32Array2, newBox);\n    newBox.applyMatrix4(matrix2to1);\n    const cl1 = LEFT_NODE(node1Index32);\n    const cr1 = RIGHT_NODE(node1Index32, uint32Array1);\n    arrayToBox(BOUNDING_DATA_INDEX(cl1), float32Array1, _leftBox1);\n    arrayToBox(BOUNDING_DATA_INDEX(cr1), float32Array1, _rightBox1);\n    const intersectCl1 = newBox.intersectsBox(_leftBox1);\n    const intersectCr1 = newBox.intersectsBox(_rightBox1);\n    result = intersectCl1 && _traverse(\n      node2Index32,\n      cl1,\n      matrix1to2,\n      matrix2to1,\n      intersectsRangesFunc,\n      node2IndexByteOffset,\n      node1IndexByteOffset,\n      depth2,\n      depth1 + 1,\n      newBox,\n      !reversed\n    ) || intersectCr1 && _traverse(\n      node2Index32,\n      cr1,\n      matrix1to2,\n      matrix2to1,\n      intersectsRangesFunc,\n      node2IndexByteOffset,\n      node1IndexByteOffset,\n      depth2,\n      depth1 + 1,\n      newBox,\n      !reversed\n    );\n    _boxPool.releasePrimitive(newBox);\n  } else {\n    const cl2 = LEFT_NODE(node2Index32);\n    const cr2 = RIGHT_NODE(node2Index32, uint32Array2);\n    arrayToBox(BOUNDING_DATA_INDEX(cl2), float32Array2, _leftBox2);\n    arrayToBox(BOUNDING_DATA_INDEX(cr2), float32Array2, _rightBox2);\n    const leftIntersects = currBox.intersectsBox(_leftBox2);\n    const rightIntersects = currBox.intersectsBox(_rightBox2);\n    if (leftIntersects && rightIntersects) {\n      result = _traverse(\n        node1Index32,\n        cl2,\n        matrix2to1,\n        matrix1to2,\n        intersectsRangesFunc,\n        node1IndexByteOffset,\n        node2IndexByteOffset,\n        depth1,\n        depth2 + 1,\n        currBox,\n        reversed\n      ) || _traverse(\n        node1Index32,\n        cr2,\n        matrix2to1,\n        matrix1to2,\n        intersectsRangesFunc,\n        node1IndexByteOffset,\n        node2IndexByteOffset,\n        depth1,\n        depth2 + 1,\n        currBox,\n        reversed\n      );\n    } else if (leftIntersects) {\n      if (isLeaf1) {\n        result = _traverse(\n          node1Index32,\n          cl2,\n          matrix2to1,\n          matrix1to2,\n          intersectsRangesFunc,\n          node1IndexByteOffset,\n          node2IndexByteOffset,\n          depth1,\n          depth2 + 1,\n          currBox,\n          reversed\n        );\n      } else {\n        const newBox = _boxPool.getPrimitive();\n        newBox.copy(_leftBox2).applyMatrix4(matrix2to1);\n        const cl1 = LEFT_NODE(node1Index32);\n        const cr1 = RIGHT_NODE(node1Index32, uint32Array1);\n        arrayToBox(BOUNDING_DATA_INDEX(cl1), float32Array1, _leftBox1);\n        arrayToBox(BOUNDING_DATA_INDEX(cr1), float32Array1, _rightBox1);\n        const intersectCl1 = newBox.intersectsBox(_leftBox1);\n        const intersectCr1 = newBox.intersectsBox(_rightBox1);\n        result = intersectCl1 && _traverse(\n          cl2,\n          cl1,\n          matrix1to2,\n          matrix2to1,\n          intersectsRangesFunc,\n          node2IndexByteOffset,\n          node1IndexByteOffset,\n          depth2,\n          depth1 + 1,\n          newBox,\n          !reversed\n        ) || intersectCr1 && _traverse(\n          cl2,\n          cr1,\n          matrix1to2,\n          matrix2to1,\n          intersectsRangesFunc,\n          node2IndexByteOffset,\n          node1IndexByteOffset,\n          depth2,\n          depth1 + 1,\n          newBox,\n          !reversed\n        );\n        _boxPool.releasePrimitive(newBox);\n      }\n    } else if (rightIntersects) {\n      if (isLeaf1) {\n        result = _traverse(\n          node1Index32,\n          cr2,\n          matrix2to1,\n          matrix1to2,\n          intersectsRangesFunc,\n          node1IndexByteOffset,\n          node2IndexByteOffset,\n          depth1,\n          depth2 + 1,\n          currBox,\n          reversed\n        );\n      } else {\n        const newBox = _boxPool.getPrimitive();\n        newBox.copy(_rightBox2).applyMatrix4(matrix2to1);\n        const cl1 = LEFT_NODE(node1Index32);\n        const cr1 = RIGHT_NODE(node1Index32, uint32Array1);\n        arrayToBox(BOUNDING_DATA_INDEX(cl1), float32Array1, _leftBox1);\n        arrayToBox(BOUNDING_DATA_INDEX(cr1), float32Array1, _rightBox1);\n        const intersectCl1 = newBox.intersectsBox(_leftBox1);\n        const intersectCr1 = newBox.intersectsBox(_rightBox1);\n        result = intersectCl1 && _traverse(\n          cr2,\n          cl1,\n          matrix1to2,\n          matrix2to1,\n          intersectsRangesFunc,\n          node2IndexByteOffset,\n          node1IndexByteOffset,\n          depth2,\n          depth1 + 1,\n          newBox,\n          !reversed\n        ) || intersectCr1 && _traverse(\n          cr2,\n          cr1,\n          matrix1to2,\n          matrix2to1,\n          intersectsRangesFunc,\n          node2IndexByteOffset,\n          node1IndexByteOffset,\n          depth2,\n          depth1 + 1,\n          newBox,\n          !reversed\n        );\n        _boxPool.releasePrimitive(newBox);\n      }\n    }\n  }\n  return result;\n}\nconst obb = /* @__PURE__ */ new OrientedBox();\nconst tempBox = /* @__PURE__ */ new Box3();\nclass MeshBVH {\n  static serialize(bvh, options = {}) {\n    options = {\n      cloneBuffers: true,\n      ...options\n    };\n    const geometry = bvh.geometry;\n    const rootData = bvh._roots;\n    const indirectBuffer = bvh._indirectBuffer;\n    const indexAttribute = geometry.getIndex();\n    let result;\n    if (options.cloneBuffers) {\n      result = {\n        roots: rootData.map((root) => root.slice()),\n        index: indexAttribute.array.slice(),\n        indirectBuffer: indirectBuffer ? indirectBuffer.slice() : null\n      };\n    } else {\n      result = {\n        roots: rootData,\n        index: indexAttribute.array,\n        indirectBuffer\n      };\n    }\n    return result;\n  }\n  static deserialize(data, geometry, options = {}) {\n    options = {\n      setIndex: true,\n      indirect: Boolean(data.indirectBuffer),\n      ...options\n    };\n    const { index, roots, indirectBuffer } = data;\n    const bvh = new MeshBVH(geometry, { ...options, [SKIP_GENERATION]: true });\n    bvh._roots = roots;\n    bvh._indirectBuffer = indirectBuffer || null;\n    if (options.setIndex) {\n      const indexAttribute = geometry.getIndex();\n      if (indexAttribute === null) {\n        const newIndex = new BufferAttribute(data.index, 1, false);\n        geometry.setIndex(newIndex);\n      } else if (indexAttribute.array !== index) {\n        indexAttribute.array.set(index);\n        indexAttribute.needsUpdate = true;\n      }\n    }\n    return bvh;\n  }\n  get indirect() {\n    return !!this._indirectBuffer;\n  }\n  constructor(geometry, options = {}) {\n    if (!geometry.isBufferGeometry) {\n      throw new Error(\"MeshBVH: Only BufferGeometries are supported.\");\n    } else if (geometry.index && geometry.index.isInterleavedBufferAttribute) {\n      throw new Error(\"MeshBVH: InterleavedBufferAttribute is not supported for the index attribute.\");\n    }\n    options = Object.assign({\n      strategy: CENTER,\n      maxDepth: 40,\n      maxLeafTris: 10,\n      verbose: true,\n      useSharedArrayBuffer: false,\n      setBoundingBox: true,\n      onProgress: null,\n      indirect: false,\n      // undocumented options\n      // Whether to skip generating the tree. Used for deserialization.\n      [SKIP_GENERATION]: false\n    }, options);\n    if (options.useSharedArrayBuffer && !isSharedArrayBufferSupported()) {\n      throw new Error(\"MeshBVH: SharedArrayBuffer is not available.\");\n    }\n    this.geometry = geometry;\n    this._roots = null;\n    this._indirectBuffer = null;\n    if (!options[SKIP_GENERATION]) {\n      buildPackedTree(this, options);\n      if (!geometry.boundingBox && options.setBoundingBox) {\n        geometry.boundingBox = this.getBoundingBox(new Box3());\n      }\n    }\n    const { _indirectBuffer } = this;\n    this.resolveTriangleIndex = options.indirect ? (i) => _indirectBuffer[i] : (i) => i;\n  }\n  refit(nodeIndices = null) {\n    const refitFunc = this.indirect ? refit_indirect : refit;\n    return refitFunc(this, nodeIndices);\n  }\n  traverse(callback, rootIndex = 0) {\n    const buffer = this._roots[rootIndex];\n    const uint32Array = new Uint32Array(buffer);\n    const uint16Array = new Uint16Array(buffer);\n    _traverse2(0);\n    function _traverse2(node32Index, depth = 0) {\n      const node16Index = node32Index * 2;\n      const isLeaf = uint16Array[node16Index + 15] === IS_LEAFNODE_FLAG;\n      if (isLeaf) {\n        const offset = uint32Array[node32Index + 6];\n        const count = uint16Array[node16Index + 14];\n        callback(depth, isLeaf, new Float32Array(buffer, node32Index * 4, 6), offset, count);\n      } else {\n        const left = node32Index + BYTES_PER_NODE / 4;\n        const right = uint32Array[node32Index + 6];\n        const splitAxis = uint32Array[node32Index + 7];\n        const stopTraversal = callback(depth, isLeaf, new Float32Array(buffer, node32Index * 4, 6), splitAxis);\n        if (!stopTraversal) {\n          _traverse2(left, depth + 1);\n          _traverse2(right, depth + 1);\n        }\n      }\n    }\n  }\n  /* Core Cast Functions */\n  raycast(ray2, materialOrSide = FrontSide) {\n    const roots = this._roots;\n    const geometry = this.geometry;\n    const intersects = [];\n    const isMaterial = materialOrSide.isMaterial;\n    const isArrayMaterial = Array.isArray(materialOrSide);\n    const groups = geometry.groups;\n    const side = isMaterial ? materialOrSide.side : materialOrSide;\n    const raycastFunc = this.indirect ? raycast_indirect : raycast;\n    for (let i = 0, l = roots.length; i < l; i++) {\n      const materialSide = isArrayMaterial ? materialOrSide[groups[i].materialIndex].side : side;\n      const startCount = intersects.length;\n      raycastFunc(this, i, materialSide, ray2, intersects);\n      if (isArrayMaterial) {\n        const materialIndex = groups[i].materialIndex;\n        for (let j = startCount, jl = intersects.length; j < jl; j++) {\n          intersects[j].face.materialIndex = materialIndex;\n        }\n      }\n    }\n    return intersects;\n  }\n  raycastFirst(ray2, materialOrSide = FrontSide) {\n    const roots = this._roots;\n    const geometry = this.geometry;\n    const isMaterial = materialOrSide.isMaterial;\n    const isArrayMaterial = Array.isArray(materialOrSide);\n    let closestResult = null;\n    const groups = geometry.groups;\n    const side = isMaterial ? materialOrSide.side : materialOrSide;\n    const raycastFirstFunc = this.indirect ? raycastFirst_indirect : raycastFirst;\n    for (let i = 0, l = roots.length; i < l; i++) {\n      const materialSide = isArrayMaterial ? materialOrSide[groups[i].materialIndex].side : side;\n      const result = raycastFirstFunc(this, i, materialSide, ray2);\n      if (result != null && (closestResult == null || result.distance < closestResult.distance)) {\n        closestResult = result;\n        if (isArrayMaterial) {\n          result.face.materialIndex = groups[i].materialIndex;\n        }\n      }\n    }\n    return closestResult;\n  }\n  intersectsGeometry(otherGeometry, geomToMesh) {\n    let result = false;\n    const roots = this._roots;\n    const intersectsGeometryFunc = this.indirect ? intersectsGeometry_indirect : intersectsGeometry;\n    for (let i = 0, l = roots.length; i < l; i++) {\n      result = intersectsGeometryFunc(this, i, otherGeometry, geomToMesh);\n      if (result) {\n        break;\n      }\n    }\n    return result;\n  }\n  shapecast(callbacks) {\n    const triangle3 = ExtendedTrianglePool.getPrimitive();\n    const iterateFunc = this.indirect ? iterateOverTriangles_indirect : iterateOverTriangles;\n    let {\n      boundsTraverseOrder,\n      intersectsBounds,\n      intersectsRange,\n      intersectsTriangle\n    } = callbacks;\n    if (intersectsRange && intersectsTriangle) {\n      const originalIntersectsRange = intersectsRange;\n      intersectsRange = (offset, count, contained, depth, nodeIndex) => {\n        if (!originalIntersectsRange(offset, count, contained, depth, nodeIndex)) {\n          return iterateFunc(offset, count, this, intersectsTriangle, contained, depth, triangle3);\n        }\n        return true;\n      };\n    } else if (!intersectsRange) {\n      if (intersectsTriangle) {\n        intersectsRange = (offset, count, contained, depth) => {\n          return iterateFunc(offset, count, this, intersectsTriangle, contained, depth, triangle3);\n        };\n      } else {\n        intersectsRange = (offset, count, contained) => {\n          return contained;\n        };\n      }\n    }\n    let result = false;\n    let byteOffset = 0;\n    const roots = this._roots;\n    for (let i = 0, l = roots.length; i < l; i++) {\n      const root = roots[i];\n      result = shapecast(this, i, intersectsBounds, intersectsRange, boundsTraverseOrder, byteOffset);\n      if (result) {\n        break;\n      }\n      byteOffset += root.byteLength;\n    }\n    ExtendedTrianglePool.releasePrimitive(triangle3);\n    return result;\n  }\n  bvhcast(otherBvh, matrixToLocal, callbacks) {\n    let {\n      intersectsRanges,\n      intersectsTriangles\n    } = callbacks;\n    const triangle1 = ExtendedTrianglePool.getPrimitive();\n    const indexAttr1 = this.geometry.index;\n    const positionAttr1 = this.geometry.attributes.position;\n    const assignTriangle1 = this.indirect ? (i1) => {\n      const ti = this.resolveTriangleIndex(i1);\n      setTriangle(triangle1, ti * 3, indexAttr1, positionAttr1);\n    } : (i1) => {\n      setTriangle(triangle1, i1 * 3, indexAttr1, positionAttr1);\n    };\n    const triangle22 = ExtendedTrianglePool.getPrimitive();\n    const indexAttr2 = otherBvh.geometry.index;\n    const positionAttr2 = otherBvh.geometry.attributes.position;\n    const assignTriangle2 = otherBvh.indirect ? (i2) => {\n      const ti2 = otherBvh.resolveTriangleIndex(i2);\n      setTriangle(triangle22, ti2 * 3, indexAttr2, positionAttr2);\n    } : (i2) => {\n      setTriangle(triangle22, i2 * 3, indexAttr2, positionAttr2);\n    };\n    if (intersectsTriangles) {\n      const iterateOverDoubleTriangles = (offset1, count1, offset2, count2, depth1, index1, depth2, index2) => {\n        for (let i2 = offset2, l2 = offset2 + count2; i2 < l2; i2++) {\n          assignTriangle2(i2);\n          triangle22.a.applyMatrix4(matrixToLocal);\n          triangle22.b.applyMatrix4(matrixToLocal);\n          triangle22.c.applyMatrix4(matrixToLocal);\n          triangle22.needsUpdate = true;\n          for (let i1 = offset1, l1 = offset1 + count1; i1 < l1; i1++) {\n            assignTriangle1(i1);\n            triangle1.needsUpdate = true;\n            if (intersectsTriangles(triangle1, triangle22, i1, i2, depth1, index1, depth2, index2)) {\n              return true;\n            }\n          }\n        }\n        return false;\n      };\n      if (intersectsRanges) {\n        const originalIntersectsRanges = intersectsRanges;\n        intersectsRanges = function(offset1, count1, offset2, count2, depth1, index1, depth2, index2) {\n          if (!originalIntersectsRanges(offset1, count1, offset2, count2, depth1, index1, depth2, index2)) {\n            return iterateOverDoubleTriangles(offset1, count1, offset2, count2, depth1, index1, depth2, index2);\n          }\n          return true;\n        };\n      } else {\n        intersectsRanges = iterateOverDoubleTriangles;\n      }\n    }\n    return bvhcast(this, otherBvh, matrixToLocal, intersectsRanges);\n  }\n  /* Derived Cast Functions */\n  intersectsBox(box, boxToMesh) {\n    obb.set(box.min, box.max, boxToMesh);\n    obb.needsUpdate = true;\n    return this.shapecast(\n      {\n        intersectsBounds: (box2) => obb.intersectsBox(box2),\n        intersectsTriangle: (tri) => obb.intersectsTriangle(tri)\n      }\n    );\n  }\n  intersectsSphere(sphere) {\n    return this.shapecast(\n      {\n        intersectsBounds: (box) => sphere.intersectsBox(box),\n        intersectsTriangle: (tri) => tri.intersectsSphere(sphere)\n      }\n    );\n  }\n  closestPointToGeometry(otherGeometry, geometryToBvh, target1 = {}, target2 = {}, minThreshold = 0, maxThreshold = Infinity) {\n    const closestPointToGeometryFunc = this.indirect ? closestPointToGeometry_indirect : closestPointToGeometry;\n    return closestPointToGeometryFunc(\n      this,\n      otherGeometry,\n      geometryToBvh,\n      target1,\n      target2,\n      minThreshold,\n      maxThreshold\n    );\n  }\n  closestPointToPoint(point, target = {}, minThreshold = 0, maxThreshold = Infinity) {\n    return closestPointToPoint(\n      this,\n      point,\n      target,\n      minThreshold,\n      maxThreshold\n    );\n  }\n  getBoundingBox(target) {\n    target.makeEmpty();\n    const roots = this._roots;\n    roots.forEach((buffer) => {\n      arrayToBox(0, new Float32Array(buffer), tempBox);\n      target.union(tempBox);\n    });\n    return target;\n  }\n}\nfunction convertRaycastIntersect(hit, object, raycaster) {\n  if (hit === null) {\n    return null;\n  }\n  hit.point.applyMatrix4(object.matrixWorld);\n  hit.distance = hit.point.distanceTo(raycaster.ray.origin);\n  hit.object = object;\n  if (hit.distance < raycaster.near || hit.distance > raycaster.far) {\n    return null;\n  } else {\n    return hit;\n  }\n}\nconst ray = /* @__PURE__ */ new Ray();\nconst tmpInverseMatrix = /* @__PURE__ */ new Matrix4();\nconst origMeshRaycastFunc = Mesh.prototype.raycast;\nfunction acceleratedRaycast(raycaster, intersects) {\n  if (this.geometry.boundsTree) {\n    if (this.material === void 0)\n      return;\n    tmpInverseMatrix.copy(this.matrixWorld).invert();\n    ray.copy(raycaster.ray).applyMatrix4(tmpInverseMatrix);\n    const bvh = this.geometry.boundsTree;\n    if (raycaster.firstHitOnly === true) {\n      const hit = convertRaycastIntersect(bvh.raycastFirst(ray, this.material), this, raycaster);\n      if (hit) {\n        intersects.push(hit);\n      }\n    } else {\n      const hits = bvh.raycast(ray, this.material);\n      for (let i = 0, l = hits.length; i < l; i++) {\n        const hit = convertRaycastIntersect(hits[i], this, raycaster);\n        if (hit) {\n          intersects.push(hit);\n        }\n      }\n    }\n  } else {\n    origMeshRaycastFunc.call(this, raycaster, intersects);\n  }\n}\nfunction computeBoundsTree(options) {\n  this.boundsTree = new MeshBVH(this, options);\n  return this.boundsTree;\n}\nfunction disposeBoundsTree() {\n  this.boundsTree = null;\n}\nconst _Components = class _Components {\n  constructor() {\n    /** {@link Disposable.onDisposed} */\n    __publicField(this, \"onDisposed\", new Event());\n    /**\n     * The list of components created in this app.\n     * The keys are UUIDs and the values are instances of the components.\n     */\n    __publicField(this, \"list\", /* @__PURE__ */ new Map());\n    /**\n     * If disabled, the animation loop will be stopped.\n     * Default value is false.\n     */\n    __publicField(this, \"enabled\", false);\n    __publicField(this, \"_clock\");\n    /**\n     * Event that triggers the Components instance is initialized.\n     *\n     * @remarks\n     * This event is triggered once when the {@link Components.init} method has been called and finish processing.\n     * This is useful to set configuration placeholders that need to be executed when the components instance is initialized.\n     * For example, enabling and configuring custom effects in a post-production renderer.\n     *\n     * @example\n     * ```typescript\n     * const components = new Components();\n     * components.onInit.add(() => {\n     *   // Enable custom effects in the post-production renderer\n     *   // or any other operation dependant on the component initialization\n     * });\n     * components.init();\n     * ```\n     */\n    __publicField(this, \"onInit\", new Event());\n    __publicField(this, \"update\", () => {\n      if (!this.enabled)\n        return;\n      const delta = this._clock.getDelta();\n      for (const [_id, component] of this.list) {\n        if (component.enabled && component.isUpdateable()) {\n          component.update(delta);\n        }\n      }\n      requestAnimationFrame(this.update);\n    });\n    this._clock = new THREE$1.Clock();\n    _Components.setupBVH();\n  }\n  /**\n   * Adds a component to the list of components.\n   * Throws an error if a component with the same UUID already exists.\n   *\n   * @param uuid - The unique identifier of the component.\n   * @param instance - The instance of the component to be added.\n   *\n   * @throws Will throw an error if a component with the same UUID already exists.\n   */\n  add(uuid, instance) {\n    if (this.list.has(uuid))\n      throw new Error(\n        `You're trying to add a component that already exists in the components instance. Use Components.get() instead.`\n      );\n    UUID.validate(uuid);\n    this.list.set(uuid, instance);\n  }\n  /**\n   * Retrieves a component instance by its constructor function.\n   * If the component does not exist in the list, it will be created and added.\n   *\n   * @template U - The type of the component to retrieve.\n   * @param Component - The constructor function of the component to retrieve.\n   *\n   * @returns The instance of the requested component.\n   *\n   * @throws Will throw an error if a component with the same UUID already exists.\n   */\n  get(Component2) {\n    const uuid = Component2.uuid;\n    if (!this.list.has(uuid)) {\n      const toolInstance = new Component2(this);\n      if (toolInstance.isDisposeable()) {\n        toolInstance.onDisposed.add(() => this.list.delete(uuid));\n      }\n      if (!this.list.has(uuid)) {\n        this.add(uuid, toolInstance);\n      }\n      return toolInstance;\n    }\n    return this.list.get(uuid);\n  }\n  /**\n   * Initializes the Components instance.\n   * This method starts the animation loop, sets the enabled flag to true,\n   * and calls the update method.\n   */\n  init() {\n    this.enabled = true;\n    for (const [_, component] of this.list.entries()) {\n      component.enabled = true;\n    }\n    this._clock.start();\n    this.update();\n    this.onInit.trigger();\n  }\n  /**\n   * Disposes the memory of all the components and tools of this instance of\n   * the library. A memory leak will be created if:\n   *\n   * - An instance of the library ends up out of scope and this function isn't\n   * called. This is especially relevant in Single Page Applications (React,\n   * Angular, Vue, etc).\n   *\n   * - Any of the objects of this instance (meshes, geometries,materials, etc) is\n   * referenced by a reference type (object or array).\n   *\n   * You can learn more about how Three.js handles memory leaks\n   * [here](https://threejs.org/docs/#manual/en/introduction/How-to-dispose-of-objects).\n   *\n   */\n  dispose() {\n    this.enabled = false;\n    let fragments;\n    for (const [_id, component] of this.list) {\n      component.enabled = false;\n      if (_id === FragmentsManager.uuid) {\n        fragments = component;\n        continue;\n      }\n      if (component.isDisposeable()) {\n        component.dispose();\n      }\n    }\n    fragments == null ? void 0 : fragments.dispose();\n    this._clock.stop();\n    this.onDisposed.trigger();\n  }\n  static setupBVH() {\n    THREE$1.BufferGeometry.prototype.computeBoundsTree = computeBoundsTree;\n    THREE$1.BufferGeometry.prototype.disposeBoundsTree = disposeBoundsTree;\n    THREE$1.Mesh.prototype.raycast = acceleratedRaycast;\n  }\n};\n/**\n * The version of the @thatopen/components library.\n */\n__publicField(_Components, \"release\", \"2.4.3\");\nlet Components = _Components;\nclass FirstPersonMode {\n  constructor(camera) {\n    /** {@link NavigationMode.enabled} */\n    __publicField(this, \"enabled\", false);\n    /** {@link NavigationMode.id} */\n    __publicField(this, \"id\", \"FirstPerson\");\n    this.camera = camera;\n  }\n  /** {@link NavigationMode.set} */\n  set(active) {\n    this.enabled = active;\n    if (active) {\n      const projection = this.camera.projection.current;\n      if (projection !== \"Perspective\") {\n        this.camera.set(\"Orbit\");\n        return;\n      }\n      this.setupFirstPersonCamera();\n    }\n  }\n  setupFirstPersonCamera() {\n    const controls = this.camera.controls;\n    const newTargetPosition = new THREE$1.Vector3();\n    controls.distance--;\n    controls.getPosition(newTargetPosition);\n    controls.minDistance = 1;\n    controls.maxDistance = 1;\n    controls.distance = 1;\n    controls.moveTo(\n      newTargetPosition.x,\n      newTargetPosition.y,\n      newTargetPosition.z\n    );\n    controls.truckSpeed = 50;\n    controls.mouseButtons.wheel = CameraControls.ACTION.DOLLY;\n    controls.touches.two = CameraControls.ACTION.TOUCH_ZOOM_TRUCK;\n  }\n}\nclass OrbitMode {\n  constructor(camera) {\n    /** {@link NavigationMode.enabled} */\n    __publicField(this, \"enabled\", true);\n    /** {@link NavigationMode.id} */\n    __publicField(this, \"id\", \"Orbit\");\n    this.camera = camera;\n    this.activateOrbitControls();\n  }\n  /** {@link NavigationMode.set} */\n  set(active) {\n    this.enabled = active;\n    if (active) {\n      this.activateOrbitControls();\n    }\n  }\n  activateOrbitControls() {\n    const controls = this.camera.controls;\n    controls.minDistance = 1;\n    controls.maxDistance = 300;\n    const position = new THREE$1.Vector3();\n    controls.getPosition(position);\n    const distance = position.length();\n    controls.distance = distance;\n    controls.truckSpeed = 2;\n    const { rotation } = this.camera.three;\n    const direction = new THREE$1.Vector3(0, 0, -1).applyEuler(rotation);\n    const target = position.addScaledVector(direction, distance);\n    controls.moveTo(target.x, target.y, target.z);\n  }\n}\nclass PlanMode {\n  constructor(camera) {\n    /** {@link NavigationMode.enabled} */\n    __publicField(this, \"enabled\", false);\n    /** {@link NavigationMode.id} */\n    __publicField(this, \"id\", \"Plan\");\n    __publicField(this, \"mouseAction1\");\n    __publicField(this, \"mouseAction2\");\n    __publicField(this, \"mouseInitialized\", false);\n    __publicField(this, \"defaultAzimuthSpeed\");\n    __publicField(this, \"defaultPolarSpeed\");\n    this.camera = camera;\n    this.defaultAzimuthSpeed = camera.controls.azimuthRotateSpeed;\n    this.defaultPolarSpeed = camera.controls.polarRotateSpeed;\n  }\n  /** {@link NavigationMode.set} */\n  set(active) {\n    this.enabled = active;\n    const controls = this.camera.controls;\n    controls.azimuthRotateSpeed = active ? 0 : this.defaultAzimuthSpeed;\n    controls.polarRotateSpeed = active ? 0 : this.defaultPolarSpeed;\n    if (!this.mouseInitialized) {\n      this.mouseAction1 = controls.touches.one;\n      this.mouseAction2 = controls.touches.two;\n      this.mouseInitialized = true;\n    }\n    if (active) {\n      controls.mouseButtons.left = CameraControls.ACTION.TRUCK;\n      controls.touches.one = CameraControls.ACTION.TOUCH_TRUCK;\n      controls.touches.two = CameraControls.ACTION.TOUCH_ZOOM;\n    } else {\n      controls.mouseButtons.left = CameraControls.ACTION.ROTATE;\n      controls.touches.one = this.mouseAction1;\n      controls.touches.two = this.mouseAction2;\n    }\n  }\n}\nclass ProjectionManager {\n  constructor(camera) {\n    /**\n     * Event that fires when the {@link CameraProjection} changes.\n     */\n    __publicField(this, \"onChanged\", new Event());\n    /**\n     * Current projection mode of the camera.\n     * Default is \"Perspective\".\n     */\n    __publicField(this, \"current\", \"Perspective\");\n    /**\n     * The camera controlled by this ProjectionManager.\n     * It can be either a PerspectiveCamera or an OrthographicCamera.\n     */\n    __publicField(this, \"camera\");\n    /** Match Ortho zoom with Perspective distance when changing projection mode */\n    __publicField(this, \"matchOrthoDistanceEnabled\", false);\n    __publicField(this, \"_component\");\n    __publicField(this, \"_previousDistance\", -1);\n    this._component = camera;\n    this.camera = camera.three;\n  }\n  /**\n   * Sets the {@link CameraProjection} of the {@link OrthoPerspectiveCamera}.\n   *\n   * @param projection - the new projection to set. If it is the current projection,\n   * it will have no effect.\n   */\n  async set(projection) {\n    if (this.current === projection)\n      return;\n    if (projection === \"Orthographic\") {\n      this.setOrthoCamera();\n    } else {\n      await this.setPerspectiveCamera();\n    }\n    this.onChanged.trigger(this.camera);\n  }\n  /**\n   * Changes the current {@link CameraProjection} from Ortographic to Perspective\n   * and vice versa.\n   */\n  async toggle() {\n    const isPerspective = this.current === \"Perspective\";\n    const target = isPerspective ? \"Orthographic\" : \"Perspective\";\n    await this.set(target);\n  }\n  setOrthoCamera() {\n    if (this._component.mode === null)\n      return;\n    if (this._component.mode.id === \"FirstPerson\") {\n      return;\n    }\n    this._previousDistance = this._component.controls.distance;\n    this._component.controls.distance = 200;\n    const dims = this.getPerspectiveDims();\n    if (!dims) {\n      return;\n    }\n    const { width, height } = dims;\n    this.setupOrthoCamera(height, width);\n    this.camera = this._component.threeOrtho;\n    this.current = \"Orthographic\";\n  }\n  getPerspectiveDims() {\n    const world = this._component.currentWorld;\n    if (!world || !world.renderer) {\n      return null;\n    }\n    const lineOfSight = new THREE$1.Vector3();\n    this._component.threePersp.getWorldDirection(lineOfSight);\n    const target = new THREE$1.Vector3();\n    this._component.controls.getTarget(target);\n    const distance = target.clone().sub(this._component.threePersp.position);\n    const depth = distance.dot(lineOfSight);\n    const dims = world.renderer.getSize();\n    const aspect = dims.x / dims.y;\n    const camera = this._component.threePersp;\n    const height = depth * 2 * Math.atan(camera.fov * (Math.PI / 180) / 2);\n    const width = height * aspect;\n    return { width, height };\n  }\n  setupOrthoCamera(height, width) {\n    this._component.controls.mouseButtons.wheel = CameraControls.ACTION.ZOOM;\n    this._component.controls.mouseButtons.middle = CameraControls.ACTION.ZOOM;\n    const pCamera = this._component.threePersp;\n    const oCamera = this._component.threeOrtho;\n    oCamera.zoom = 1;\n    oCamera.left = width / -2;\n    oCamera.right = width / 2;\n    oCamera.top = height / 2;\n    oCamera.bottom = height / -2;\n    oCamera.updateProjectionMatrix();\n    oCamera.position.copy(pCamera.position);\n    oCamera.quaternion.copy(pCamera.quaternion);\n    this._component.controls.camera = oCamera;\n  }\n  getDistance() {\n    const pCamera = this._component.threePersp;\n    const oCamera = this._component.threeOrtho;\n    const depth = (oCamera.top - oCamera.bottom) / oCamera.zoom / (2 * Math.atan(pCamera.fov * (Math.PI / 180) / 2));\n    return depth;\n  }\n  async setPerspectiveCamera() {\n    this._component.controls.mouseButtons.wheel = CameraControls.ACTION.DOLLY;\n    this._component.controls.mouseButtons.middle = CameraControls.ACTION.DOLLY;\n    const pCamera = this._component.threePersp;\n    const oCamera = this._component.threeOrtho;\n    pCamera.position.copy(oCamera.position);\n    pCamera.quaternion.copy(oCamera.quaternion);\n    this._component.controls.mouseButtons.wheel = CameraControls.ACTION.DOLLY;\n    if (this.matchOrthoDistanceEnabled) {\n      this._component.controls.distance = this.getDistance();\n    } else {\n      this._component.controls.distance = this._previousDistance;\n    }\n    await this._component.controls.zoomTo(1);\n    pCamera.updateProjectionMatrix();\n    this._component.controls.camera = pCamera;\n    this.camera = pCamera;\n    this.current = \"Perspective\";\n  }\n}\nclass OrthoPerspectiveCamera extends SimpleCamera {\n  constructor(components) {\n    super(components);\n    /**\n     * A ProjectionManager instance that manages the projection modes of the camera.\n     */\n    __publicField(this, \"projection\");\n    /**\n     * A THREE.OrthographicCamera instance that represents the orthographic camera.\n     * This camera is used when the projection mode is set to orthographic.\n     */\n    __publicField(this, \"threeOrtho\");\n    /**\n     * A THREE.PerspectiveCamera instance that represents the perspective camera.\n     * This camera is used when the projection mode is set to perspective.\n     */\n    __publicField(this, \"threePersp\");\n    __publicField(this, \"_userInputButtons\", {});\n    __publicField(this, \"_frustumSize\", 50);\n    __publicField(this, \"_navigationModes\", /* @__PURE__ */ new Map());\n    __publicField(this, \"_mode\", null);\n    __publicField(this, \"previousSize\", null);\n    this.threePersp = this.three;\n    this.threeOrtho = this.newOrthoCamera();\n    this.projection = new ProjectionManager(this);\n    this.onAspectUpdated.add(() => {\n      this.setOrthoPerspCameraAspect();\n    });\n    this.projection.onChanged.add(\n      (camera) => {\n        this.three = camera;\n        this.updateAspect();\n      }\n    );\n    this.worlds.onItemSet.add(() => {\n      this._navigationModes.clear();\n      this._navigationModes.set(\"Orbit\", new OrbitMode(this));\n      this._navigationModes.set(\"FirstPerson\", new FirstPersonMode(this));\n      this._navigationModes.set(\"Plan\", new PlanMode(this));\n      this._mode = this._navigationModes.get(\"Orbit\");\n      this.mode.set(true, { preventTargetAdjustment: true });\n      if (this.currentWorld && this.currentWorld.renderer) {\n        this.previousSize = this.currentWorld.renderer.getSize().clone();\n      }\n    });\n    this.worlds.onItemDeleted.add(() => {\n      this._navigationModes.clear();\n    });\n  }\n  /**\n   * Getter for the current navigation mode.\n   * Throws an error if the mode is not found or the camera is not initialized.\n   *\n   * @returns {NavigationMode} The current navigation mode.\n   *\n   * @throws {Error} Throws an error if the mode is not found or the camera is not initialized.\n   */\n  get mode() {\n    if (!this._mode) {\n      throw new Error(\"Mode not found, camera not initialized\");\n    }\n    return this._mode;\n  }\n  /** {@link Disposable.dispose} */\n  dispose() {\n    super.dispose();\n    this.threeOrtho.removeFromParent();\n  }\n  /**\n   * Sets a new {@link NavigationMode} and disables the previous one.\n   *\n   * @param mode - The {@link NavigationMode} to set.\n   */\n  set(mode) {\n    if (this.mode === null)\n      return;\n    if (this.mode.id === mode)\n      return;\n    this.mode.set(false);\n    if (!this._navigationModes.has(mode)) {\n      throw new Error(\"The specified mode does not exist!\");\n    }\n    this._mode = this._navigationModes.get(mode);\n    this.mode.set(true);\n  }\n  /**\n   * Make the camera view fit all the specified meshes.\n   *\n   * @param meshes the meshes to fit. If it is not defined, it will\n   * evaluate {@link Components.meshes}.\n   * @param offset the distance to the fit object\n   */\n  async fit(meshes, offset = 1.5) {\n    if (!this.enabled)\n      return;\n    const maxNum = Number.MAX_VALUE;\n    const minNum = Number.MIN_VALUE;\n    const min = new THREE$1.Vector3(maxNum, maxNum, maxNum);\n    const max = new THREE$1.Vector3(minNum, minNum, minNum);\n    for (const mesh of meshes) {\n      const box2 = new THREE$1.Box3().setFromObject(mesh);\n      if (box2.min.x < min.x)\n        min.x = box2.min.x;\n      if (box2.min.y < min.y)\n        min.y = box2.min.y;\n      if (box2.min.z < min.z)\n        min.z = box2.min.z;\n      if (box2.max.x > max.x)\n        max.x = box2.max.x;\n      if (box2.max.y > max.y)\n        max.y = box2.max.y;\n      if (box2.max.z > max.z)\n        max.z = box2.max.z;\n    }\n    const box = new THREE$1.Box3(min, max);\n    const fragments = this.components.get(FragmentsManager);\n    if (fragments.initialized) {\n      for (const [, model] of fragments.list) {\n        const aabb = model.box;\n        if (aabb.min.x < min.x)\n          min.x = aabb.min.x;\n        if (aabb.min.y < min.y)\n          min.y = aabb.min.y;\n        if (aabb.min.z < min.z)\n          min.z = aabb.min.z;\n        if (aabb.max.x > max.x)\n          max.x = aabb.max.x;\n        if (aabb.max.y > max.y)\n          max.y = aabb.max.y;\n        if (aabb.max.z > max.z)\n          max.z = aabb.max.z;\n      }\n    }\n    const sceneSize = new THREE$1.Vector3();\n    box.getSize(sceneSize);\n    const sceneCenter = new THREE$1.Vector3();\n    box.getCenter(sceneCenter);\n    const radius = Math.max(sceneSize.x, sceneSize.y, sceneSize.z) * offset;\n    const sphere = new THREE$1.Sphere(sceneCenter, radius);\n    await this.controls.fitToSphere(sphere, true);\n  }\n  /**\n   * Allows or prevents all user input.\n   *\n   * @param active - whether to enable or disable user inputs.\n   */\n  setUserInput(active) {\n    if (active) {\n      this.enableUserInput();\n    } else {\n      this.disableUserInput();\n    }\n  }\n  disableUserInput() {\n    this._userInputButtons.left = this.controls.mouseButtons.left;\n    this._userInputButtons.right = this.controls.mouseButtons.right;\n    this._userInputButtons.middle = this.controls.mouseButtons.middle;\n    this._userInputButtons.wheel = this.controls.mouseButtons.wheel;\n    this.controls.mouseButtons.left = 0;\n    this.controls.mouseButtons.right = 0;\n    this.controls.mouseButtons.middle = 0;\n    this.controls.mouseButtons.wheel = 0;\n  }\n  enableUserInput() {\n    if (Object.keys(this._userInputButtons).length === 0)\n      return;\n    this.controls.mouseButtons.left = this._userInputButtons.left;\n    this.controls.mouseButtons.right = this._userInputButtons.right;\n    this.controls.mouseButtons.middle = this._userInputButtons.middle;\n    this.controls.mouseButtons.wheel = this._userInputButtons.wheel;\n  }\n  newOrthoCamera() {\n    const aspect = window.innerWidth / window.innerHeight;\n    return new THREE$1.OrthographicCamera(\n      this._frustumSize * aspect / -2,\n      this._frustumSize * aspect / 2,\n      this._frustumSize / 2,\n      this._frustumSize / -2,\n      0.1,\n      1e3\n    );\n  }\n  setOrthoPerspCameraAspect() {\n    if (!this.currentWorld || !this.currentWorld.renderer) {\n      return;\n    }\n    if (!this.previousSize)\n      return;\n    const size = this.currentWorld.renderer.getSize();\n    const previousHeight = this.threeOrtho.top;\n    const previousWidth = this.threeOrtho.right;\n    const heightSizeFactor = size.y / this.previousSize.y;\n    const widthSizeFactor = size.x / this.previousSize.x;\n    const newHeight = previousHeight * heightSizeFactor;\n    const newWidth = previousWidth * widthSizeFactor;\n    this.threeOrtho.left = -newWidth;\n    this.threeOrtho.right = newWidth;\n    this.threeOrtho.top = newHeight;\n    this.threeOrtho.bottom = -newHeight;\n    this.threeOrtho.updateProjectionMatrix();\n    this.previousSize.copy(size);\n  }\n}\nfunction commonjsRequire(path) {\n  throw new Error('Could not dynamically require \"' + path + '\". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.');\n}\nvar jszip_min = { exports: {} };\n/*!\n\nJSZip v3.10.1 - A JavaScript class for generating and reading zip files\n<http://stuartk.com/jszip>\n\n(c) 2009-2016 Stuart Knightley <stuart [at] stuartk.com>\nDual licenced under the MIT license or GPLv3. See https://raw.github.com/Stuk/jszip/main/LICENSE.markdown.\n\nJSZip uses the library pako released under the MIT license :\nhttps://github.com/nodeca/pako/blob/main/LICENSE\n*/\n(function(module, exports) {\n  !function(e) {\n    module.exports = e();\n  }(function() {\n    return function s(a, o, h) {\n      function u(r, e2) {\n        if (!o[r]) {\n          if (!a[r]) {\n            var t = \"function\" == typeof commonjsRequire && commonjsRequire;\n            if (!e2 && t)\n              return t(r, true);\n            if (l)\n              return l(r, true);\n            var n = new Error(\"Cannot find module '\" + r + \"'\");\n            throw n.code = \"MODULE_NOT_FOUND\", n;\n          }\n          var i = o[r] = { exports: {} };\n          a[r][0].call(i.exports, function(e3) {\n            var t2 = a[r][1][e3];\n            return u(t2 || e3);\n          }, i, i.exports, s, a, o, h);\n        }\n        return o[r].exports;\n      }\n      for (var l = \"function\" == typeof commonjsRequire && commonjsRequire, e = 0; e < h.length; e++)\n        u(h[e]);\n      return u;\n    }({ 1: [function(e, t, r) {\n      var d = e(\"./utils\"), c = e(\"./support\"), p = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n      r.encode = function(e2) {\n        for (var t2, r2, n, i, s, a, o, h = [], u = 0, l = e2.length, f = l, c2 = \"string\" !== d.getTypeOf(e2); u < e2.length; )\n          f = l - u, n = c2 ? (t2 = e2[u++], r2 = u < l ? e2[u++] : 0, u < l ? e2[u++] : 0) : (t2 = e2.charCodeAt(u++), r2 = u < l ? e2.charCodeAt(u++) : 0, u < l ? e2.charCodeAt(u++) : 0), i = t2 >> 2, s = (3 & t2) << 4 | r2 >> 4, a = 1 < f ? (15 & r2) << 2 | n >> 6 : 64, o = 2 < f ? 63 & n : 64, h.push(p.charAt(i) + p.charAt(s) + p.charAt(a) + p.charAt(o));\n        return h.join(\"\");\n      }, r.decode = function(e2) {\n        var t2, r2, n, i, s, a, o = 0, h = 0, u = \"data:\";\n        if (e2.substr(0, u.length) === u)\n          throw new Error(\"Invalid base64 input, it looks like a data url.\");\n        var l, f = 3 * (e2 = e2.replace(/[^A-Za-z0-9+/=]/g, \"\")).length / 4;\n        if (e2.charAt(e2.length - 1) === p.charAt(64) && f--, e2.charAt(e2.length - 2) === p.charAt(64) && f--, f % 1 != 0)\n          throw new Error(\"Invalid base64 input, bad content length.\");\n        for (l = c.uint8array ? new Uint8Array(0 | f) : new Array(0 | f); o < e2.length; )\n          t2 = p.indexOf(e2.charAt(o++)) << 2 | (i = p.indexOf(e2.charAt(o++))) >> 4, r2 = (15 & i) << 4 | (s = p.indexOf(e2.charAt(o++))) >> 2, n = (3 & s) << 6 | (a = p.indexOf(e2.charAt(o++))), l[h++] = t2, 64 !== s && (l[h++] = r2), 64 !== a && (l[h++] = n);\n        return l;\n      };\n    }, { \"./support\": 30, \"./utils\": 32 }], 2: [function(e, t, r) {\n      var n = e(\"./external\"), i = e(\"./stream/DataWorker\"), s = e(\"./stream/Crc32Probe\"), a = e(\"./stream/DataLengthProbe\");\n      function o(e2, t2, r2, n2, i2) {\n        this.compressedSize = e2, this.uncompressedSize = t2, this.crc32 = r2, this.compression = n2, this.compressedContent = i2;\n      }\n      o.prototype = { getContentWorker: function() {\n        var e2 = new i(n.Promise.resolve(this.compressedContent)).pipe(this.compression.uncompressWorker()).pipe(new a(\"data_length\")), t2 = this;\n        return e2.on(\"end\", function() {\n          if (this.streamInfo.data_length !== t2.uncompressedSize)\n            throw new Error(\"Bug : uncompressed data size mismatch\");\n        }), e2;\n      }, getCompressedWorker: function() {\n        return new i(n.Promise.resolve(this.compressedContent)).withStreamInfo(\"compressedSize\", this.compressedSize).withStreamInfo(\"uncompressedSize\", this.uncompressedSize).withStreamInfo(\"crc32\", this.crc32).withStreamInfo(\"compression\", this.compression);\n      } }, o.createWorkerFrom = function(e2, t2, r2) {\n        return e2.pipe(new s()).pipe(new a(\"uncompressedSize\")).pipe(t2.compressWorker(r2)).pipe(new a(\"compressedSize\")).withStreamInfo(\"compression\", t2);\n      }, t.exports = o;\n    }, { \"./external\": 6, \"./stream/Crc32Probe\": 25, \"./stream/DataLengthProbe\": 26, \"./stream/DataWorker\": 27 }], 3: [function(e, t, r) {\n      var n = e(\"./stream/GenericWorker\");\n      r.STORE = { magic: \"\\0\\0\", compressWorker: function() {\n        return new n(\"STORE compression\");\n      }, uncompressWorker: function() {\n        return new n(\"STORE decompression\");\n      } }, r.DEFLATE = e(\"./flate\");\n    }, { \"./flate\": 7, \"./stream/GenericWorker\": 28 }], 4: [function(e, t, r) {\n      var n = e(\"./utils\");\n      var o = function() {\n        for (var e2, t2 = [], r2 = 0; r2 < 256; r2++) {\n          e2 = r2;\n          for (var n2 = 0; n2 < 8; n2++)\n            e2 = 1 & e2 ? 3988292384 ^ e2 >>> 1 : e2 >>> 1;\n          t2[r2] = e2;\n        }\n        return t2;\n      }();\n      t.exports = function(e2, t2) {\n        return void 0 !== e2 && e2.length ? \"string\" !== n.getTypeOf(e2) ? function(e3, t3, r2, n2) {\n          var i = o, s = n2 + r2;\n          e3 ^= -1;\n          for (var a = n2; a < s; a++)\n            e3 = e3 >>> 8 ^ i[255 & (e3 ^ t3[a])];\n          return -1 ^ e3;\n        }(0 | t2, e2, e2.length, 0) : function(e3, t3, r2, n2) {\n          var i = o, s = n2 + r2;\n          e3 ^= -1;\n          for (var a = n2; a < s; a++)\n            e3 = e3 >>> 8 ^ i[255 & (e3 ^ t3.charCodeAt(a))];\n          return -1 ^ e3;\n        }(0 | t2, e2, e2.length, 0) : 0;\n      };\n    }, { \"./utils\": 32 }], 5: [function(e, t, r) {\n      r.base64 = false, r.binary = false, r.dir = false, r.createFolders = true, r.date = null, r.compression = null, r.compressionOptions = null, r.comment = null, r.unixPermissions = null, r.dosPermissions = null;\n    }, {}], 6: [function(e, t, r) {\n      var n = null;\n      n = \"undefined\" != typeof Promise ? Promise : e(\"lie\"), t.exports = { Promise: n };\n    }, { lie: 37 }], 7: [function(e, t, r) {\n      var n = \"undefined\" != typeof Uint8Array && \"undefined\" != typeof Uint16Array && \"undefined\" != typeof Uint32Array, i = e(\"pako\"), s = e(\"./utils\"), a = e(\"./stream/GenericWorker\"), o = n ? \"uint8array\" : \"array\";\n      function h(e2, t2) {\n        a.call(this, \"FlateWorker/\" + e2), this._pako = null, this._pakoAction = e2, this._pakoOptions = t2, this.meta = {};\n      }\n      r.magic = \"\\b\\0\", s.inherits(h, a), h.prototype.processChunk = function(e2) {\n        this.meta = e2.meta, null === this._pako && this._createPako(), this._pako.push(s.transformTo(o, e2.data), false);\n      }, h.prototype.flush = function() {\n        a.prototype.flush.call(this), null === this._pako && this._createPako(), this._pako.push([], true);\n      }, h.prototype.cleanUp = function() {\n        a.prototype.cleanUp.call(this), this._pako = null;\n      }, h.prototype._createPako = function() {\n        this._pako = new i[this._pakoAction]({ raw: true, level: this._pakoOptions.level || -1 });\n        var t2 = this;\n        this._pako.onData = function(e2) {\n          t2.push({ data: e2, meta: t2.meta });\n        };\n      }, r.compressWorker = function(e2) {\n        return new h(\"Deflate\", e2);\n      }, r.uncompressWorker = function() {\n        return new h(\"Inflate\", {});\n      };\n    }, { \"./stream/GenericWorker\": 28, \"./utils\": 32, pako: 38 }], 8: [function(e, t, r) {\n      function A(e2, t2) {\n        var r2, n2 = \"\";\n        for (r2 = 0; r2 < t2; r2++)\n          n2 += String.fromCharCode(255 & e2), e2 >>>= 8;\n        return n2;\n      }\n      function n(e2, t2, r2, n2, i2, s2) {\n        var a, o, h = e2.file, u = e2.compression, l = s2 !== O.utf8encode, f = I.transformTo(\"string\", s2(h.name)), c = I.transformTo(\"string\", O.utf8encode(h.name)), d = h.comment, p = I.transformTo(\"string\", s2(d)), m = I.transformTo(\"string\", O.utf8encode(d)), _ = c.length !== h.name.length, g = m.length !== d.length, b = \"\", v = \"\", y = \"\", w = h.dir, k = h.date, x = { crc32: 0, compressedSize: 0, uncompressedSize: 0 };\n        t2 && !r2 || (x.crc32 = e2.crc32, x.compressedSize = e2.compressedSize, x.uncompressedSize = e2.uncompressedSize);\n        var S = 0;\n        t2 && (S |= 8), l || !_ && !g || (S |= 2048);\n        var z = 0, C = 0;\n        w && (z |= 16), \"UNIX\" === i2 ? (C = 798, z |= function(e3, t3) {\n          var r3 = e3;\n          return e3 || (r3 = t3 ? 16893 : 33204), (65535 & r3) << 16;\n        }(h.unixPermissions, w)) : (C = 20, z |= function(e3) {\n          return 63 & (e3 || 0);\n        }(h.dosPermissions)), a = k.getUTCHours(), a <<= 6, a |= k.getUTCMinutes(), a <<= 5, a |= k.getUTCSeconds() / 2, o = k.getUTCFullYear() - 1980, o <<= 4, o |= k.getUTCMonth() + 1, o <<= 5, o |= k.getUTCDate(), _ && (v = A(1, 1) + A(B(f), 4) + c, b += \"up\" + A(v.length, 2) + v), g && (y = A(1, 1) + A(B(p), 4) + m, b += \"uc\" + A(y.length, 2) + y);\n        var E = \"\";\n        return E += \"\\n\\0\", E += A(S, 2), E += u.magic, E += A(a, 2), E += A(o, 2), E += A(x.crc32, 4), E += A(x.compressedSize, 4), E += A(x.uncompressedSize, 4), E += A(f.length, 2), E += A(b.length, 2), { fileRecord: R.LOCAL_FILE_HEADER + E + f + b, dirRecord: R.CENTRAL_FILE_HEADER + A(C, 2) + E + A(p.length, 2) + \"\\0\\0\\0\\0\" + A(z, 4) + A(n2, 4) + f + b + p };\n      }\n      var I = e(\"../utils\"), i = e(\"../stream/GenericWorker\"), O = e(\"../utf8\"), B = e(\"../crc32\"), R = e(\"../signature\");\n      function s(e2, t2, r2, n2) {\n        i.call(this, \"ZipFileWorker\"), this.bytesWritten = 0, this.zipComment = t2, this.zipPlatform = r2, this.encodeFileName = n2, this.streamFiles = e2, this.accumulate = false, this.contentBuffer = [], this.dirRecords = [], this.currentSourceOffset = 0, this.entriesCount = 0, this.currentFile = null, this._sources = [];\n      }\n      I.inherits(s, i), s.prototype.push = function(e2) {\n        var t2 = e2.meta.percent || 0, r2 = this.entriesCount, n2 = this._sources.length;\n        this.accumulate ? this.contentBuffer.push(e2) : (this.bytesWritten += e2.data.length, i.prototype.push.call(this, { data: e2.data, meta: { currentFile: this.currentFile, percent: r2 ? (t2 + 100 * (r2 - n2 - 1)) / r2 : 100 } }));\n      }, s.prototype.openedSource = function(e2) {\n        this.currentSourceOffset = this.bytesWritten, this.currentFile = e2.file.name;\n        var t2 = this.streamFiles && !e2.file.dir;\n        if (t2) {\n          var r2 = n(e2, t2, false, this.currentSourceOffset, this.zipPlatform, this.encodeFileName);\n          this.push({ data: r2.fileRecord, meta: { percent: 0 } });\n        } else\n          this.accumulate = true;\n      }, s.prototype.closedSource = function(e2) {\n        this.accumulate = false;\n        var t2 = this.streamFiles && !e2.file.dir, r2 = n(e2, t2, true, this.currentSourceOffset, this.zipPlatform, this.encodeFileName);\n        if (this.dirRecords.push(r2.dirRecord), t2)\n          this.push({ data: function(e3) {\n            return R.DATA_DESCRIPTOR + A(e3.crc32, 4) + A(e3.compressedSize, 4) + A(e3.uncompressedSize, 4);\n          }(e2), meta: { percent: 100 } });\n        else\n          for (this.push({ data: r2.fileRecord, meta: { percent: 0 } }); this.contentBuffer.length; )\n            this.push(this.contentBuffer.shift());\n        this.currentFile = null;\n      }, s.prototype.flush = function() {\n        for (var e2 = this.bytesWritten, t2 = 0; t2 < this.dirRecords.length; t2++)\n          this.push({ data: this.dirRecords[t2], meta: { percent: 100 } });\n        var r2 = this.bytesWritten - e2, n2 = function(e3, t3, r3, n3, i2) {\n          var s2 = I.transformTo(\"string\", i2(n3));\n          return R.CENTRAL_DIRECTORY_END + \"\\0\\0\\0\\0\" + A(e3, 2) + A(e3, 2) + A(t3, 4) + A(r3, 4) + A(s2.length, 2) + s2;\n        }(this.dirRecords.length, r2, e2, this.zipComment, this.encodeFileName);\n        this.push({ data: n2, meta: { percent: 100 } });\n      }, s.prototype.prepareNextSource = function() {\n        this.previous = this._sources.shift(), this.openedSource(this.previous.streamInfo), this.isPaused ? this.previous.pause() : this.previous.resume();\n      }, s.prototype.registerPrevious = function(e2) {\n        this._sources.push(e2);\n        var t2 = this;\n        return e2.on(\"data\", function(e3) {\n          t2.processChunk(e3);\n        }), e2.on(\"end\", function() {\n          t2.closedSource(t2.previous.streamInfo), t2._sources.length ? t2.prepareNextSource() : t2.end();\n        }), e2.on(\"error\", function(e3) {\n          t2.error(e3);\n        }), this;\n      }, s.prototype.resume = function() {\n        return !!i.prototype.resume.call(this) && (!this.previous && this._sources.length ? (this.prepareNextSource(), true) : this.previous || this._sources.length || this.generatedError ? void 0 : (this.end(), true));\n      }, s.prototype.error = function(e2) {\n        var t2 = this._sources;\n        if (!i.prototype.error.call(this, e2))\n          return false;\n        for (var r2 = 0; r2 < t2.length; r2++)\n          try {\n            t2[r2].error(e2);\n          } catch (e3) {\n          }\n        return true;\n      }, s.prototype.lock = function() {\n        i.prototype.lock.call(this);\n        for (var e2 = this._sources, t2 = 0; t2 < e2.length; t2++)\n          e2[t2].lock();\n      }, t.exports = s;\n    }, { \"../crc32\": 4, \"../signature\": 23, \"../stream/GenericWorker\": 28, \"../utf8\": 31, \"../utils\": 32 }], 9: [function(e, t, r) {\n      var u = e(\"../compressions\"), n = e(\"./ZipFileWorker\");\n      r.generateWorker = function(e2, a, t2) {\n        var o = new n(a.streamFiles, t2, a.platform, a.encodeFileName), h = 0;\n        try {\n          e2.forEach(function(e3, t3) {\n            h++;\n            var r2 = function(e4, t4) {\n              var r3 = e4 || t4, n3 = u[r3];\n              if (!n3)\n                throw new Error(r3 + \" is not a valid compression method !\");\n              return n3;\n            }(t3.options.compression, a.compression), n2 = t3.options.compressionOptions || a.compressionOptions || {}, i = t3.dir, s = t3.date;\n            t3._compressWorker(r2, n2).withStreamInfo(\"file\", { name: e3, dir: i, date: s, comment: t3.comment || \"\", unixPermissions: t3.unixPermissions, dosPermissions: t3.dosPermissions }).pipe(o);\n          }), o.entriesCount = h;\n        } catch (e3) {\n          o.error(e3);\n        }\n        return o;\n      };\n    }, { \"../compressions\": 3, \"./ZipFileWorker\": 8 }], 10: [function(e, t, r) {\n      function n() {\n        if (!(this instanceof n))\n          return new n();\n        if (arguments.length)\n          throw new Error(\"The constructor with parameters has been removed in JSZip 3.0, please check the upgrade guide.\");\n        this.files = /* @__PURE__ */ Object.create(null), this.comment = null, this.root = \"\", this.clone = function() {\n          var e2 = new n();\n          for (var t2 in this)\n            \"function\" != typeof this[t2] && (e2[t2] = this[t2]);\n          return e2;\n        };\n      }\n      (n.prototype = e(\"./object\")).loadAsync = e(\"./load\"), n.support = e(\"./support\"), n.defaults = e(\"./defaults\"), n.version = \"3.10.1\", n.loadAsync = function(e2, t2) {\n        return new n().loadAsync(e2, t2);\n      }, n.external = e(\"./external\"), t.exports = n;\n    }, { \"./defaults\": 5, \"./external\": 6, \"./load\": 11, \"./object\": 15, \"./support\": 30 }], 11: [function(e, t, r) {\n      var u = e(\"./utils\"), i = e(\"./external\"), n = e(\"./utf8\"), s = e(\"./zipEntries\"), a = e(\"./stream/Crc32Probe\"), l = e(\"./nodejsUtils\");\n      function f(n2) {\n        return new i.Promise(function(e2, t2) {\n          var r2 = n2.decompressed.getContentWorker().pipe(new a());\n          r2.on(\"error\", function(e3) {\n            t2(e3);\n          }).on(\"end\", function() {\n            r2.streamInfo.crc32 !== n2.decompressed.crc32 ? t2(new Error(\"Corrupted zip : CRC32 mismatch\")) : e2();\n          }).resume();\n        });\n      }\n      t.exports = function(e2, o) {\n        var h = this;\n        return o = u.extend(o || {}, { base64: false, checkCRC32: false, optimizedBinaryString: false, createFolders: false, decodeFileName: n.utf8decode }), l.isNode && l.isStream(e2) ? i.Promise.reject(new Error(\"JSZip can't accept a stream when loading a zip file.\")) : u.prepareContent(\"the loaded zip file\", e2, true, o.optimizedBinaryString, o.base64).then(function(e3) {\n          var t2 = new s(o);\n          return t2.load(e3), t2;\n        }).then(function(e3) {\n          var t2 = [i.Promise.resolve(e3)], r2 = e3.files;\n          if (o.checkCRC32)\n            for (var n2 = 0; n2 < r2.length; n2++)\n              t2.push(f(r2[n2]));\n          return i.Promise.all(t2);\n        }).then(function(e3) {\n          for (var t2 = e3.shift(), r2 = t2.files, n2 = 0; n2 < r2.length; n2++) {\n            var i2 = r2[n2], s2 = i2.fileNameStr, a2 = u.resolve(i2.fileNameStr);\n            h.file(a2, i2.decompressed, { binary: true, optimizedBinaryString: true, date: i2.date, dir: i2.dir, comment: i2.fileCommentStr.length ? i2.fileCommentStr : null, unixPermissions: i2.unixPermissions, dosPermissions: i2.dosPermissions, createFolders: o.createFolders }), i2.dir || (h.file(a2).unsafeOriginalName = s2);\n          }\n          return t2.zipComment.length && (h.comment = t2.zipComment), h;\n        });\n      };\n    }, { \"./external\": 6, \"./nodejsUtils\": 14, \"./stream/Crc32Probe\": 25, \"./utf8\": 31, \"./utils\": 32, \"./zipEntries\": 33 }], 12: [function(e, t, r) {\n      var n = e(\"../utils\"), i = e(\"../stream/GenericWorker\");\n      function s(e2, t2) {\n        i.call(this, \"Nodejs stream input adapter for \" + e2), this._upstreamEnded = false, this._bindStream(t2);\n      }\n      n.inherits(s, i), s.prototype._bindStream = function(e2) {\n        var t2 = this;\n        (this._stream = e2).pause(), e2.on(\"data\", function(e3) {\n          t2.push({ data: e3, meta: { percent: 0 } });\n        }).on(\"error\", function(e3) {\n          t2.isPaused ? this.generatedError = e3 : t2.error(e3);\n        }).on(\"end\", function() {\n          t2.isPaused ? t2._upstreamEnded = true : t2.end();\n        });\n      }, s.prototype.pause = function() {\n        return !!i.prototype.pause.call(this) && (this._stream.pause(), true);\n      }, s.prototype.resume = function() {\n        return !!i.prototype.resume.call(this) && (this._upstreamEnded ? this.end() : this._stream.resume(), true);\n      }, t.exports = s;\n    }, { \"../stream/GenericWorker\": 28, \"../utils\": 32 }], 13: [function(e, t, r) {\n      var i = e(\"readable-stream\").Readable;\n      function n(e2, t2, r2) {\n        i.call(this, t2), this._helper = e2;\n        var n2 = this;\n        e2.on(\"data\", function(e3, t3) {\n          n2.push(e3) || n2._helper.pause(), r2 && r2(t3);\n        }).on(\"error\", function(e3) {\n          n2.emit(\"error\", e3);\n        }).on(\"end\", function() {\n          n2.push(null);\n        });\n      }\n      e(\"../utils\").inherits(n, i), n.prototype._read = function() {\n        this._helper.resume();\n      }, t.exports = n;\n    }, { \"../utils\": 32, \"readable-stream\": 16 }], 14: [function(e, t, r) {\n      t.exports = { isNode: \"undefined\" != typeof Buffer, newBufferFrom: function(e2, t2) {\n        if (Buffer.from && Buffer.from !== Uint8Array.from)\n          return Buffer.from(e2, t2);\n        if (\"number\" == typeof e2)\n          throw new Error('The \"data\" argument must not be a number');\n        return new Buffer(e2, t2);\n      }, allocBuffer: function(e2) {\n        if (Buffer.alloc)\n          return Buffer.alloc(e2);\n        var t2 = new Buffer(e2);\n        return t2.fill(0), t2;\n      }, isBuffer: function(e2) {\n        return Buffer.isBuffer(e2);\n      }, isStream: function(e2) {\n        return e2 && \"function\" == typeof e2.on && \"function\" == typeof e2.pause && \"function\" == typeof e2.resume;\n      } };\n    }, {}], 15: [function(e, t, r) {\n      function s(e2, t2, r2) {\n        var n2, i2 = u.getTypeOf(t2), s2 = u.extend(r2 || {}, f);\n        s2.date = s2.date || /* @__PURE__ */ new Date(), null !== s2.compression && (s2.compression = s2.compression.toUpperCase()), \"string\" == typeof s2.unixPermissions && (s2.unixPermissions = parseInt(s2.unixPermissions, 8)), s2.unixPermissions && 16384 & s2.unixPermissions && (s2.dir = true), s2.dosPermissions && 16 & s2.dosPermissions && (s2.dir = true), s2.dir && (e2 = g(e2)), s2.createFolders && (n2 = _(e2)) && b.call(this, n2, true);\n        var a2 = \"string\" === i2 && false === s2.binary && false === s2.base64;\n        r2 && void 0 !== r2.binary || (s2.binary = !a2), (t2 instanceof c && 0 === t2.uncompressedSize || s2.dir || !t2 || 0 === t2.length) && (s2.base64 = false, s2.binary = true, t2 = \"\", s2.compression = \"STORE\", i2 = \"string\");\n        var o2 = null;\n        o2 = t2 instanceof c || t2 instanceof l ? t2 : p.isNode && p.isStream(t2) ? new m(e2, t2) : u.prepareContent(e2, t2, s2.binary, s2.optimizedBinaryString, s2.base64);\n        var h2 = new d(e2, o2, s2);\n        this.files[e2] = h2;\n      }\n      var i = e(\"./utf8\"), u = e(\"./utils\"), l = e(\"./stream/GenericWorker\"), a = e(\"./stream/StreamHelper\"), f = e(\"./defaults\"), c = e(\"./compressedObject\"), d = e(\"./zipObject\"), o = e(\"./generate\"), p = e(\"./nodejsUtils\"), m = e(\"./nodejs/NodejsStreamInputAdapter\"), _ = function(e2) {\n        \"/\" === e2.slice(-1) && (e2 = e2.substring(0, e2.length - 1));\n        var t2 = e2.lastIndexOf(\"/\");\n        return 0 < t2 ? e2.substring(0, t2) : \"\";\n      }, g = function(e2) {\n        return \"/\" !== e2.slice(-1) && (e2 += \"/\"), e2;\n      }, b = function(e2, t2) {\n        return t2 = void 0 !== t2 ? t2 : f.createFolders, e2 = g(e2), this.files[e2] || s.call(this, e2, null, { dir: true, createFolders: t2 }), this.files[e2];\n      };\n      function h(e2) {\n        return \"[object RegExp]\" === Object.prototype.toString.call(e2);\n      }\n      var n = { load: function() {\n        throw new Error(\"This method has been removed in JSZip 3.0, please check the upgrade guide.\");\n      }, forEach: function(e2) {\n        var t2, r2, n2;\n        for (t2 in this.files)\n          n2 = this.files[t2], (r2 = t2.slice(this.root.length, t2.length)) && t2.slice(0, this.root.length) === this.root && e2(r2, n2);\n      }, filter: function(r2) {\n        var n2 = [];\n        return this.forEach(function(e2, t2) {\n          r2(e2, t2) && n2.push(t2);\n        }), n2;\n      }, file: function(e2, t2, r2) {\n        if (1 !== arguments.length)\n          return e2 = this.root + e2, s.call(this, e2, t2, r2), this;\n        if (h(e2)) {\n          var n2 = e2;\n          return this.filter(function(e3, t3) {\n            return !t3.dir && n2.test(e3);\n          });\n        }\n        var i2 = this.files[this.root + e2];\n        return i2 && !i2.dir ? i2 : null;\n      }, folder: function(r2) {\n        if (!r2)\n          return this;\n        if (h(r2))\n          return this.filter(function(e3, t3) {\n            return t3.dir && r2.test(e3);\n          });\n        var e2 = this.root + r2, t2 = b.call(this, e2), n2 = this.clone();\n        return n2.root = t2.name, n2;\n      }, remove: function(r2) {\n        r2 = this.root + r2;\n        var e2 = this.files[r2];\n        if (e2 || (\"/\" !== r2.slice(-1) && (r2 += \"/\"), e2 = this.files[r2]), e2 && !e2.dir)\n          delete this.files[r2];\n        else\n          for (var t2 = this.filter(function(e3, t3) {\n            return t3.name.slice(0, r2.length) === r2;\n          }), n2 = 0; n2 < t2.length; n2++)\n            delete this.files[t2[n2].name];\n        return this;\n      }, generate: function() {\n        throw new Error(\"This method has been removed in JSZip 3.0, please check the upgrade guide.\");\n      }, generateInternalStream: function(e2) {\n        var t2, r2 = {};\n        try {\n          if ((r2 = u.extend(e2 || {}, { streamFiles: false, compression: \"STORE\", compressionOptions: null, type: \"\", platform: \"DOS\", comment: null, mimeType: \"application/zip\", encodeFileName: i.utf8encode })).type = r2.type.toLowerCase(), r2.compression = r2.compression.toUpperCase(), \"binarystring\" === r2.type && (r2.type = \"string\"), !r2.type)\n            throw new Error(\"No output type specified.\");\n          u.checkSupport(r2.type), \"darwin\" !== r2.platform && \"freebsd\" !== r2.platform && \"linux\" !== r2.platform && \"sunos\" !== r2.platform || (r2.platform = \"UNIX\"), \"win32\" === r2.platform && (r2.platform = \"DOS\");\n          var n2 = r2.comment || this.comment || \"\";\n          t2 = o.generateWorker(this, r2, n2);\n        } catch (e3) {\n          (t2 = new l(\"error\")).error(e3);\n        }\n        return new a(t2, r2.type || \"string\", r2.mimeType);\n      }, generateAsync: function(e2, t2) {\n        return this.generateInternalStream(e2).accumulate(t2);\n      }, generateNodeStream: function(e2, t2) {\n        return (e2 = e2 || {}).type || (e2.type = \"nodebuffer\"), this.generateInternalStream(e2).toNodejsStream(t2);\n      } };\n      t.exports = n;\n    }, { \"./compressedObject\": 2, \"./defaults\": 5, \"./generate\": 9, \"./nodejs/NodejsStreamInputAdapter\": 12, \"./nodejsUtils\": 14, \"./stream/GenericWorker\": 28, \"./stream/StreamHelper\": 29, \"./utf8\": 31, \"./utils\": 32, \"./zipObject\": 35 }], 16: [function(e, t, r) {\n      t.exports = e(\"stream\");\n    }, { stream: void 0 }], 17: [function(e, t, r) {\n      var n = e(\"./DataReader\");\n      function i(e2) {\n        n.call(this, e2);\n        for (var t2 = 0; t2 < this.data.length; t2++)\n          e2[t2] = 255 & e2[t2];\n      }\n      e(\"../utils\").inherits(i, n), i.prototype.byteAt = function(e2) {\n        return this.data[this.zero + e2];\n      }, i.prototype.lastIndexOfSignature = function(e2) {\n        for (var t2 = e2.charCodeAt(0), r2 = e2.charCodeAt(1), n2 = e2.charCodeAt(2), i2 = e2.charCodeAt(3), s = this.length - 4; 0 <= s; --s)\n          if (this.data[s] === t2 && this.data[s + 1] === r2 && this.data[s + 2] === n2 && this.data[s + 3] === i2)\n            return s - this.zero;\n        return -1;\n      }, i.prototype.readAndCheckSignature = function(e2) {\n        var t2 = e2.charCodeAt(0), r2 = e2.charCodeAt(1), n2 = e2.charCodeAt(2), i2 = e2.charCodeAt(3), s = this.readData(4);\n        return t2 === s[0] && r2 === s[1] && n2 === s[2] && i2 === s[3];\n      }, i.prototype.readData = function(e2) {\n        if (this.checkOffset(e2), 0 === e2)\n          return [];\n        var t2 = this.data.slice(this.zero + this.index, this.zero + this.index + e2);\n        return this.index += e2, t2;\n      }, t.exports = i;\n    }, { \"../utils\": 32, \"./DataReader\": 18 }], 18: [function(e, t, r) {\n      var n = e(\"../utils\");\n      function i(e2) {\n        this.data = e2, this.length = e2.length, this.index = 0, this.zero = 0;\n      }\n      i.prototype = { checkOffset: function(e2) {\n        this.checkIndex(this.index + e2);\n      }, checkIndex: function(e2) {\n        if (this.length < this.zero + e2 || e2 < 0)\n          throw new Error(\"End of data reached (data length = \" + this.length + \", asked index = \" + e2 + \"). Corrupted zip ?\");\n      }, setIndex: function(e2) {\n        this.checkIndex(e2), this.index = e2;\n      }, skip: function(e2) {\n        this.setIndex(this.index + e2);\n      }, byteAt: function() {\n      }, readInt: function(e2) {\n        var t2, r2 = 0;\n        for (this.checkOffset(e2), t2 = this.index + e2 - 1; t2 >= this.index; t2--)\n          r2 = (r2 << 8) + this.byteAt(t2);\n        return this.index += e2, r2;\n      }, readString: function(e2) {\n        return n.transformTo(\"string\", this.readData(e2));\n      }, readData: function() {\n      }, lastIndexOfSignature: function() {\n      }, readAndCheckSignature: function() {\n      }, readDate: function() {\n        var e2 = this.readInt(4);\n        return new Date(Date.UTC(1980 + (e2 >> 25 & 127), (e2 >> 21 & 15) - 1, e2 >> 16 & 31, e2 >> 11 & 31, e2 >> 5 & 63, (31 & e2) << 1));\n      } }, t.exports = i;\n    }, { \"../utils\": 32 }], 19: [function(e, t, r) {\n      var n = e(\"./Uint8ArrayReader\");\n      function i(e2) {\n        n.call(this, e2);\n      }\n      e(\"../utils\").inherits(i, n), i.prototype.readData = function(e2) {\n        this.checkOffset(e2);\n        var t2 = this.data.slice(this.zero + this.index, this.zero + this.index + e2);\n        return this.index += e2, t2;\n      }, t.exports = i;\n    }, { \"../utils\": 32, \"./Uint8ArrayReader\": 21 }], 20: [function(e, t, r) {\n      var n = e(\"./DataReader\");\n      function i(e2) {\n        n.call(this, e2);\n      }\n      e(\"../utils\").inherits(i, n), i.prototype.byteAt = function(e2) {\n        return this.data.charCodeAt(this.zero + e2);\n      }, i.prototype.lastIndexOfSignature = function(e2) {\n        return this.data.lastIndexOf(e2) - this.zero;\n      }, i.prototype.readAndCheckSignature = function(e2) {\n        return e2 === this.readData(4);\n      }, i.prototype.readData = function(e2) {\n        this.checkOffset(e2);\n        var t2 = this.data.slice(this.zero + this.index, this.zero + this.index + e2);\n        return this.index += e2, t2;\n      }, t.exports = i;\n    }, { \"../utils\": 32, \"./DataReader\": 18 }], 21: [function(e, t, r) {\n      var n = e(\"./ArrayReader\");\n      function i(e2) {\n        n.call(this, e2);\n      }\n      e(\"../utils\").inherits(i, n), i.prototype.readData = function(e2) {\n        if (this.checkOffset(e2), 0 === e2)\n          return new Uint8Array(0);\n        var t2 = this.data.subarray(this.zero + this.index, this.zero + this.index + e2);\n        return this.index += e2, t2;\n      }, t.exports = i;\n    }, { \"../utils\": 32, \"./ArrayReader\": 17 }], 22: [function(e, t, r) {\n      var n = e(\"../utils\"), i = e(\"../support\"), s = e(\"./ArrayReader\"), a = e(\"./StringReader\"), o = e(\"./NodeBufferReader\"), h = e(\"./Uint8ArrayReader\");\n      t.exports = function(e2) {\n        var t2 = n.getTypeOf(e2);\n        return n.checkSupport(t2), \"string\" !== t2 || i.uint8array ? \"nodebuffer\" === t2 ? new o(e2) : i.uint8array ? new h(n.transformTo(\"uint8array\", e2)) : new s(n.transformTo(\"array\", e2)) : new a(e2);\n      };\n    }, { \"../support\": 30, \"../utils\": 32, \"./ArrayReader\": 17, \"./NodeBufferReader\": 19, \"./StringReader\": 20, \"./Uint8ArrayReader\": 21 }], 23: [function(e, t, r) {\n      r.LOCAL_FILE_HEADER = \"PK\u0003\u0004\", r.CENTRAL_FILE_HEADER = \"PK\u0001\u0002\", r.CENTRAL_DIRECTORY_END = \"PK\u0005\u0006\", r.ZIP64_CENTRAL_DIRECTORY_LOCATOR = \"PK\u0006\\x07\", r.ZIP64_CENTRAL_DIRECTORY_END = \"PK\u0006\u0006\", r.DATA_DESCRIPTOR = \"PK\\x07\\b\";\n    }, {}], 24: [function(e, t, r) {\n      var n = e(\"./GenericWorker\"), i = e(\"../utils\");\n      function s(e2) {\n        n.call(this, \"ConvertWorker to \" + e2), this.destType = e2;\n      }\n      i.inherits(s, n), s.prototype.processChunk = function(e2) {\n        this.push({ data: i.transformTo(this.destType, e2.data), meta: e2.meta });\n      }, t.exports = s;\n    }, { \"../utils\": 32, \"./GenericWorker\": 28 }], 25: [function(e, t, r) {\n      var n = e(\"./GenericWorker\"), i = e(\"../crc32\");\n      function s() {\n        n.call(this, \"Crc32Probe\"), this.withStreamInfo(\"crc32\", 0);\n      }\n      e(\"../utils\").inherits(s, n), s.prototype.processChunk = function(e2) {\n        this.streamInfo.crc32 = i(e2.data, this.streamInfo.crc32 || 0), this.push(e2);\n      }, t.exports = s;\n    }, { \"../crc32\": 4, \"../utils\": 32, \"./GenericWorker\": 28 }], 26: [function(e, t, r) {\n      var n = e(\"../utils\"), i = e(\"./GenericWorker\");\n      function s(e2) {\n        i.call(this, \"DataLengthProbe for \" + e2), this.propName = e2, this.withStreamInfo(e2, 0);\n      }\n      n.inherits(s, i), s.prototype.processChunk = function(e2) {\n        if (e2) {\n          var t2 = this.streamInfo[this.propName] || 0;\n          this.streamInfo[this.propName] = t2 + e2.data.length;\n        }\n        i.prototype.processChunk.call(this, e2);\n      }, t.exports = s;\n    }, { \"../utils\": 32, \"./GenericWorker\": 28 }], 27: [function(e, t, r) {\n      var n = e(\"../utils\"), i = e(\"./GenericWorker\");\n      function s(e2) {\n        i.call(this, \"DataWorker\");\n        var t2 = this;\n        this.dataIsReady = false, this.index = 0, this.max = 0, this.data = null, this.type = \"\", this._tickScheduled = false, e2.then(function(e3) {\n          t2.dataIsReady = true, t2.data = e3, t2.max = e3 && e3.length || 0, t2.type = n.getTypeOf(e3), t2.isPaused || t2._tickAndRepeat();\n        }, function(e3) {\n          t2.error(e3);\n        });\n      }\n      n.inherits(s, i), s.prototype.cleanUp = function() {\n        i.prototype.cleanUp.call(this), this.data = null;\n      }, s.prototype.resume = function() {\n        return !!i.prototype.resume.call(this) && (!this._tickScheduled && this.dataIsReady && (this._tickScheduled = true, n.delay(this._tickAndRepeat, [], this)), true);\n      }, s.prototype._tickAndRepeat = function() {\n        this._tickScheduled = false, this.isPaused || this.isFinished || (this._tick(), this.isFinished || (n.delay(this._tickAndRepeat, [], this), this._tickScheduled = true));\n      }, s.prototype._tick = function() {\n        if (this.isPaused || this.isFinished)\n          return false;\n        var e2 = null, t2 = Math.min(this.max, this.index + 16384);\n        if (this.index >= this.max)\n          return this.end();\n        switch (this.type) {\n          case \"string\":\n            e2 = this.data.substring(this.index, t2);\n            break;\n          case \"uint8array\":\n            e2 = this.data.subarray(this.index, t2);\n            break;\n          case \"array\":\n          case \"nodebuffer\":\n            e2 = this.data.slice(this.index, t2);\n        }\n        return this.index = t2, this.push({ data: e2, meta: { percent: this.max ? this.index / this.max * 100 : 0 } });\n      }, t.exports = s;\n    }, { \"../utils\": 32, \"./GenericWorker\": 28 }], 28: [function(e, t, r) {\n      function n(e2) {\n        this.name = e2 || \"default\", this.streamInfo = {}, this.generatedError = null, this.extraStreamInfo = {}, this.isPaused = true, this.isFinished = false, this.isLocked = false, this._listeners = { data: [], end: [], error: [] }, this.previous = null;\n      }\n      n.prototype = { push: function(e2) {\n        this.emit(\"data\", e2);\n      }, end: function() {\n        if (this.isFinished)\n          return false;\n        this.flush();\n        try {\n          this.emit(\"end\"), this.cleanUp(), this.isFinished = true;\n        } catch (e2) {\n          this.emit(\"error\", e2);\n        }\n        return true;\n      }, error: function(e2) {\n        return !this.isFinished && (this.isPaused ? this.generatedError = e2 : (this.isFinished = true, this.emit(\"error\", e2), this.previous && this.previous.error(e2), this.cleanUp()), true);\n      }, on: function(e2, t2) {\n        return this._listeners[e2].push(t2), this;\n      }, cleanUp: function() {\n        this.streamInfo = this.generatedError = this.extraStreamInfo = null, this._listeners = [];\n      }, emit: function(e2, t2) {\n        if (this._listeners[e2])\n          for (var r2 = 0; r2 < this._listeners[e2].length; r2++)\n            this._listeners[e2][r2].call(this, t2);\n      }, pipe: function(e2) {\n        return e2.registerPrevious(this);\n      }, registerPrevious: function(e2) {\n        if (this.isLocked)\n          throw new Error(\"The stream '\" + this + \"' has already been used.\");\n        this.streamInfo = e2.streamInfo, this.mergeStreamInfo(), this.previous = e2;\n        var t2 = this;\n        return e2.on(\"data\", function(e3) {\n          t2.processChunk(e3);\n        }), e2.on(\"end\", function() {\n          t2.end();\n        }), e2.on(\"error\", function(e3) {\n          t2.error(e3);\n        }), this;\n      }, pause: function() {\n        return !this.isPaused && !this.isFinished && (this.isPaused = true, this.previous && this.previous.pause(), true);\n      }, resume: function() {\n        if (!this.isPaused || this.isFinished)\n          return false;\n        var e2 = this.isPaused = false;\n        return this.generatedError && (this.error(this.generatedError), e2 = true), this.previous && this.previous.resume(), !e2;\n      }, flush: function() {\n      }, processChunk: function(e2) {\n        this.push(e2);\n      }, withStreamInfo: function(e2, t2) {\n        return this.extraStreamInfo[e2] = t2, this.mergeStreamInfo(), this;\n      }, mergeStreamInfo: function() {\n        for (var e2 in this.extraStreamInfo)\n          Object.prototype.hasOwnProperty.call(this.extraStreamInfo, e2) && (this.streamInfo[e2] = this.extraStreamInfo[e2]);\n      }, lock: function() {\n        if (this.isLocked)\n          throw new Error(\"The stream '\" + this + \"' has already been used.\");\n        this.isLocked = true, this.previous && this.previous.lock();\n      }, toString: function() {\n        var e2 = \"Worker \" + this.name;\n        return this.previous ? this.previous + \" -> \" + e2 : e2;\n      } }, t.exports = n;\n    }, {}], 29: [function(e, t, r) {\n      var h = e(\"../utils\"), i = e(\"./ConvertWorker\"), s = e(\"./GenericWorker\"), u = e(\"../base64\"), n = e(\"../support\"), a = e(\"../external\"), o = null;\n      if (n.nodestream)\n        try {\n          o = e(\"../nodejs/NodejsStreamOutputAdapter\");\n        } catch (e2) {\n        }\n      function l(e2, o2) {\n        return new a.Promise(function(t2, r2) {\n          var n2 = [], i2 = e2._internalType, s2 = e2._outputType, a2 = e2._mimeType;\n          e2.on(\"data\", function(e3, t3) {\n            n2.push(e3), o2 && o2(t3);\n          }).on(\"error\", function(e3) {\n            n2 = [], r2(e3);\n          }).on(\"end\", function() {\n            try {\n              var e3 = function(e4, t3, r3) {\n                switch (e4) {\n                  case \"blob\":\n                    return h.newBlob(h.transformTo(\"arraybuffer\", t3), r3);\n                  case \"base64\":\n                    return u.encode(t3);\n                  default:\n                    return h.transformTo(e4, t3);\n                }\n              }(s2, function(e4, t3) {\n                var r3, n3 = 0, i3 = null, s3 = 0;\n                for (r3 = 0; r3 < t3.length; r3++)\n                  s3 += t3[r3].length;\n                switch (e4) {\n                  case \"string\":\n                    return t3.join(\"\");\n                  case \"array\":\n                    return Array.prototype.concat.apply([], t3);\n                  case \"uint8array\":\n                    for (i3 = new Uint8Array(s3), r3 = 0; r3 < t3.length; r3++)\n                      i3.set(t3[r3], n3), n3 += t3[r3].length;\n                    return i3;\n                  case \"nodebuffer\":\n                    return Buffer.concat(t3);\n                  default:\n                    throw new Error(\"concat : unsupported type '\" + e4 + \"'\");\n                }\n              }(i2, n2), a2);\n              t2(e3);\n            } catch (e4) {\n              r2(e4);\n            }\n            n2 = [];\n          }).resume();\n        });\n      }\n      function f(e2, t2, r2) {\n        var n2 = t2;\n        switch (t2) {\n          case \"blob\":\n          case \"arraybuffer\":\n            n2 = \"uint8array\";\n            break;\n          case \"base64\":\n            n2 = \"string\";\n        }\n        try {\n          this._internalType = n2, this._outputType = t2, this._mimeType = r2, h.checkSupport(n2), this._worker = e2.pipe(new i(n2)), e2.lock();\n        } catch (e3) {\n          this._worker = new s(\"error\"), this._worker.error(e3);\n        }\n      }\n      f.prototype = { accumulate: function(e2) {\n        return l(this, e2);\n      }, on: function(e2, t2) {\n        var r2 = this;\n        return \"data\" === e2 ? this._worker.on(e2, function(e3) {\n          t2.call(r2, e3.data, e3.meta);\n        }) : this._worker.on(e2, function() {\n          h.delay(t2, arguments, r2);\n        }), this;\n      }, resume: function() {\n        return h.delay(this._worker.resume, [], this._worker), this;\n      }, pause: function() {\n        return this._worker.pause(), this;\n      }, toNodejsStream: function(e2) {\n        if (h.checkSupport(\"nodestream\"), \"nodebuffer\" !== this._outputType)\n          throw new Error(this._outputType + \" is not supported by this method\");\n        return new o(this, { objectMode: \"nodebuffer\" !== this._outputType }, e2);\n      } }, t.exports = f;\n    }, { \"../base64\": 1, \"../external\": 6, \"../nodejs/NodejsStreamOutputAdapter\": 13, \"../support\": 30, \"../utils\": 32, \"./ConvertWorker\": 24, \"./GenericWorker\": 28 }], 30: [function(e, t, r) {\n      if (r.base64 = true, r.array = true, r.string = true, r.arraybuffer = \"undefined\" != typeof ArrayBuffer && \"undefined\" != typeof Uint8Array, r.nodebuffer = \"undefined\" != typeof Buffer, r.uint8array = \"undefined\" != typeof Uint8Array, \"undefined\" == typeof ArrayBuffer)\n        r.blob = false;\n      else {\n        var n = new ArrayBuffer(0);\n        try {\n          r.blob = 0 === new Blob([n], { type: \"application/zip\" }).size;\n        } catch (e2) {\n          try {\n            var i = new (self.BlobBuilder || self.WebKitBlobBuilder || self.MozBlobBuilder || self.MSBlobBuilder)();\n            i.append(n), r.blob = 0 === i.getBlob(\"application/zip\").size;\n          } catch (e3) {\n            r.blob = false;\n          }\n        }\n      }\n      try {\n        r.nodestream = !!e(\"readable-stream\").Readable;\n      } catch (e2) {\n        r.nodestream = false;\n      }\n    }, { \"readable-stream\": 16 }], 31: [function(e, t, s) {\n      for (var o = e(\"./utils\"), h = e(\"./support\"), r = e(\"./nodejsUtils\"), n = e(\"./stream/GenericWorker\"), u = new Array(256), i = 0; i < 256; i++)\n        u[i] = 252 <= i ? 6 : 248 <= i ? 5 : 240 <= i ? 4 : 224 <= i ? 3 : 192 <= i ? 2 : 1;\n      u[254] = u[254] = 1;\n      function a() {\n        n.call(this, \"utf-8 decode\"), this.leftOver = null;\n      }\n      function l() {\n        n.call(this, \"utf-8 encode\");\n      }\n      s.utf8encode = function(e2) {\n        return h.nodebuffer ? r.newBufferFrom(e2, \"utf-8\") : function(e3) {\n          var t2, r2, n2, i2, s2, a2 = e3.length, o2 = 0;\n          for (i2 = 0; i2 < a2; i2++)\n            55296 == (64512 & (r2 = e3.charCodeAt(i2))) && i2 + 1 < a2 && 56320 == (64512 & (n2 = e3.charCodeAt(i2 + 1))) && (r2 = 65536 + (r2 - 55296 << 10) + (n2 - 56320), i2++), o2 += r2 < 128 ? 1 : r2 < 2048 ? 2 : r2 < 65536 ? 3 : 4;\n          for (t2 = h.uint8array ? new Uint8Array(o2) : new Array(o2), i2 = s2 = 0; s2 < o2; i2++)\n            55296 == (64512 & (r2 = e3.charCodeAt(i2))) && i2 + 1 < a2 && 56320 == (64512 & (n2 = e3.charCodeAt(i2 + 1))) && (r2 = 65536 + (r2 - 55296 << 10) + (n2 - 56320), i2++), r2 < 128 ? t2[s2++] = r2 : (r2 < 2048 ? t2[s2++] = 192 | r2 >>> 6 : (r2 < 65536 ? t2[s2++] = 224 | r2 >>> 12 : (t2[s2++] = 240 | r2 >>> 18, t2[s2++] = 128 | r2 >>> 12 & 63), t2[s2++] = 128 | r2 >>> 6 & 63), t2[s2++] = 128 | 63 & r2);\n          return t2;\n        }(e2);\n      }, s.utf8decode = function(e2) {\n        return h.nodebuffer ? o.transformTo(\"nodebuffer\", e2).toString(\"utf-8\") : function(e3) {\n          var t2, r2, n2, i2, s2 = e3.length, a2 = new Array(2 * s2);\n          for (t2 = r2 = 0; t2 < s2; )\n            if ((n2 = e3[t2++]) < 128)\n              a2[r2++] = n2;\n            else if (4 < (i2 = u[n2]))\n              a2[r2++] = 65533, t2 += i2 - 1;\n            else {\n              for (n2 &= 2 === i2 ? 31 : 3 === i2 ? 15 : 7; 1 < i2 && t2 < s2; )\n                n2 = n2 << 6 | 63 & e3[t2++], i2--;\n              1 < i2 ? a2[r2++] = 65533 : n2 < 65536 ? a2[r2++] = n2 : (n2 -= 65536, a2[r2++] = 55296 | n2 >> 10 & 1023, a2[r2++] = 56320 | 1023 & n2);\n            }\n          return a2.length !== r2 && (a2.subarray ? a2 = a2.subarray(0, r2) : a2.length = r2), o.applyFromCharCode(a2);\n        }(e2 = o.transformTo(h.uint8array ? \"uint8array\" : \"array\", e2));\n      }, o.inherits(a, n), a.prototype.processChunk = function(e2) {\n        var t2 = o.transformTo(h.uint8array ? \"uint8array\" : \"array\", e2.data);\n        if (this.leftOver && this.leftOver.length) {\n          if (h.uint8array) {\n            var r2 = t2;\n            (t2 = new Uint8Array(r2.length + this.leftOver.length)).set(this.leftOver, 0), t2.set(r2, this.leftOver.length);\n          } else\n            t2 = this.leftOver.concat(t2);\n          this.leftOver = null;\n        }\n        var n2 = function(e3, t3) {\n          var r3;\n          for ((t3 = t3 || e3.length) > e3.length && (t3 = e3.length), r3 = t3 - 1; 0 <= r3 && 128 == (192 & e3[r3]); )\n            r3--;\n          return r3 < 0 ? t3 : 0 === r3 ? t3 : r3 + u[e3[r3]] > t3 ? r3 : t3;\n        }(t2), i2 = t2;\n        n2 !== t2.length && (h.uint8array ? (i2 = t2.subarray(0, n2), this.leftOver = t2.subarray(n2, t2.length)) : (i2 = t2.slice(0, n2), this.leftOver = t2.slice(n2, t2.length))), this.push({ data: s.utf8decode(i2), meta: e2.meta });\n      }, a.prototype.flush = function() {\n        this.leftOver && this.leftOver.length && (this.push({ data: s.utf8decode(this.leftOver), meta: {} }), this.leftOver = null);\n      }, s.Utf8DecodeWorker = a, o.inherits(l, n), l.prototype.processChunk = function(e2) {\n        this.push({ data: s.utf8encode(e2.data), meta: e2.meta });\n      }, s.Utf8EncodeWorker = l;\n    }, { \"./nodejsUtils\": 14, \"./stream/GenericWorker\": 28, \"./support\": 30, \"./utils\": 32 }], 32: [function(e, t, a) {\n      var o = e(\"./support\"), h = e(\"./base64\"), r = e(\"./nodejsUtils\"), u = e(\"./external\");\n      function n(e2) {\n        return e2;\n      }\n      function l(e2, t2) {\n        for (var r2 = 0; r2 < e2.length; ++r2)\n          t2[r2] = 255 & e2.charCodeAt(r2);\n        return t2;\n      }\n      e(\"setimmediate\"), a.newBlob = function(t2, r2) {\n        a.checkSupport(\"blob\");\n        try {\n          return new Blob([t2], { type: r2 });\n        } catch (e2) {\n          try {\n            var n2 = new (self.BlobBuilder || self.WebKitBlobBuilder || self.MozBlobBuilder || self.MSBlobBuilder)();\n            return n2.append(t2), n2.getBlob(r2);\n          } catch (e3) {\n            throw new Error(\"Bug : can't construct the Blob.\");\n          }\n        }\n      };\n      var i = { stringifyByChunk: function(e2, t2, r2) {\n        var n2 = [], i2 = 0, s2 = e2.length;\n        if (s2 <= r2)\n          return String.fromCharCode.apply(null, e2);\n        for (; i2 < s2; )\n          \"array\" === t2 || \"nodebuffer\" === t2 ? n2.push(String.fromCharCode.apply(null, e2.slice(i2, Math.min(i2 + r2, s2)))) : n2.push(String.fromCharCode.apply(null, e2.subarray(i2, Math.min(i2 + r2, s2)))), i2 += r2;\n        return n2.join(\"\");\n      }, stringifyByChar: function(e2) {\n        for (var t2 = \"\", r2 = 0; r2 < e2.length; r2++)\n          t2 += String.fromCharCode(e2[r2]);\n        return t2;\n      }, applyCanBeUsed: { uint8array: function() {\n        try {\n          return o.uint8array && 1 === String.fromCharCode.apply(null, new Uint8Array(1)).length;\n        } catch (e2) {\n          return false;\n        }\n      }(), nodebuffer: function() {\n        try {\n          return o.nodebuffer && 1 === String.fromCharCode.apply(null, r.allocBuffer(1)).length;\n        } catch (e2) {\n          return false;\n        }\n      }() } };\n      function s(e2) {\n        var t2 = 65536, r2 = a.getTypeOf(e2), n2 = true;\n        if (\"uint8array\" === r2 ? n2 = i.applyCanBeUsed.uint8array : \"nodebuffer\" === r2 && (n2 = i.applyCanBeUsed.nodebuffer), n2)\n          for (; 1 < t2; )\n            try {\n              return i.stringifyByChunk(e2, r2, t2);\n            } catch (e3) {\n              t2 = Math.floor(t2 / 2);\n            }\n        return i.stringifyByChar(e2);\n      }\n      function f(e2, t2) {\n        for (var r2 = 0; r2 < e2.length; r2++)\n          t2[r2] = e2[r2];\n        return t2;\n      }\n      a.applyFromCharCode = s;\n      var c = {};\n      c.string = { string: n, array: function(e2) {\n        return l(e2, new Array(e2.length));\n      }, arraybuffer: function(e2) {\n        return c.string.uint8array(e2).buffer;\n      }, uint8array: function(e2) {\n        return l(e2, new Uint8Array(e2.length));\n      }, nodebuffer: function(e2) {\n        return l(e2, r.allocBuffer(e2.length));\n      } }, c.array = { string: s, array: n, arraybuffer: function(e2) {\n        return new Uint8Array(e2).buffer;\n      }, uint8array: function(e2) {\n        return new Uint8Array(e2);\n      }, nodebuffer: function(e2) {\n        return r.newBufferFrom(e2);\n      } }, c.arraybuffer = { string: function(e2) {\n        return s(new Uint8Array(e2));\n      }, array: function(e2) {\n        return f(new Uint8Array(e2), new Array(e2.byteLength));\n      }, arraybuffer: n, uint8array: function(e2) {\n        return new Uint8Array(e2);\n      }, nodebuffer: function(e2) {\n        return r.newBufferFrom(new Uint8Array(e2));\n      } }, c.uint8array = { string: s, array: function(e2) {\n        return f(e2, new Array(e2.length));\n      }, arraybuffer: function(e2) {\n        return e2.buffer;\n      }, uint8array: n, nodebuffer: function(e2) {\n        return r.newBufferFrom(e2);\n      } }, c.nodebuffer = { string: s, array: function(e2) {\n        return f(e2, new Array(e2.length));\n      }, arraybuffer: function(e2) {\n        return c.nodebuffer.uint8array(e2).buffer;\n      }, uint8array: function(e2) {\n        return f(e2, new Uint8Array(e2.length));\n      }, nodebuffer: n }, a.transformTo = function(e2, t2) {\n        if (t2 = t2 || \"\", !e2)\n          return t2;\n        a.checkSupport(e2);\n        var r2 = a.getTypeOf(t2);\n        return c[r2][e2](t2);\n      }, a.resolve = function(e2) {\n        for (var t2 = e2.split(\"/\"), r2 = [], n2 = 0; n2 < t2.length; n2++) {\n          var i2 = t2[n2];\n          \".\" === i2 || \"\" === i2 && 0 !== n2 && n2 !== t2.length - 1 || (\"..\" === i2 ? r2.pop() : r2.push(i2));\n        }\n        return r2.join(\"/\");\n      }, a.getTypeOf = function(e2) {\n        return \"string\" == typeof e2 ? \"string\" : \"[object Array]\" === Object.prototype.toString.call(e2) ? \"array\" : o.nodebuffer && r.isBuffer(e2) ? \"nodebuffer\" : o.uint8array && e2 instanceof Uint8Array ? \"uint8array\" : o.arraybuffer && e2 instanceof ArrayBuffer ? \"arraybuffer\" : void 0;\n      }, a.checkSupport = function(e2) {\n        if (!o[e2.toLowerCase()])\n          throw new Error(e2 + \" is not supported by this platform\");\n      }, a.MAX_VALUE_16BITS = 65535, a.MAX_VALUE_32BITS = -1, a.pretty = function(e2) {\n        var t2, r2, n2 = \"\";\n        for (r2 = 0; r2 < (e2 || \"\").length; r2++)\n          n2 += \"\\\\x\" + ((t2 = e2.charCodeAt(r2)) < 16 ? \"0\" : \"\") + t2.toString(16).toUpperCase();\n        return n2;\n      }, a.delay = function(e2, t2, r2) {\n        setImmediate(function() {\n          e2.apply(r2 || null, t2 || []);\n        });\n      }, a.inherits = function(e2, t2) {\n        function r2() {\n        }\n        r2.prototype = t2.prototype, e2.prototype = new r2();\n      }, a.extend = function() {\n        var e2, t2, r2 = {};\n        for (e2 = 0; e2 < arguments.length; e2++)\n          for (t2 in arguments[e2])\n            Object.prototype.hasOwnProperty.call(arguments[e2], t2) && void 0 === r2[t2] && (r2[t2] = arguments[e2][t2]);\n        return r2;\n      }, a.prepareContent = function(r2, e2, n2, i2, s2) {\n        return u.Promise.resolve(e2).then(function(n3) {\n          return o.blob && (n3 instanceof Blob || -1 !== [\"[object File]\", \"[object Blob]\"].indexOf(Object.prototype.toString.call(n3))) && \"undefined\" != typeof FileReader ? new u.Promise(function(t2, r3) {\n            var e3 = new FileReader();\n            e3.onload = function(e4) {\n              t2(e4.target.result);\n            }, e3.onerror = function(e4) {\n              r3(e4.target.error);\n            }, e3.readAsArrayBuffer(n3);\n          }) : n3;\n        }).then(function(e3) {\n          var t2 = a.getTypeOf(e3);\n          return t2 ? (\"arraybuffer\" === t2 ? e3 = a.transformTo(\"uint8array\", e3) : \"string\" === t2 && (s2 ? e3 = h.decode(e3) : n2 && true !== i2 && (e3 = function(e4) {\n            return l(e4, o.uint8array ? new Uint8Array(e4.length) : new Array(e4.length));\n          }(e3))), e3) : u.Promise.reject(new Error(\"Can't read the data of '\" + r2 + \"'. Is it in a supported JavaScript type (String, Blob, ArrayBuffer, etc) ?\"));\n        });\n      };\n    }, { \"./base64\": 1, \"./external\": 6, \"./nodejsUtils\": 14, \"./support\": 30, setimmediate: 54 }], 33: [function(e, t, r) {\n      var n = e(\"./reader/readerFor\"), i = e(\"./utils\"), s = e(\"./signature\"), a = e(\"./zipEntry\"), o = e(\"./support\");\n      function h(e2) {\n        this.files = [], this.loadOptions = e2;\n      }\n      h.prototype = { checkSignature: function(e2) {\n        if (!this.reader.readAndCheckSignature(e2)) {\n          this.reader.index -= 4;\n          var t2 = this.reader.readString(4);\n          throw new Error(\"Corrupted zip or bug: unexpected signature (\" + i.pretty(t2) + \", expected \" + i.pretty(e2) + \")\");\n        }\n      }, isSignature: function(e2, t2) {\n        var r2 = this.reader.index;\n        this.reader.setIndex(e2);\n        var n2 = this.reader.readString(4) === t2;\n        return this.reader.setIndex(r2), n2;\n      }, readBlockEndOfCentral: function() {\n        this.diskNumber = this.reader.readInt(2), this.diskWithCentralDirStart = this.reader.readInt(2), this.centralDirRecordsOnThisDisk = this.reader.readInt(2), this.centralDirRecords = this.reader.readInt(2), this.centralDirSize = this.reader.readInt(4), this.centralDirOffset = this.reader.readInt(4), this.zipCommentLength = this.reader.readInt(2);\n        var e2 = this.reader.readData(this.zipCommentLength), t2 = o.uint8array ? \"uint8array\" : \"array\", r2 = i.transformTo(t2, e2);\n        this.zipComment = this.loadOptions.decodeFileName(r2);\n      }, readBlockZip64EndOfCentral: function() {\n        this.zip64EndOfCentralSize = this.reader.readInt(8), this.reader.skip(4), this.diskNumber = this.reader.readInt(4), this.diskWithCentralDirStart = this.reader.readInt(4), this.centralDirRecordsOnThisDisk = this.reader.readInt(8), this.centralDirRecords = this.reader.readInt(8), this.centralDirSize = this.reader.readInt(8), this.centralDirOffset = this.reader.readInt(8), this.zip64ExtensibleData = {};\n        for (var e2, t2, r2, n2 = this.zip64EndOfCentralSize - 44; 0 < n2; )\n          e2 = this.reader.readInt(2), t2 = this.reader.readInt(4), r2 = this.reader.readData(t2), this.zip64ExtensibleData[e2] = { id: e2, length: t2, value: r2 };\n      }, readBlockZip64EndOfCentralLocator: function() {\n        if (this.diskWithZip64CentralDirStart = this.reader.readInt(4), this.relativeOffsetEndOfZip64CentralDir = this.reader.readInt(8), this.disksCount = this.reader.readInt(4), 1 < this.disksCount)\n          throw new Error(\"Multi-volumes zip are not supported\");\n      }, readLocalFiles: function() {\n        var e2, t2;\n        for (e2 = 0; e2 < this.files.length; e2++)\n          t2 = this.files[e2], this.reader.setIndex(t2.localHeaderOffset), this.checkSignature(s.LOCAL_FILE_HEADER), t2.readLocalPart(this.reader), t2.handleUTF8(), t2.processAttributes();\n      }, readCentralDir: function() {\n        var e2;\n        for (this.reader.setIndex(this.centralDirOffset); this.reader.readAndCheckSignature(s.CENTRAL_FILE_HEADER); )\n          (e2 = new a({ zip64: this.zip64 }, this.loadOptions)).readCentralPart(this.reader), this.files.push(e2);\n        if (this.centralDirRecords !== this.files.length && 0 !== this.centralDirRecords && 0 === this.files.length)\n          throw new Error(\"Corrupted zip or bug: expected \" + this.centralDirRecords + \" records in central dir, got \" + this.files.length);\n      }, readEndOfCentral: function() {\n        var e2 = this.reader.lastIndexOfSignature(s.CENTRAL_DIRECTORY_END);\n        if (e2 < 0)\n          throw !this.isSignature(0, s.LOCAL_FILE_HEADER) ? new Error(\"Can't find end of central directory : is this a zip file ? If it is, see https://stuk.github.io/jszip/documentation/howto/read_zip.html\") : new Error(\"Corrupted zip: can't find end of central directory\");\n        this.reader.setIndex(e2);\n        var t2 = e2;\n        if (this.checkSignature(s.CENTRAL_DIRECTORY_END), this.readBlockEndOfCentral(), this.diskNumber === i.MAX_VALUE_16BITS || this.diskWithCentralDirStart === i.MAX_VALUE_16BITS || this.centralDirRecordsOnThisDisk === i.MAX_VALUE_16BITS || this.centralDirRecords === i.MAX_VALUE_16BITS || this.centralDirSize === i.MAX_VALUE_32BITS || this.centralDirOffset === i.MAX_VALUE_32BITS) {\n          if (this.zip64 = true, (e2 = this.reader.lastIndexOfSignature(s.ZIP64_CENTRAL_DIRECTORY_LOCATOR)) < 0)\n            throw new Error(\"Corrupted zip: can't find the ZIP64 end of central directory locator\");\n          if (this.reader.setIndex(e2), this.checkSignature(s.ZIP64_CENTRAL_DIRECTORY_LOCATOR), this.readBlockZip64EndOfCentralLocator(), !this.isSignature(this.relativeOffsetEndOfZip64CentralDir, s.ZIP64_CENTRAL_DIRECTORY_END) && (this.relativeOffsetEndOfZip64CentralDir = this.reader.lastIndexOfSignature(s.ZIP64_CENTRAL_DIRECTORY_END), this.relativeOffsetEndOfZip64CentralDir < 0))\n            throw new Error(\"Corrupted zip: can't find the ZIP64 end of central directory\");\n          this.reader.setIndex(this.relativeOffsetEndOfZip64CentralDir), this.checkSignature(s.ZIP64_CENTRAL_DIRECTORY_END), this.readBlockZip64EndOfCentral();\n        }\n        var r2 = this.centralDirOffset + this.centralDirSize;\n        this.zip64 && (r2 += 20, r2 += 12 + this.zip64EndOfCentralSize);\n        var n2 = t2 - r2;\n        if (0 < n2)\n          this.isSignature(t2, s.CENTRAL_FILE_HEADER) || (this.reader.zero = n2);\n        else if (n2 < 0)\n          throw new Error(\"Corrupted zip: missing \" + Math.abs(n2) + \" bytes.\");\n      }, prepareReader: function(e2) {\n        this.reader = n(e2);\n      }, load: function(e2) {\n        this.prepareReader(e2), this.readEndOfCentral(), this.readCentralDir(), this.readLocalFiles();\n      } }, t.exports = h;\n    }, { \"./reader/readerFor\": 22, \"./signature\": 23, \"./support\": 30, \"./utils\": 32, \"./zipEntry\": 34 }], 34: [function(e, t, r) {\n      var n = e(\"./reader/readerFor\"), s = e(\"./utils\"), i = e(\"./compressedObject\"), a = e(\"./crc32\"), o = e(\"./utf8\"), h = e(\"./compressions\"), u = e(\"./support\");\n      function l(e2, t2) {\n        this.options = e2, this.loadOptions = t2;\n      }\n      l.prototype = { isEncrypted: function() {\n        return 1 == (1 & this.bitFlag);\n      }, useUTF8: function() {\n        return 2048 == (2048 & this.bitFlag);\n      }, readLocalPart: function(e2) {\n        var t2, r2;\n        if (e2.skip(22), this.fileNameLength = e2.readInt(2), r2 = e2.readInt(2), this.fileName = e2.readData(this.fileNameLength), e2.skip(r2), -1 === this.compressedSize || -1 === this.uncompressedSize)\n          throw new Error(\"Bug or corrupted zip : didn't get enough information from the central directory (compressedSize === -1 || uncompressedSize === -1)\");\n        if (null === (t2 = function(e3) {\n          for (var t3 in h)\n            if (Object.prototype.hasOwnProperty.call(h, t3) && h[t3].magic === e3)\n              return h[t3];\n          return null;\n        }(this.compressionMethod)))\n          throw new Error(\"Corrupted zip : compression \" + s.pretty(this.compressionMethod) + \" unknown (inner file : \" + s.transformTo(\"string\", this.fileName) + \")\");\n        this.decompressed = new i(this.compressedSize, this.uncompressedSize, this.crc32, t2, e2.readData(this.compressedSize));\n      }, readCentralPart: function(e2) {\n        this.versionMadeBy = e2.readInt(2), e2.skip(2), this.bitFlag = e2.readInt(2), this.compressionMethod = e2.readString(2), this.date = e2.readDate(), this.crc32 = e2.readInt(4), this.compressedSize = e2.readInt(4), this.uncompressedSize = e2.readInt(4);\n        var t2 = e2.readInt(2);\n        if (this.extraFieldsLength = e2.readInt(2), this.fileCommentLength = e2.readInt(2), this.diskNumberStart = e2.readInt(2), this.internalFileAttributes = e2.readInt(2), this.externalFileAttributes = e2.readInt(4), this.localHeaderOffset = e2.readInt(4), this.isEncrypted())\n          throw new Error(\"Encrypted zip are not supported\");\n        e2.skip(t2), this.readExtraFields(e2), this.parseZIP64ExtraField(e2), this.fileComment = e2.readData(this.fileCommentLength);\n      }, processAttributes: function() {\n        this.unixPermissions = null, this.dosPermissions = null;\n        var e2 = this.versionMadeBy >> 8;\n        this.dir = !!(16 & this.externalFileAttributes), 0 == e2 && (this.dosPermissions = 63 & this.externalFileAttributes), 3 == e2 && (this.unixPermissions = this.externalFileAttributes >> 16 & 65535), this.dir || \"/\" !== this.fileNameStr.slice(-1) || (this.dir = true);\n      }, parseZIP64ExtraField: function() {\n        if (this.extraFields[1]) {\n          var e2 = n(this.extraFields[1].value);\n          this.uncompressedSize === s.MAX_VALUE_32BITS && (this.uncompressedSize = e2.readInt(8)), this.compressedSize === s.MAX_VALUE_32BITS && (this.compressedSize = e2.readInt(8)), this.localHeaderOffset === s.MAX_VALUE_32BITS && (this.localHeaderOffset = e2.readInt(8)), this.diskNumberStart === s.MAX_VALUE_32BITS && (this.diskNumberStart = e2.readInt(4));\n        }\n      }, readExtraFields: function(e2) {\n        var t2, r2, n2, i2 = e2.index + this.extraFieldsLength;\n        for (this.extraFields || (this.extraFields = {}); e2.index + 4 < i2; )\n          t2 = e2.readInt(2), r2 = e2.readInt(2), n2 = e2.readData(r2), this.extraFields[t2] = { id: t2, length: r2, value: n2 };\n        e2.setIndex(i2);\n      }, handleUTF8: function() {\n        var e2 = u.uint8array ? \"uint8array\" : \"array\";\n        if (this.useUTF8())\n          this.fileNameStr = o.utf8decode(this.fileName), this.fileCommentStr = o.utf8decode(this.fileComment);\n        else {\n          var t2 = this.findExtraFieldUnicodePath();\n          if (null !== t2)\n            this.fileNameStr = t2;\n          else {\n            var r2 = s.transformTo(e2, this.fileName);\n            this.fileNameStr = this.loadOptions.decodeFileName(r2);\n          }\n          var n2 = this.findExtraFieldUnicodeComment();\n          if (null !== n2)\n            this.fileCommentStr = n2;\n          else {\n            var i2 = s.transformTo(e2, this.fileComment);\n            this.fileCommentStr = this.loadOptions.decodeFileName(i2);\n          }\n        }\n      }, findExtraFieldUnicodePath: function() {\n        var e2 = this.extraFields[28789];\n        if (e2) {\n          var t2 = n(e2.value);\n          return 1 !== t2.readInt(1) ? null : a(this.fileName) !== t2.readInt(4) ? null : o.utf8decode(t2.readData(e2.length - 5));\n        }\n        return null;\n      }, findExtraFieldUnicodeComment: function() {\n        var e2 = this.extraFields[25461];\n        if (e2) {\n          var t2 = n(e2.value);\n          return 1 !== t2.readInt(1) ? null : a(this.fileComment) !== t2.readInt(4) ? null : o.utf8decode(t2.readData(e2.length - 5));\n        }\n        return null;\n      } }, t.exports = l;\n    }, { \"./compressedObject\": 2, \"./compressions\": 3, \"./crc32\": 4, \"./reader/readerFor\": 22, \"./support\": 30, \"./utf8\": 31, \"./utils\": 32 }], 35: [function(e, t, r) {\n      function n(e2, t2, r2) {\n        this.name = e2, this.dir = r2.dir, this.date = r2.date, this.comment = r2.comment, this.unixPermissions = r2.unixPermissions, this.dosPermissions = r2.dosPermissions, this._data = t2, this._dataBinary = r2.binary, this.options = { compression: r2.compression, compressionOptions: r2.compressionOptions };\n      }\n      var s = e(\"./stream/StreamHelper\"), i = e(\"./stream/DataWorker\"), a = e(\"./utf8\"), o = e(\"./compressedObject\"), h = e(\"./stream/GenericWorker\");\n      n.prototype = { internalStream: function(e2) {\n        var t2 = null, r2 = \"string\";\n        try {\n          if (!e2)\n            throw new Error(\"No output type specified.\");\n          var n2 = \"string\" === (r2 = e2.toLowerCase()) || \"text\" === r2;\n          \"binarystring\" !== r2 && \"text\" !== r2 || (r2 = \"string\"), t2 = this._decompressWorker();\n          var i2 = !this._dataBinary;\n          i2 && !n2 && (t2 = t2.pipe(new a.Utf8EncodeWorker())), !i2 && n2 && (t2 = t2.pipe(new a.Utf8DecodeWorker()));\n        } catch (e3) {\n          (t2 = new h(\"error\")).error(e3);\n        }\n        return new s(t2, r2, \"\");\n      }, async: function(e2, t2) {\n        return this.internalStream(e2).accumulate(t2);\n      }, nodeStream: function(e2, t2) {\n        return this.internalStream(e2 || \"nodebuffer\").toNodejsStream(t2);\n      }, _compressWorker: function(e2, t2) {\n        if (this._data instanceof o && this._data.compression.magic === e2.magic)\n          return this._data.getCompressedWorker();\n        var r2 = this._decompressWorker();\n        return this._dataBinary || (r2 = r2.pipe(new a.Utf8EncodeWorker())), o.createWorkerFrom(r2, e2, t2);\n      }, _decompressWorker: function() {\n        return this._data instanceof o ? this._data.getContentWorker() : this._data instanceof h ? this._data : new i(this._data);\n      } };\n      for (var u = [\"asText\", \"asBinary\", \"asNodeBuffer\", \"asUint8Array\", \"asArrayBuffer\"], l = function() {\n        throw new Error(\"This method has been removed in JSZip 3.0, please check the upgrade guide.\");\n      }, f = 0; f < u.length; f++)\n        n.prototype[u[f]] = l;\n      t.exports = n;\n    }, { \"./compressedObject\": 2, \"./stream/DataWorker\": 27, \"./stream/GenericWorker\": 28, \"./stream/StreamHelper\": 29, \"./utf8\": 31 }], 36: [function(e, l, t) {\n      (function(t2) {\n        var r, n, e2 = t2.MutationObserver || t2.WebKitMutationObserver;\n        if (e2) {\n          var i = 0, s = new e2(u), a = t2.document.createTextNode(\"\");\n          s.observe(a, { characterData: true }), r = function() {\n            a.data = i = ++i % 2;\n          };\n        } else if (t2.setImmediate || void 0 === t2.MessageChannel)\n          r = \"document\" in t2 && \"onreadystatechange\" in t2.document.createElement(\"script\") ? function() {\n            var e3 = t2.document.createElement(\"script\");\n            e3.onreadystatechange = function() {\n              u(), e3.onreadystatechange = null, e3.parentNode.removeChild(e3), e3 = null;\n            }, t2.document.documentElement.appendChild(e3);\n          } : function() {\n            setTimeout(u, 0);\n          };\n        else {\n          var o = new t2.MessageChannel();\n          o.port1.onmessage = u, r = function() {\n            o.port2.postMessage(0);\n          };\n        }\n        var h = [];\n        function u() {\n          var e3, t3;\n          n = true;\n          for (var r2 = h.length; r2; ) {\n            for (t3 = h, h = [], e3 = -1; ++e3 < r2; )\n              t3[e3]();\n            r2 = h.length;\n          }\n          n = false;\n        }\n        l.exports = function(e3) {\n          1 !== h.push(e3) || n || r();\n        };\n      }).call(this, \"undefined\" != typeof commonjsGlobal ? commonjsGlobal : \"undefined\" != typeof self ? self : \"undefined\" != typeof window ? window : {});\n    }, {}], 37: [function(e, t, r) {\n      var i = e(\"immediate\");\n      function u() {\n      }\n      var l = {}, s = [\"REJECTED\"], a = [\"FULFILLED\"], n = [\"PENDING\"];\n      function o(e2) {\n        if (\"function\" != typeof e2)\n          throw new TypeError(\"resolver must be a function\");\n        this.state = n, this.queue = [], this.outcome = void 0, e2 !== u && d(this, e2);\n      }\n      function h(e2, t2, r2) {\n        this.promise = e2, \"function\" == typeof t2 && (this.onFulfilled = t2, this.callFulfilled = this.otherCallFulfilled), \"function\" == typeof r2 && (this.onRejected = r2, this.callRejected = this.otherCallRejected);\n      }\n      function f(t2, r2, n2) {\n        i(function() {\n          var e2;\n          try {\n            e2 = r2(n2);\n          } catch (e3) {\n            return l.reject(t2, e3);\n          }\n          e2 === t2 ? l.reject(t2, new TypeError(\"Cannot resolve promise with itself\")) : l.resolve(t2, e2);\n        });\n      }\n      function c(e2) {\n        var t2 = e2 && e2.then;\n        if (e2 && (\"object\" == typeof e2 || \"function\" == typeof e2) && \"function\" == typeof t2)\n          return function() {\n            t2.apply(e2, arguments);\n          };\n      }\n      function d(t2, e2) {\n        var r2 = false;\n        function n2(e3) {\n          r2 || (r2 = true, l.reject(t2, e3));\n        }\n        function i2(e3) {\n          r2 || (r2 = true, l.resolve(t2, e3));\n        }\n        var s2 = p(function() {\n          e2(i2, n2);\n        });\n        \"error\" === s2.status && n2(s2.value);\n      }\n      function p(e2, t2) {\n        var r2 = {};\n        try {\n          r2.value = e2(t2), r2.status = \"success\";\n        } catch (e3) {\n          r2.status = \"error\", r2.value = e3;\n        }\n        return r2;\n      }\n      (t.exports = o).prototype.finally = function(t2) {\n        if (\"function\" != typeof t2)\n          return this;\n        var r2 = this.constructor;\n        return this.then(function(e2) {\n          return r2.resolve(t2()).then(function() {\n            return e2;\n          });\n        }, function(e2) {\n          return r2.resolve(t2()).then(function() {\n            throw e2;\n          });\n        });\n      }, o.prototype.catch = function(e2) {\n        return this.then(null, e2);\n      }, o.prototype.then = function(e2, t2) {\n        if (\"function\" != typeof e2 && this.state === a || \"function\" != typeof t2 && this.state === s)\n          return this;\n        var r2 = new this.constructor(u);\n        this.state !== n ? f(r2, this.state === a ? e2 : t2, this.outcome) : this.queue.push(new h(r2, e2, t2));\n        return r2;\n      }, h.prototype.callFulfilled = function(e2) {\n        l.resolve(this.promise, e2);\n      }, h.prototype.otherCallFulfilled = function(e2) {\n        f(this.promise, this.onFulfilled, e2);\n      }, h.prototype.callRejected = function(e2) {\n        l.reject(this.promise, e2);\n      }, h.prototype.otherCallRejected = function(e2) {\n        f(this.promise, this.onRejected, e2);\n      }, l.resolve = function(e2, t2) {\n        var r2 = p(c, t2);\n        if (\"error\" === r2.status)\n          return l.reject(e2, r2.value);\n        var n2 = r2.value;\n        if (n2)\n          d(e2, n2);\n        else {\n          e2.state = a, e2.outcome = t2;\n          for (var i2 = -1, s2 = e2.queue.length; ++i2 < s2; )\n            e2.queue[i2].callFulfilled(t2);\n        }\n        return e2;\n      }, l.reject = function(e2, t2) {\n        e2.state = s, e2.outcome = t2;\n        for (var r2 = -1, n2 = e2.queue.length; ++r2 < n2; )\n          e2.queue[r2].callRejected(t2);\n        return e2;\n      }, o.resolve = function(e2) {\n        if (e2 instanceof this)\n          return e2;\n        return l.resolve(new this(u), e2);\n      }, o.reject = function(e2) {\n        var t2 = new this(u);\n        return l.reject(t2, e2);\n      }, o.all = function(e2) {\n        var r2 = this;\n        if (\"[object Array]\" !== Object.prototype.toString.call(e2))\n          return this.reject(new TypeError(\"must be an array\"));\n        var n2 = e2.length, i2 = false;\n        if (!n2)\n          return this.resolve([]);\n        var s2 = new Array(n2), a2 = 0, t2 = -1, o2 = new this(u);\n        for (; ++t2 < n2; )\n          h2(e2[t2], t2);\n        return o2;\n        function h2(e3, t3) {\n          r2.resolve(e3).then(function(e4) {\n            s2[t3] = e4, ++a2 !== n2 || i2 || (i2 = true, l.resolve(o2, s2));\n          }, function(e4) {\n            i2 || (i2 = true, l.reject(o2, e4));\n          });\n        }\n      }, o.race = function(e2) {\n        var t2 = this;\n        if (\"[object Array]\" !== Object.prototype.toString.call(e2))\n          return this.reject(new TypeError(\"must be an array\"));\n        var r2 = e2.length, n2 = false;\n        if (!r2)\n          return this.resolve([]);\n        var i2 = -1, s2 = new this(u);\n        for (; ++i2 < r2; )\n          a2 = e2[i2], t2.resolve(a2).then(function(e3) {\n            n2 || (n2 = true, l.resolve(s2, e3));\n          }, function(e3) {\n            n2 || (n2 = true, l.reject(s2, e3));\n          });\n        var a2;\n        return s2;\n      };\n    }, { immediate: 36 }], 38: [function(e, t, r) {\n      var n = {};\n      (0, e(\"./lib/utils/common\").assign)(n, e(\"./lib/deflate\"), e(\"./lib/inflate\"), e(\"./lib/zlib/constants\")), t.exports = n;\n    }, { \"./lib/deflate\": 39, \"./lib/inflate\": 40, \"./lib/utils/common\": 41, \"./lib/zlib/constants\": 44 }], 39: [function(e, t, r) {\n      var a = e(\"./zlib/deflate\"), o = e(\"./utils/common\"), h = e(\"./utils/strings\"), i = e(\"./zlib/messages\"), s = e(\"./zlib/zstream\"), u = Object.prototype.toString, l = 0, f = -1, c = 0, d = 8;\n      function p(e2) {\n        if (!(this instanceof p))\n          return new p(e2);\n        this.options = o.assign({ level: f, method: d, chunkSize: 16384, windowBits: 15, memLevel: 8, strategy: c, to: \"\" }, e2 || {});\n        var t2 = this.options;\n        t2.raw && 0 < t2.windowBits ? t2.windowBits = -t2.windowBits : t2.gzip && 0 < t2.windowBits && t2.windowBits < 16 && (t2.windowBits += 16), this.err = 0, this.msg = \"\", this.ended = false, this.chunks = [], this.strm = new s(), this.strm.avail_out = 0;\n        var r2 = a.deflateInit2(this.strm, t2.level, t2.method, t2.windowBits, t2.memLevel, t2.strategy);\n        if (r2 !== l)\n          throw new Error(i[r2]);\n        if (t2.header && a.deflateSetHeader(this.strm, t2.header), t2.dictionary) {\n          var n2;\n          if (n2 = \"string\" == typeof t2.dictionary ? h.string2buf(t2.dictionary) : \"[object ArrayBuffer]\" === u.call(t2.dictionary) ? new Uint8Array(t2.dictionary) : t2.dictionary, (r2 = a.deflateSetDictionary(this.strm, n2)) !== l)\n            throw new Error(i[r2]);\n          this._dict_set = true;\n        }\n      }\n      function n(e2, t2) {\n        var r2 = new p(t2);\n        if (r2.push(e2, true), r2.err)\n          throw r2.msg || i[r2.err];\n        return r2.result;\n      }\n      p.prototype.push = function(e2, t2) {\n        var r2, n2, i2 = this.strm, s2 = this.options.chunkSize;\n        if (this.ended)\n          return false;\n        n2 = t2 === ~~t2 ? t2 : true === t2 ? 4 : 0, \"string\" == typeof e2 ? i2.input = h.string2buf(e2) : \"[object ArrayBuffer]\" === u.call(e2) ? i2.input = new Uint8Array(e2) : i2.input = e2, i2.next_in = 0, i2.avail_in = i2.input.length;\n        do {\n          if (0 === i2.avail_out && (i2.output = new o.Buf8(s2), i2.next_out = 0, i2.avail_out = s2), 1 !== (r2 = a.deflate(i2, n2)) && r2 !== l)\n            return this.onEnd(r2), !(this.ended = true);\n          0 !== i2.avail_out && (0 !== i2.avail_in || 4 !== n2 && 2 !== n2) || (\"string\" === this.options.to ? this.onData(h.buf2binstring(o.shrinkBuf(i2.output, i2.next_out))) : this.onData(o.shrinkBuf(i2.output, i2.next_out)));\n        } while ((0 < i2.avail_in || 0 === i2.avail_out) && 1 !== r2);\n        return 4 === n2 ? (r2 = a.deflateEnd(this.strm), this.onEnd(r2), this.ended = true, r2 === l) : 2 !== n2 || (this.onEnd(l), !(i2.avail_out = 0));\n      }, p.prototype.onData = function(e2) {\n        this.chunks.push(e2);\n      }, p.prototype.onEnd = function(e2) {\n        e2 === l && (\"string\" === this.options.to ? this.result = this.chunks.join(\"\") : this.result = o.flattenChunks(this.chunks)), this.chunks = [], this.err = e2, this.msg = this.strm.msg;\n      }, r.Deflate = p, r.deflate = n, r.deflateRaw = function(e2, t2) {\n        return (t2 = t2 || {}).raw = true, n(e2, t2);\n      }, r.gzip = function(e2, t2) {\n        return (t2 = t2 || {}).gzip = true, n(e2, t2);\n      };\n    }, { \"./utils/common\": 41, \"./utils/strings\": 42, \"./zlib/deflate\": 46, \"./zlib/messages\": 51, \"./zlib/zstream\": 53 }], 40: [function(e, t, r) {\n      var c = e(\"./zlib/inflate\"), d = e(\"./utils/common\"), p = e(\"./utils/strings\"), m = e(\"./zlib/constants\"), n = e(\"./zlib/messages\"), i = e(\"./zlib/zstream\"), s = e(\"./zlib/gzheader\"), _ = Object.prototype.toString;\n      function a(e2) {\n        if (!(this instanceof a))\n          return new a(e2);\n        this.options = d.assign({ chunkSize: 16384, windowBits: 0, to: \"\" }, e2 || {});\n        var t2 = this.options;\n        t2.raw && 0 <= t2.windowBits && t2.windowBits < 16 && (t2.windowBits = -t2.windowBits, 0 === t2.windowBits && (t2.windowBits = -15)), !(0 <= t2.windowBits && t2.windowBits < 16) || e2 && e2.windowBits || (t2.windowBits += 32), 15 < t2.windowBits && t2.windowBits < 48 && 0 == (15 & t2.windowBits) && (t2.windowBits |= 15), this.err = 0, this.msg = \"\", this.ended = false, this.chunks = [], this.strm = new i(), this.strm.avail_out = 0;\n        var r2 = c.inflateInit2(this.strm, t2.windowBits);\n        if (r2 !== m.Z_OK)\n          throw new Error(n[r2]);\n        this.header = new s(), c.inflateGetHeader(this.strm, this.header);\n      }\n      function o(e2, t2) {\n        var r2 = new a(t2);\n        if (r2.push(e2, true), r2.err)\n          throw r2.msg || n[r2.err];\n        return r2.result;\n      }\n      a.prototype.push = function(e2, t2) {\n        var r2, n2, i2, s2, a2, o2, h = this.strm, u = this.options.chunkSize, l = this.options.dictionary, f = false;\n        if (this.ended)\n          return false;\n        n2 = t2 === ~~t2 ? t2 : true === t2 ? m.Z_FINISH : m.Z_NO_FLUSH, \"string\" == typeof e2 ? h.input = p.binstring2buf(e2) : \"[object ArrayBuffer]\" === _.call(e2) ? h.input = new Uint8Array(e2) : h.input = e2, h.next_in = 0, h.avail_in = h.input.length;\n        do {\n          if (0 === h.avail_out && (h.output = new d.Buf8(u), h.next_out = 0, h.avail_out = u), (r2 = c.inflate(h, m.Z_NO_FLUSH)) === m.Z_NEED_DICT && l && (o2 = \"string\" == typeof l ? p.string2buf(l) : \"[object ArrayBuffer]\" === _.call(l) ? new Uint8Array(l) : l, r2 = c.inflateSetDictionary(this.strm, o2)), r2 === m.Z_BUF_ERROR && true === f && (r2 = m.Z_OK, f = false), r2 !== m.Z_STREAM_END && r2 !== m.Z_OK)\n            return this.onEnd(r2), !(this.ended = true);\n          h.next_out && (0 !== h.avail_out && r2 !== m.Z_STREAM_END && (0 !== h.avail_in || n2 !== m.Z_FINISH && n2 !== m.Z_SYNC_FLUSH) || (\"string\" === this.options.to ? (i2 = p.utf8border(h.output, h.next_out), s2 = h.next_out - i2, a2 = p.buf2string(h.output, i2), h.next_out = s2, h.avail_out = u - s2, s2 && d.arraySet(h.output, h.output, i2, s2, 0), this.onData(a2)) : this.onData(d.shrinkBuf(h.output, h.next_out)))), 0 === h.avail_in && 0 === h.avail_out && (f = true);\n        } while ((0 < h.avail_in || 0 === h.avail_out) && r2 !== m.Z_STREAM_END);\n        return r2 === m.Z_STREAM_END && (n2 = m.Z_FINISH), n2 === m.Z_FINISH ? (r2 = c.inflateEnd(this.strm), this.onEnd(r2), this.ended = true, r2 === m.Z_OK) : n2 !== m.Z_SYNC_FLUSH || (this.onEnd(m.Z_OK), !(h.avail_out = 0));\n      }, a.prototype.onData = function(e2) {\n        this.chunks.push(e2);\n      }, a.prototype.onEnd = function(e2) {\n        e2 === m.Z_OK && (\"string\" === this.options.to ? this.result = this.chunks.join(\"\") : this.result = d.flattenChunks(this.chunks)), this.chunks = [], this.err = e2, this.msg = this.strm.msg;\n      }, r.Inflate = a, r.inflate = o, r.inflateRaw = function(e2, t2) {\n        return (t2 = t2 || {}).raw = true, o(e2, t2);\n      }, r.ungzip = o;\n    }, { \"./utils/common\": 41, \"./utils/strings\": 42, \"./zlib/constants\": 44, \"./zlib/gzheader\": 47, \"./zlib/inflate\": 49, \"./zlib/messages\": 51, \"./zlib/zstream\": 53 }], 41: [function(e, t, r) {\n      var n = \"undefined\" != typeof Uint8Array && \"undefined\" != typeof Uint16Array && \"undefined\" != typeof Int32Array;\n      r.assign = function(e2) {\n        for (var t2 = Array.prototype.slice.call(arguments, 1); t2.length; ) {\n          var r2 = t2.shift();\n          if (r2) {\n            if (\"object\" != typeof r2)\n              throw new TypeError(r2 + \"must be non-object\");\n            for (var n2 in r2)\n              r2.hasOwnProperty(n2) && (e2[n2] = r2[n2]);\n          }\n        }\n        return e2;\n      }, r.shrinkBuf = function(e2, t2) {\n        return e2.length === t2 ? e2 : e2.subarray ? e2.subarray(0, t2) : (e2.length = t2, e2);\n      };\n      var i = { arraySet: function(e2, t2, r2, n2, i2) {\n        if (t2.subarray && e2.subarray)\n          e2.set(t2.subarray(r2, r2 + n2), i2);\n        else\n          for (var s2 = 0; s2 < n2; s2++)\n            e2[i2 + s2] = t2[r2 + s2];\n      }, flattenChunks: function(e2) {\n        var t2, r2, n2, i2, s2, a;\n        for (t2 = n2 = 0, r2 = e2.length; t2 < r2; t2++)\n          n2 += e2[t2].length;\n        for (a = new Uint8Array(n2), t2 = i2 = 0, r2 = e2.length; t2 < r2; t2++)\n          s2 = e2[t2], a.set(s2, i2), i2 += s2.length;\n        return a;\n      } }, s = { arraySet: function(e2, t2, r2, n2, i2) {\n        for (var s2 = 0; s2 < n2; s2++)\n          e2[i2 + s2] = t2[r2 + s2];\n      }, flattenChunks: function(e2) {\n        return [].concat.apply([], e2);\n      } };\n      r.setTyped = function(e2) {\n        e2 ? (r.Buf8 = Uint8Array, r.Buf16 = Uint16Array, r.Buf32 = Int32Array, r.assign(r, i)) : (r.Buf8 = Array, r.Buf16 = Array, r.Buf32 = Array, r.assign(r, s));\n      }, r.setTyped(n);\n    }, {}], 42: [function(e, t, r) {\n      var h = e(\"./common\"), i = true, s = true;\n      try {\n        String.fromCharCode.apply(null, [0]);\n      } catch (e2) {\n        i = false;\n      }\n      try {\n        String.fromCharCode.apply(null, new Uint8Array(1));\n      } catch (e2) {\n        s = false;\n      }\n      for (var u = new h.Buf8(256), n = 0; n < 256; n++)\n        u[n] = 252 <= n ? 6 : 248 <= n ? 5 : 240 <= n ? 4 : 224 <= n ? 3 : 192 <= n ? 2 : 1;\n      function l(e2, t2) {\n        if (t2 < 65537 && (e2.subarray && s || !e2.subarray && i))\n          return String.fromCharCode.apply(null, h.shrinkBuf(e2, t2));\n        for (var r2 = \"\", n2 = 0; n2 < t2; n2++)\n          r2 += String.fromCharCode(e2[n2]);\n        return r2;\n      }\n      u[254] = u[254] = 1, r.string2buf = function(e2) {\n        var t2, r2, n2, i2, s2, a = e2.length, o = 0;\n        for (i2 = 0; i2 < a; i2++)\n          55296 == (64512 & (r2 = e2.charCodeAt(i2))) && i2 + 1 < a && 56320 == (64512 & (n2 = e2.charCodeAt(i2 + 1))) && (r2 = 65536 + (r2 - 55296 << 10) + (n2 - 56320), i2++), o += r2 < 128 ? 1 : r2 < 2048 ? 2 : r2 < 65536 ? 3 : 4;\n        for (t2 = new h.Buf8(o), i2 = s2 = 0; s2 < o; i2++)\n          55296 == (64512 & (r2 = e2.charCodeAt(i2))) && i2 + 1 < a && 56320 == (64512 & (n2 = e2.charCodeAt(i2 + 1))) && (r2 = 65536 + (r2 - 55296 << 10) + (n2 - 56320), i2++), r2 < 128 ? t2[s2++] = r2 : (r2 < 2048 ? t2[s2++] = 192 | r2 >>> 6 : (r2 < 65536 ? t2[s2++] = 224 | r2 >>> 12 : (t2[s2++] = 240 | r2 >>> 18, t2[s2++] = 128 | r2 >>> 12 & 63), t2[s2++] = 128 | r2 >>> 6 & 63), t2[s2++] = 128 | 63 & r2);\n        return t2;\n      }, r.buf2binstring = function(e2) {\n        return l(e2, e2.length);\n      }, r.binstring2buf = function(e2) {\n        for (var t2 = new h.Buf8(e2.length), r2 = 0, n2 = t2.length; r2 < n2; r2++)\n          t2[r2] = e2.charCodeAt(r2);\n        return t2;\n      }, r.buf2string = function(e2, t2) {\n        var r2, n2, i2, s2, a = t2 || e2.length, o = new Array(2 * a);\n        for (r2 = n2 = 0; r2 < a; )\n          if ((i2 = e2[r2++]) < 128)\n            o[n2++] = i2;\n          else if (4 < (s2 = u[i2]))\n            o[n2++] = 65533, r2 += s2 - 1;\n          else {\n            for (i2 &= 2 === s2 ? 31 : 3 === s2 ? 15 : 7; 1 < s2 && r2 < a; )\n              i2 = i2 << 6 | 63 & e2[r2++], s2--;\n            1 < s2 ? o[n2++] = 65533 : i2 < 65536 ? o[n2++] = i2 : (i2 -= 65536, o[n2++] = 55296 | i2 >> 10 & 1023, o[n2++] = 56320 | 1023 & i2);\n          }\n        return l(o, n2);\n      }, r.utf8border = function(e2, t2) {\n        var r2;\n        for ((t2 = t2 || e2.length) > e2.length && (t2 = e2.length), r2 = t2 - 1; 0 <= r2 && 128 == (192 & e2[r2]); )\n          r2--;\n        return r2 < 0 ? t2 : 0 === r2 ? t2 : r2 + u[e2[r2]] > t2 ? r2 : t2;\n      };\n    }, { \"./common\": 41 }], 43: [function(e, t, r) {\n      t.exports = function(e2, t2, r2, n) {\n        for (var i = 65535 & e2 | 0, s = e2 >>> 16 & 65535 | 0, a = 0; 0 !== r2; ) {\n          for (r2 -= a = 2e3 < r2 ? 2e3 : r2; s = s + (i = i + t2[n++] | 0) | 0, --a; )\n            ;\n          i %= 65521, s %= 65521;\n        }\n        return i | s << 16 | 0;\n      };\n    }, {}], 44: [function(e, t, r) {\n      t.exports = { Z_NO_FLUSH: 0, Z_PARTIAL_FLUSH: 1, Z_SYNC_FLUSH: 2, Z_FULL_FLUSH: 3, Z_FINISH: 4, Z_BLOCK: 5, Z_TREES: 6, Z_OK: 0, Z_STREAM_END: 1, Z_NEED_DICT: 2, Z_ERRNO: -1, Z_STREAM_ERROR: -2, Z_DATA_ERROR: -3, Z_BUF_ERROR: -5, Z_NO_COMPRESSION: 0, Z_BEST_SPEED: 1, Z_BEST_COMPRESSION: 9, Z_DEFAULT_COMPRESSION: -1, Z_FILTERED: 1, Z_HUFFMAN_ONLY: 2, Z_RLE: 3, Z_FIXED: 4, Z_DEFAULT_STRATEGY: 0, Z_BINARY: 0, Z_TEXT: 1, Z_UNKNOWN: 2, Z_DEFLATED: 8 };\n    }, {}], 45: [function(e, t, r) {\n      var o = function() {\n        for (var e2, t2 = [], r2 = 0; r2 < 256; r2++) {\n          e2 = r2;\n          for (var n = 0; n < 8; n++)\n            e2 = 1 & e2 ? 3988292384 ^ e2 >>> 1 : e2 >>> 1;\n          t2[r2] = e2;\n        }\n        return t2;\n      }();\n      t.exports = function(e2, t2, r2, n) {\n        var i = o, s = n + r2;\n        e2 ^= -1;\n        for (var a = n; a < s; a++)\n          e2 = e2 >>> 8 ^ i[255 & (e2 ^ t2[a])];\n        return -1 ^ e2;\n      };\n    }, {}], 46: [function(e, t, r) {\n      var h, c = e(\"../utils/common\"), u = e(\"./trees\"), d = e(\"./adler32\"), p = e(\"./crc32\"), n = e(\"./messages\"), l = 0, f = 4, m = 0, _ = -2, g = -1, b = 4, i = 2, v = 8, y = 9, s = 286, a = 30, o = 19, w = 2 * s + 1, k = 15, x = 3, S = 258, z = S + x + 1, C = 42, E = 113, A = 1, I = 2, O = 3, B = 4;\n      function R(e2, t2) {\n        return e2.msg = n[t2], t2;\n      }\n      function T(e2) {\n        return (e2 << 1) - (4 < e2 ? 9 : 0);\n      }\n      function D(e2) {\n        for (var t2 = e2.length; 0 <= --t2; )\n          e2[t2] = 0;\n      }\n      function F(e2) {\n        var t2 = e2.state, r2 = t2.pending;\n        r2 > e2.avail_out && (r2 = e2.avail_out), 0 !== r2 && (c.arraySet(e2.output, t2.pending_buf, t2.pending_out, r2, e2.next_out), e2.next_out += r2, t2.pending_out += r2, e2.total_out += r2, e2.avail_out -= r2, t2.pending -= r2, 0 === t2.pending && (t2.pending_out = 0));\n      }\n      function N(e2, t2) {\n        u._tr_flush_block(e2, 0 <= e2.block_start ? e2.block_start : -1, e2.strstart - e2.block_start, t2), e2.block_start = e2.strstart, F(e2.strm);\n      }\n      function U(e2, t2) {\n        e2.pending_buf[e2.pending++] = t2;\n      }\n      function P(e2, t2) {\n        e2.pending_buf[e2.pending++] = t2 >>> 8 & 255, e2.pending_buf[e2.pending++] = 255 & t2;\n      }\n      function L(e2, t2) {\n        var r2, n2, i2 = e2.max_chain_length, s2 = e2.strstart, a2 = e2.prev_length, o2 = e2.nice_match, h2 = e2.strstart > e2.w_size - z ? e2.strstart - (e2.w_size - z) : 0, u2 = e2.window, l2 = e2.w_mask, f2 = e2.prev, c2 = e2.strstart + S, d2 = u2[s2 + a2 - 1], p2 = u2[s2 + a2];\n        e2.prev_length >= e2.good_match && (i2 >>= 2), o2 > e2.lookahead && (o2 = e2.lookahead);\n        do {\n          if (u2[(r2 = t2) + a2] === p2 && u2[r2 + a2 - 1] === d2 && u2[r2] === u2[s2] && u2[++r2] === u2[s2 + 1]) {\n            s2 += 2, r2++;\n            do {\n            } while (u2[++s2] === u2[++r2] && u2[++s2] === u2[++r2] && u2[++s2] === u2[++r2] && u2[++s2] === u2[++r2] && u2[++s2] === u2[++r2] && u2[++s2] === u2[++r2] && u2[++s2] === u2[++r2] && u2[++s2] === u2[++r2] && s2 < c2);\n            if (n2 = S - (c2 - s2), s2 = c2 - S, a2 < n2) {\n              if (e2.match_start = t2, o2 <= (a2 = n2))\n                break;\n              d2 = u2[s2 + a2 - 1], p2 = u2[s2 + a2];\n            }\n          }\n        } while ((t2 = f2[t2 & l2]) > h2 && 0 != --i2);\n        return a2 <= e2.lookahead ? a2 : e2.lookahead;\n      }\n      function j(e2) {\n        var t2, r2, n2, i2, s2, a2, o2, h2, u2, l2, f2 = e2.w_size;\n        do {\n          if (i2 = e2.window_size - e2.lookahead - e2.strstart, e2.strstart >= f2 + (f2 - z)) {\n            for (c.arraySet(e2.window, e2.window, f2, f2, 0), e2.match_start -= f2, e2.strstart -= f2, e2.block_start -= f2, t2 = r2 = e2.hash_size; n2 = e2.head[--t2], e2.head[t2] = f2 <= n2 ? n2 - f2 : 0, --r2; )\n              ;\n            for (t2 = r2 = f2; n2 = e2.prev[--t2], e2.prev[t2] = f2 <= n2 ? n2 - f2 : 0, --r2; )\n              ;\n            i2 += f2;\n          }\n          if (0 === e2.strm.avail_in)\n            break;\n          if (a2 = e2.strm, o2 = e2.window, h2 = e2.strstart + e2.lookahead, u2 = i2, l2 = void 0, l2 = a2.avail_in, u2 < l2 && (l2 = u2), r2 = 0 === l2 ? 0 : (a2.avail_in -= l2, c.arraySet(o2, a2.input, a2.next_in, l2, h2), 1 === a2.state.wrap ? a2.adler = d(a2.adler, o2, l2, h2) : 2 === a2.state.wrap && (a2.adler = p(a2.adler, o2, l2, h2)), a2.next_in += l2, a2.total_in += l2, l2), e2.lookahead += r2, e2.lookahead + e2.insert >= x)\n            for (s2 = e2.strstart - e2.insert, e2.ins_h = e2.window[s2], e2.ins_h = (e2.ins_h << e2.hash_shift ^ e2.window[s2 + 1]) & e2.hash_mask; e2.insert && (e2.ins_h = (e2.ins_h << e2.hash_shift ^ e2.window[s2 + x - 1]) & e2.hash_mask, e2.prev[s2 & e2.w_mask] = e2.head[e2.ins_h], e2.head[e2.ins_h] = s2, s2++, e2.insert--, !(e2.lookahead + e2.insert < x)); )\n              ;\n        } while (e2.lookahead < z && 0 !== e2.strm.avail_in);\n      }\n      function Z(e2, t2) {\n        for (var r2, n2; ; ) {\n          if (e2.lookahead < z) {\n            if (j(e2), e2.lookahead < z && t2 === l)\n              return A;\n            if (0 === e2.lookahead)\n              break;\n          }\n          if (r2 = 0, e2.lookahead >= x && (e2.ins_h = (e2.ins_h << e2.hash_shift ^ e2.window[e2.strstart + x - 1]) & e2.hash_mask, r2 = e2.prev[e2.strstart & e2.w_mask] = e2.head[e2.ins_h], e2.head[e2.ins_h] = e2.strstart), 0 !== r2 && e2.strstart - r2 <= e2.w_size - z && (e2.match_length = L(e2, r2)), e2.match_length >= x)\n            if (n2 = u._tr_tally(e2, e2.strstart - e2.match_start, e2.match_length - x), e2.lookahead -= e2.match_length, e2.match_length <= e2.max_lazy_match && e2.lookahead >= x) {\n              for (e2.match_length--; e2.strstart++, e2.ins_h = (e2.ins_h << e2.hash_shift ^ e2.window[e2.strstart + x - 1]) & e2.hash_mask, r2 = e2.prev[e2.strstart & e2.w_mask] = e2.head[e2.ins_h], e2.head[e2.ins_h] = e2.strstart, 0 != --e2.match_length; )\n                ;\n              e2.strstart++;\n            } else\n              e2.strstart += e2.match_length, e2.match_length = 0, e2.ins_h = e2.window[e2.strstart], e2.ins_h = (e2.ins_h << e2.hash_shift ^ e2.window[e2.strstart + 1]) & e2.hash_mask;\n          else\n            n2 = u._tr_tally(e2, 0, e2.window[e2.strstart]), e2.lookahead--, e2.strstart++;\n          if (n2 && (N(e2, false), 0 === e2.strm.avail_out))\n            return A;\n        }\n        return e2.insert = e2.strstart < x - 1 ? e2.strstart : x - 1, t2 === f ? (N(e2, true), 0 === e2.strm.avail_out ? O : B) : e2.last_lit && (N(e2, false), 0 === e2.strm.avail_out) ? A : I;\n      }\n      function W(e2, t2) {\n        for (var r2, n2, i2; ; ) {\n          if (e2.lookahead < z) {\n            if (j(e2), e2.lookahead < z && t2 === l)\n              return A;\n            if (0 === e2.lookahead)\n              break;\n          }\n          if (r2 = 0, e2.lookahead >= x && (e2.ins_h = (e2.ins_h << e2.hash_shift ^ e2.window[e2.strstart + x - 1]) & e2.hash_mask, r2 = e2.prev[e2.strstart & e2.w_mask] = e2.head[e2.ins_h], e2.head[e2.ins_h] = e2.strstart), e2.prev_length = e2.match_length, e2.prev_match = e2.match_start, e2.match_length = x - 1, 0 !== r2 && e2.prev_length < e2.max_lazy_match && e2.strstart - r2 <= e2.w_size - z && (e2.match_length = L(e2, r2), e2.match_length <= 5 && (1 === e2.strategy || e2.match_length === x && 4096 < e2.strstart - e2.match_start) && (e2.match_length = x - 1)), e2.prev_length >= x && e2.match_length <= e2.prev_length) {\n            for (i2 = e2.strstart + e2.lookahead - x, n2 = u._tr_tally(e2, e2.strstart - 1 - e2.prev_match, e2.prev_length - x), e2.lookahead -= e2.prev_length - 1, e2.prev_length -= 2; ++e2.strstart <= i2 && (e2.ins_h = (e2.ins_h << e2.hash_shift ^ e2.window[e2.strstart + x - 1]) & e2.hash_mask, r2 = e2.prev[e2.strstart & e2.w_mask] = e2.head[e2.ins_h], e2.head[e2.ins_h] = e2.strstart), 0 != --e2.prev_length; )\n              ;\n            if (e2.match_available = 0, e2.match_length = x - 1, e2.strstart++, n2 && (N(e2, false), 0 === e2.strm.avail_out))\n              return A;\n          } else if (e2.match_available) {\n            if ((n2 = u._tr_tally(e2, 0, e2.window[e2.strstart - 1])) && N(e2, false), e2.strstart++, e2.lookahead--, 0 === e2.strm.avail_out)\n              return A;\n          } else\n            e2.match_available = 1, e2.strstart++, e2.lookahead--;\n        }\n        return e2.match_available && (n2 = u._tr_tally(e2, 0, e2.window[e2.strstart - 1]), e2.match_available = 0), e2.insert = e2.strstart < x - 1 ? e2.strstart : x - 1, t2 === f ? (N(e2, true), 0 === e2.strm.avail_out ? O : B) : e2.last_lit && (N(e2, false), 0 === e2.strm.avail_out) ? A : I;\n      }\n      function M(e2, t2, r2, n2, i2) {\n        this.good_length = e2, this.max_lazy = t2, this.nice_length = r2, this.max_chain = n2, this.func = i2;\n      }\n      function H() {\n        this.strm = null, this.status = 0, this.pending_buf = null, this.pending_buf_size = 0, this.pending_out = 0, this.pending = 0, this.wrap = 0, this.gzhead = null, this.gzindex = 0, this.method = v, this.last_flush = -1, this.w_size = 0, this.w_bits = 0, this.w_mask = 0, this.window = null, this.window_size = 0, this.prev = null, this.head = null, this.ins_h = 0, this.hash_size = 0, this.hash_bits = 0, this.hash_mask = 0, this.hash_shift = 0, this.block_start = 0, this.match_length = 0, this.prev_match = 0, this.match_available = 0, this.strstart = 0, this.match_start = 0, this.lookahead = 0, this.prev_length = 0, this.max_chain_length = 0, this.max_lazy_match = 0, this.level = 0, this.strategy = 0, this.good_match = 0, this.nice_match = 0, this.dyn_ltree = new c.Buf16(2 * w), this.dyn_dtree = new c.Buf16(2 * (2 * a + 1)), this.bl_tree = new c.Buf16(2 * (2 * o + 1)), D(this.dyn_ltree), D(this.dyn_dtree), D(this.bl_tree), this.l_desc = null, this.d_desc = null, this.bl_desc = null, this.bl_count = new c.Buf16(k + 1), this.heap = new c.Buf16(2 * s + 1), D(this.heap), this.heap_len = 0, this.heap_max = 0, this.depth = new c.Buf16(2 * s + 1), D(this.depth), this.l_buf = 0, this.lit_bufsize = 0, this.last_lit = 0, this.d_buf = 0, this.opt_len = 0, this.static_len = 0, this.matches = 0, this.insert = 0, this.bi_buf = 0, this.bi_valid = 0;\n      }\n      function G(e2) {\n        var t2;\n        return e2 && e2.state ? (e2.total_in = e2.total_out = 0, e2.data_type = i, (t2 = e2.state).pending = 0, t2.pending_out = 0, t2.wrap < 0 && (t2.wrap = -t2.wrap), t2.status = t2.wrap ? C : E, e2.adler = 2 === t2.wrap ? 0 : 1, t2.last_flush = l, u._tr_init(t2), m) : R(e2, _);\n      }\n      function K(e2) {\n        var t2 = G(e2);\n        return t2 === m && function(e3) {\n          e3.window_size = 2 * e3.w_size, D(e3.head), e3.max_lazy_match = h[e3.level].max_lazy, e3.good_match = h[e3.level].good_length, e3.nice_match = h[e3.level].nice_length, e3.max_chain_length = h[e3.level].max_chain, e3.strstart = 0, e3.block_start = 0, e3.lookahead = 0, e3.insert = 0, e3.match_length = e3.prev_length = x - 1, e3.match_available = 0, e3.ins_h = 0;\n        }(e2.state), t2;\n      }\n      function Y(e2, t2, r2, n2, i2, s2) {\n        if (!e2)\n          return _;\n        var a2 = 1;\n        if (t2 === g && (t2 = 6), n2 < 0 ? (a2 = 0, n2 = -n2) : 15 < n2 && (a2 = 2, n2 -= 16), i2 < 1 || y < i2 || r2 !== v || n2 < 8 || 15 < n2 || t2 < 0 || 9 < t2 || s2 < 0 || b < s2)\n          return R(e2, _);\n        8 === n2 && (n2 = 9);\n        var o2 = new H();\n        return (e2.state = o2).strm = e2, o2.wrap = a2, o2.gzhead = null, o2.w_bits = n2, o2.w_size = 1 << o2.w_bits, o2.w_mask = o2.w_size - 1, o2.hash_bits = i2 + 7, o2.hash_size = 1 << o2.hash_bits, o2.hash_mask = o2.hash_size - 1, o2.hash_shift = ~~((o2.hash_bits + x - 1) / x), o2.window = new c.Buf8(2 * o2.w_size), o2.head = new c.Buf16(o2.hash_size), o2.prev = new c.Buf16(o2.w_size), o2.lit_bufsize = 1 << i2 + 6, o2.pending_buf_size = 4 * o2.lit_bufsize, o2.pending_buf = new c.Buf8(o2.pending_buf_size), o2.d_buf = 1 * o2.lit_bufsize, o2.l_buf = 3 * o2.lit_bufsize, o2.level = t2, o2.strategy = s2, o2.method = r2, K(e2);\n      }\n      h = [new M(0, 0, 0, 0, function(e2, t2) {\n        var r2 = 65535;\n        for (r2 > e2.pending_buf_size - 5 && (r2 = e2.pending_buf_size - 5); ; ) {\n          if (e2.lookahead <= 1) {\n            if (j(e2), 0 === e2.lookahead && t2 === l)\n              return A;\n            if (0 === e2.lookahead)\n              break;\n          }\n          e2.strstart += e2.lookahead, e2.lookahead = 0;\n          var n2 = e2.block_start + r2;\n          if ((0 === e2.strstart || e2.strstart >= n2) && (e2.lookahead = e2.strstart - n2, e2.strstart = n2, N(e2, false), 0 === e2.strm.avail_out))\n            return A;\n          if (e2.strstart - e2.block_start >= e2.w_size - z && (N(e2, false), 0 === e2.strm.avail_out))\n            return A;\n        }\n        return e2.insert = 0, t2 === f ? (N(e2, true), 0 === e2.strm.avail_out ? O : B) : (e2.strstart > e2.block_start && (N(e2, false), e2.strm.avail_out), A);\n      }), new M(4, 4, 8, 4, Z), new M(4, 5, 16, 8, Z), new M(4, 6, 32, 32, Z), new M(4, 4, 16, 16, W), new M(8, 16, 32, 32, W), new M(8, 16, 128, 128, W), new M(8, 32, 128, 256, W), new M(32, 128, 258, 1024, W), new M(32, 258, 258, 4096, W)], r.deflateInit = function(e2, t2) {\n        return Y(e2, t2, v, 15, 8, 0);\n      }, r.deflateInit2 = Y, r.deflateReset = K, r.deflateResetKeep = G, r.deflateSetHeader = function(e2, t2) {\n        return e2 && e2.state ? 2 !== e2.state.wrap ? _ : (e2.state.gzhead = t2, m) : _;\n      }, r.deflate = function(e2, t2) {\n        var r2, n2, i2, s2;\n        if (!e2 || !e2.state || 5 < t2 || t2 < 0)\n          return e2 ? R(e2, _) : _;\n        if (n2 = e2.state, !e2.output || !e2.input && 0 !== e2.avail_in || 666 === n2.status && t2 !== f)\n          return R(e2, 0 === e2.avail_out ? -5 : _);\n        if (n2.strm = e2, r2 = n2.last_flush, n2.last_flush = t2, n2.status === C)\n          if (2 === n2.wrap)\n            e2.adler = 0, U(n2, 31), U(n2, 139), U(n2, 8), n2.gzhead ? (U(n2, (n2.gzhead.text ? 1 : 0) + (n2.gzhead.hcrc ? 2 : 0) + (n2.gzhead.extra ? 4 : 0) + (n2.gzhead.name ? 8 : 0) + (n2.gzhead.comment ? 16 : 0)), U(n2, 255 & n2.gzhead.time), U(n2, n2.gzhead.time >> 8 & 255), U(n2, n2.gzhead.time >> 16 & 255), U(n2, n2.gzhead.time >> 24 & 255), U(n2, 9 === n2.level ? 2 : 2 <= n2.strategy || n2.level < 2 ? 4 : 0), U(n2, 255 & n2.gzhead.os), n2.gzhead.extra && n2.gzhead.extra.length && (U(n2, 255 & n2.gzhead.extra.length), U(n2, n2.gzhead.extra.length >> 8 & 255)), n2.gzhead.hcrc && (e2.adler = p(e2.adler, n2.pending_buf, n2.pending, 0)), n2.gzindex = 0, n2.status = 69) : (U(n2, 0), U(n2, 0), U(n2, 0), U(n2, 0), U(n2, 0), U(n2, 9 === n2.level ? 2 : 2 <= n2.strategy || n2.level < 2 ? 4 : 0), U(n2, 3), n2.status = E);\n          else {\n            var a2 = v + (n2.w_bits - 8 << 4) << 8;\n            a2 |= (2 <= n2.strategy || n2.level < 2 ? 0 : n2.level < 6 ? 1 : 6 === n2.level ? 2 : 3) << 6, 0 !== n2.strstart && (a2 |= 32), a2 += 31 - a2 % 31, n2.status = E, P(n2, a2), 0 !== n2.strstart && (P(n2, e2.adler >>> 16), P(n2, 65535 & e2.adler)), e2.adler = 1;\n          }\n        if (69 === n2.status)\n          if (n2.gzhead.extra) {\n            for (i2 = n2.pending; n2.gzindex < (65535 & n2.gzhead.extra.length) && (n2.pending !== n2.pending_buf_size || (n2.gzhead.hcrc && n2.pending > i2 && (e2.adler = p(e2.adler, n2.pending_buf, n2.pending - i2, i2)), F(e2), i2 = n2.pending, n2.pending !== n2.pending_buf_size)); )\n              U(n2, 255 & n2.gzhead.extra[n2.gzindex]), n2.gzindex++;\n            n2.gzhead.hcrc && n2.pending > i2 && (e2.adler = p(e2.adler, n2.pending_buf, n2.pending - i2, i2)), n2.gzindex === n2.gzhead.extra.length && (n2.gzindex = 0, n2.status = 73);\n          } else\n            n2.status = 73;\n        if (73 === n2.status)\n          if (n2.gzhead.name) {\n            i2 = n2.pending;\n            do {\n              if (n2.pending === n2.pending_buf_size && (n2.gzhead.hcrc && n2.pending > i2 && (e2.adler = p(e2.adler, n2.pending_buf, n2.pending - i2, i2)), F(e2), i2 = n2.pending, n2.pending === n2.pending_buf_size)) {\n                s2 = 1;\n                break;\n              }\n              s2 = n2.gzindex < n2.gzhead.name.length ? 255 & n2.gzhead.name.charCodeAt(n2.gzindex++) : 0, U(n2, s2);\n            } while (0 !== s2);\n            n2.gzhead.hcrc && n2.pending > i2 && (e2.adler = p(e2.adler, n2.pending_buf, n2.pending - i2, i2)), 0 === s2 && (n2.gzindex = 0, n2.status = 91);\n          } else\n            n2.status = 91;\n        if (91 === n2.status)\n          if (n2.gzhead.comment) {\n            i2 = n2.pending;\n            do {\n              if (n2.pending === n2.pending_buf_size && (n2.gzhead.hcrc && n2.pending > i2 && (e2.adler = p(e2.adler, n2.pending_buf, n2.pending - i2, i2)), F(e2), i2 = n2.pending, n2.pending === n2.pending_buf_size)) {\n                s2 = 1;\n                break;\n              }\n              s2 = n2.gzindex < n2.gzhead.comment.length ? 255 & n2.gzhead.comment.charCodeAt(n2.gzindex++) : 0, U(n2, s2);\n            } while (0 !== s2);\n            n2.gzhead.hcrc && n2.pending > i2 && (e2.adler = p(e2.adler, n2.pending_buf, n2.pending - i2, i2)), 0 === s2 && (n2.status = 103);\n          } else\n            n2.status = 103;\n        if (103 === n2.status && (n2.gzhead.hcrc ? (n2.pending + 2 > n2.pending_buf_size && F(e2), n2.pending + 2 <= n2.pending_buf_size && (U(n2, 255 & e2.adler), U(n2, e2.adler >> 8 & 255), e2.adler = 0, n2.status = E)) : n2.status = E), 0 !== n2.pending) {\n          if (F(e2), 0 === e2.avail_out)\n            return n2.last_flush = -1, m;\n        } else if (0 === e2.avail_in && T(t2) <= T(r2) && t2 !== f)\n          return R(e2, -5);\n        if (666 === n2.status && 0 !== e2.avail_in)\n          return R(e2, -5);\n        if (0 !== e2.avail_in || 0 !== n2.lookahead || t2 !== l && 666 !== n2.status) {\n          var o2 = 2 === n2.strategy ? function(e3, t3) {\n            for (var r3; ; ) {\n              if (0 === e3.lookahead && (j(e3), 0 === e3.lookahead)) {\n                if (t3 === l)\n                  return A;\n                break;\n              }\n              if (e3.match_length = 0, r3 = u._tr_tally(e3, 0, e3.window[e3.strstart]), e3.lookahead--, e3.strstart++, r3 && (N(e3, false), 0 === e3.strm.avail_out))\n                return A;\n            }\n            return e3.insert = 0, t3 === f ? (N(e3, true), 0 === e3.strm.avail_out ? O : B) : e3.last_lit && (N(e3, false), 0 === e3.strm.avail_out) ? A : I;\n          }(n2, t2) : 3 === n2.strategy ? function(e3, t3) {\n            for (var r3, n3, i3, s3, a3 = e3.window; ; ) {\n              if (e3.lookahead <= S) {\n                if (j(e3), e3.lookahead <= S && t3 === l)\n                  return A;\n                if (0 === e3.lookahead)\n                  break;\n              }\n              if (e3.match_length = 0, e3.lookahead >= x && 0 < e3.strstart && (n3 = a3[i3 = e3.strstart - 1]) === a3[++i3] && n3 === a3[++i3] && n3 === a3[++i3]) {\n                s3 = e3.strstart + S;\n                do {\n                } while (n3 === a3[++i3] && n3 === a3[++i3] && n3 === a3[++i3] && n3 === a3[++i3] && n3 === a3[++i3] && n3 === a3[++i3] && n3 === a3[++i3] && n3 === a3[++i3] && i3 < s3);\n                e3.match_length = S - (s3 - i3), e3.match_length > e3.lookahead && (e3.match_length = e3.lookahead);\n              }\n              if (e3.match_length >= x ? (r3 = u._tr_tally(e3, 1, e3.match_length - x), e3.lookahead -= e3.match_length, e3.strstart += e3.match_length, e3.match_length = 0) : (r3 = u._tr_tally(e3, 0, e3.window[e3.strstart]), e3.lookahead--, e3.strstart++), r3 && (N(e3, false), 0 === e3.strm.avail_out))\n                return A;\n            }\n            return e3.insert = 0, t3 === f ? (N(e3, true), 0 === e3.strm.avail_out ? O : B) : e3.last_lit && (N(e3, false), 0 === e3.strm.avail_out) ? A : I;\n          }(n2, t2) : h[n2.level].func(n2, t2);\n          if (o2 !== O && o2 !== B || (n2.status = 666), o2 === A || o2 === O)\n            return 0 === e2.avail_out && (n2.last_flush = -1), m;\n          if (o2 === I && (1 === t2 ? u._tr_align(n2) : 5 !== t2 && (u._tr_stored_block(n2, 0, 0, false), 3 === t2 && (D(n2.head), 0 === n2.lookahead && (n2.strstart = 0, n2.block_start = 0, n2.insert = 0))), F(e2), 0 === e2.avail_out))\n            return n2.last_flush = -1, m;\n        }\n        return t2 !== f ? m : n2.wrap <= 0 ? 1 : (2 === n2.wrap ? (U(n2, 255 & e2.adler), U(n2, e2.adler >> 8 & 255), U(n2, e2.adler >> 16 & 255), U(n2, e2.adler >> 24 & 255), U(n2, 255 & e2.total_in), U(n2, e2.total_in >> 8 & 255), U(n2, e2.total_in >> 16 & 255), U(n2, e2.total_in >> 24 & 255)) : (P(n2, e2.adler >>> 16), P(n2, 65535 & e2.adler)), F(e2), 0 < n2.wrap && (n2.wrap = -n2.wrap), 0 !== n2.pending ? m : 1);\n      }, r.deflateEnd = function(e2) {\n        var t2;\n        return e2 && e2.state ? (t2 = e2.state.status) !== C && 69 !== t2 && 73 !== t2 && 91 !== t2 && 103 !== t2 && t2 !== E && 666 !== t2 ? R(e2, _) : (e2.state = null, t2 === E ? R(e2, -3) : m) : _;\n      }, r.deflateSetDictionary = function(e2, t2) {\n        var r2, n2, i2, s2, a2, o2, h2, u2, l2 = t2.length;\n        if (!e2 || !e2.state)\n          return _;\n        if (2 === (s2 = (r2 = e2.state).wrap) || 1 === s2 && r2.status !== C || r2.lookahead)\n          return _;\n        for (1 === s2 && (e2.adler = d(e2.adler, t2, l2, 0)), r2.wrap = 0, l2 >= r2.w_size && (0 === s2 && (D(r2.head), r2.strstart = 0, r2.block_start = 0, r2.insert = 0), u2 = new c.Buf8(r2.w_size), c.arraySet(u2, t2, l2 - r2.w_size, r2.w_size, 0), t2 = u2, l2 = r2.w_size), a2 = e2.avail_in, o2 = e2.next_in, h2 = e2.input, e2.avail_in = l2, e2.next_in = 0, e2.input = t2, j(r2); r2.lookahead >= x; ) {\n          for (n2 = r2.strstart, i2 = r2.lookahead - (x - 1); r2.ins_h = (r2.ins_h << r2.hash_shift ^ r2.window[n2 + x - 1]) & r2.hash_mask, r2.prev[n2 & r2.w_mask] = r2.head[r2.ins_h], r2.head[r2.ins_h] = n2, n2++, --i2; )\n            ;\n          r2.strstart = n2, r2.lookahead = x - 1, j(r2);\n        }\n        return r2.strstart += r2.lookahead, r2.block_start = r2.strstart, r2.insert = r2.lookahead, r2.lookahead = 0, r2.match_length = r2.prev_length = x - 1, r2.match_available = 0, e2.next_in = o2, e2.input = h2, e2.avail_in = a2, r2.wrap = s2, m;\n      }, r.deflateInfo = \"pako deflate (from Nodeca project)\";\n    }, { \"../utils/common\": 41, \"./adler32\": 43, \"./crc32\": 45, \"./messages\": 51, \"./trees\": 52 }], 47: [function(e, t, r) {\n      t.exports = function() {\n        this.text = 0, this.time = 0, this.xflags = 0, this.os = 0, this.extra = null, this.extra_len = 0, this.name = \"\", this.comment = \"\", this.hcrc = 0, this.done = false;\n      };\n    }, {}], 48: [function(e, t, r) {\n      t.exports = function(e2, t2) {\n        var r2, n, i, s, a, o, h, u, l, f, c, d, p, m, _, g, b, v, y, w, k, x, S, z, C;\n        r2 = e2.state, n = e2.next_in, z = e2.input, i = n + (e2.avail_in - 5), s = e2.next_out, C = e2.output, a = s - (t2 - e2.avail_out), o = s + (e2.avail_out - 257), h = r2.dmax, u = r2.wsize, l = r2.whave, f = r2.wnext, c = r2.window, d = r2.hold, p = r2.bits, m = r2.lencode, _ = r2.distcode, g = (1 << r2.lenbits) - 1, b = (1 << r2.distbits) - 1;\n        e:\n          do {\n            p < 15 && (d += z[n++] << p, p += 8, d += z[n++] << p, p += 8), v = m[d & g];\n            t:\n              for (; ; ) {\n                if (d >>>= y = v >>> 24, p -= y, 0 === (y = v >>> 16 & 255))\n                  C[s++] = 65535 & v;\n                else {\n                  if (!(16 & y)) {\n                    if (0 == (64 & y)) {\n                      v = m[(65535 & v) + (d & (1 << y) - 1)];\n                      continue t;\n                    }\n                    if (32 & y) {\n                      r2.mode = 12;\n                      break e;\n                    }\n                    e2.msg = \"invalid literal/length code\", r2.mode = 30;\n                    break e;\n                  }\n                  w = 65535 & v, (y &= 15) && (p < y && (d += z[n++] << p, p += 8), w += d & (1 << y) - 1, d >>>= y, p -= y), p < 15 && (d += z[n++] << p, p += 8, d += z[n++] << p, p += 8), v = _[d & b];\n                  r:\n                    for (; ; ) {\n                      if (d >>>= y = v >>> 24, p -= y, !(16 & (y = v >>> 16 & 255))) {\n                        if (0 == (64 & y)) {\n                          v = _[(65535 & v) + (d & (1 << y) - 1)];\n                          continue r;\n                        }\n                        e2.msg = \"invalid distance code\", r2.mode = 30;\n                        break e;\n                      }\n                      if (k = 65535 & v, p < (y &= 15) && (d += z[n++] << p, (p += 8) < y && (d += z[n++] << p, p += 8)), h < (k += d & (1 << y) - 1)) {\n                        e2.msg = \"invalid distance too far back\", r2.mode = 30;\n                        break e;\n                      }\n                      if (d >>>= y, p -= y, (y = s - a) < k) {\n                        if (l < (y = k - y) && r2.sane) {\n                          e2.msg = \"invalid distance too far back\", r2.mode = 30;\n                          break e;\n                        }\n                        if (S = c, (x = 0) === f) {\n                          if (x += u - y, y < w) {\n                            for (w -= y; C[s++] = c[x++], --y; )\n                              ;\n                            x = s - k, S = C;\n                          }\n                        } else if (f < y) {\n                          if (x += u + f - y, (y -= f) < w) {\n                            for (w -= y; C[s++] = c[x++], --y; )\n                              ;\n                            if (x = 0, f < w) {\n                              for (w -= y = f; C[s++] = c[x++], --y; )\n                                ;\n                              x = s - k, S = C;\n                            }\n                          }\n                        } else if (x += f - y, y < w) {\n                          for (w -= y; C[s++] = c[x++], --y; )\n                            ;\n                          x = s - k, S = C;\n                        }\n                        for (; 2 < w; )\n                          C[s++] = S[x++], C[s++] = S[x++], C[s++] = S[x++], w -= 3;\n                        w && (C[s++] = S[x++], 1 < w && (C[s++] = S[x++]));\n                      } else {\n                        for (x = s - k; C[s++] = C[x++], C[s++] = C[x++], C[s++] = C[x++], 2 < (w -= 3); )\n                          ;\n                        w && (C[s++] = C[x++], 1 < w && (C[s++] = C[x++]));\n                      }\n                      break;\n                    }\n                }\n                break;\n              }\n          } while (n < i && s < o);\n        n -= w = p >> 3, d &= (1 << (p -= w << 3)) - 1, e2.next_in = n, e2.next_out = s, e2.avail_in = n < i ? i - n + 5 : 5 - (n - i), e2.avail_out = s < o ? o - s + 257 : 257 - (s - o), r2.hold = d, r2.bits = p;\n      };\n    }, {}], 49: [function(e, t, r) {\n      var I = e(\"../utils/common\"), O = e(\"./adler32\"), B = e(\"./crc32\"), R = e(\"./inffast\"), T = e(\"./inftrees\"), D = 1, F = 2, N = 0, U = -2, P = 1, n = 852, i = 592;\n      function L(e2) {\n        return (e2 >>> 24 & 255) + (e2 >>> 8 & 65280) + ((65280 & e2) << 8) + ((255 & e2) << 24);\n      }\n      function s() {\n        this.mode = 0, this.last = false, this.wrap = 0, this.havedict = false, this.flags = 0, this.dmax = 0, this.check = 0, this.total = 0, this.head = null, this.wbits = 0, this.wsize = 0, this.whave = 0, this.wnext = 0, this.window = null, this.hold = 0, this.bits = 0, this.length = 0, this.offset = 0, this.extra = 0, this.lencode = null, this.distcode = null, this.lenbits = 0, this.distbits = 0, this.ncode = 0, this.nlen = 0, this.ndist = 0, this.have = 0, this.next = null, this.lens = new I.Buf16(320), this.work = new I.Buf16(288), this.lendyn = null, this.distdyn = null, this.sane = 0, this.back = 0, this.was = 0;\n      }\n      function a(e2) {\n        var t2;\n        return e2 && e2.state ? (t2 = e2.state, e2.total_in = e2.total_out = t2.total = 0, e2.msg = \"\", t2.wrap && (e2.adler = 1 & t2.wrap), t2.mode = P, t2.last = 0, t2.havedict = 0, t2.dmax = 32768, t2.head = null, t2.hold = 0, t2.bits = 0, t2.lencode = t2.lendyn = new I.Buf32(n), t2.distcode = t2.distdyn = new I.Buf32(i), t2.sane = 1, t2.back = -1, N) : U;\n      }\n      function o(e2) {\n        var t2;\n        return e2 && e2.state ? ((t2 = e2.state).wsize = 0, t2.whave = 0, t2.wnext = 0, a(e2)) : U;\n      }\n      function h(e2, t2) {\n        var r2, n2;\n        return e2 && e2.state ? (n2 = e2.state, t2 < 0 ? (r2 = 0, t2 = -t2) : (r2 = 1 + (t2 >> 4), t2 < 48 && (t2 &= 15)), t2 && (t2 < 8 || 15 < t2) ? U : (null !== n2.window && n2.wbits !== t2 && (n2.window = null), n2.wrap = r2, n2.wbits = t2, o(e2))) : U;\n      }\n      function u(e2, t2) {\n        var r2, n2;\n        return e2 ? (n2 = new s(), (e2.state = n2).window = null, (r2 = h(e2, t2)) !== N && (e2.state = null), r2) : U;\n      }\n      var l, f, c = true;\n      function j(e2) {\n        if (c) {\n          var t2;\n          for (l = new I.Buf32(512), f = new I.Buf32(32), t2 = 0; t2 < 144; )\n            e2.lens[t2++] = 8;\n          for (; t2 < 256; )\n            e2.lens[t2++] = 9;\n          for (; t2 < 280; )\n            e2.lens[t2++] = 7;\n          for (; t2 < 288; )\n            e2.lens[t2++] = 8;\n          for (T(D, e2.lens, 0, 288, l, 0, e2.work, { bits: 9 }), t2 = 0; t2 < 32; )\n            e2.lens[t2++] = 5;\n          T(F, e2.lens, 0, 32, f, 0, e2.work, { bits: 5 }), c = false;\n        }\n        e2.lencode = l, e2.lenbits = 9, e2.distcode = f, e2.distbits = 5;\n      }\n      function Z(e2, t2, r2, n2) {\n        var i2, s2 = e2.state;\n        return null === s2.window && (s2.wsize = 1 << s2.wbits, s2.wnext = 0, s2.whave = 0, s2.window = new I.Buf8(s2.wsize)), n2 >= s2.wsize ? (I.arraySet(s2.window, t2, r2 - s2.wsize, s2.wsize, 0), s2.wnext = 0, s2.whave = s2.wsize) : (n2 < (i2 = s2.wsize - s2.wnext) && (i2 = n2), I.arraySet(s2.window, t2, r2 - n2, i2, s2.wnext), (n2 -= i2) ? (I.arraySet(s2.window, t2, r2 - n2, n2, 0), s2.wnext = n2, s2.whave = s2.wsize) : (s2.wnext += i2, s2.wnext === s2.wsize && (s2.wnext = 0), s2.whave < s2.wsize && (s2.whave += i2))), 0;\n      }\n      r.inflateReset = o, r.inflateReset2 = h, r.inflateResetKeep = a, r.inflateInit = function(e2) {\n        return u(e2, 15);\n      }, r.inflateInit2 = u, r.inflate = function(e2, t2) {\n        var r2, n2, i2, s2, a2, o2, h2, u2, l2, f2, c2, d, p, m, _, g, b, v, y, w, k, x, S, z, C = 0, E = new I.Buf8(4), A = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];\n        if (!e2 || !e2.state || !e2.output || !e2.input && 0 !== e2.avail_in)\n          return U;\n        12 === (r2 = e2.state).mode && (r2.mode = 13), a2 = e2.next_out, i2 = e2.output, h2 = e2.avail_out, s2 = e2.next_in, n2 = e2.input, o2 = e2.avail_in, u2 = r2.hold, l2 = r2.bits, f2 = o2, c2 = h2, x = N;\n        e:\n          for (; ; )\n            switch (r2.mode) {\n              case P:\n                if (0 === r2.wrap) {\n                  r2.mode = 13;\n                  break;\n                }\n                for (; l2 < 16; ) {\n                  if (0 === o2)\n                    break e;\n                  o2--, u2 += n2[s2++] << l2, l2 += 8;\n                }\n                if (2 & r2.wrap && 35615 === u2) {\n                  E[r2.check = 0] = 255 & u2, E[1] = u2 >>> 8 & 255, r2.check = B(r2.check, E, 2, 0), l2 = u2 = 0, r2.mode = 2;\n                  break;\n                }\n                if (r2.flags = 0, r2.head && (r2.head.done = false), !(1 & r2.wrap) || (((255 & u2) << 8) + (u2 >> 8)) % 31) {\n                  e2.msg = \"incorrect header check\", r2.mode = 30;\n                  break;\n                }\n                if (8 != (15 & u2)) {\n                  e2.msg = \"unknown compression method\", r2.mode = 30;\n                  break;\n                }\n                if (l2 -= 4, k = 8 + (15 & (u2 >>>= 4)), 0 === r2.wbits)\n                  r2.wbits = k;\n                else if (k > r2.wbits) {\n                  e2.msg = \"invalid window size\", r2.mode = 30;\n                  break;\n                }\n                r2.dmax = 1 << k, e2.adler = r2.check = 1, r2.mode = 512 & u2 ? 10 : 12, l2 = u2 = 0;\n                break;\n              case 2:\n                for (; l2 < 16; ) {\n                  if (0 === o2)\n                    break e;\n                  o2--, u2 += n2[s2++] << l2, l2 += 8;\n                }\n                if (r2.flags = u2, 8 != (255 & r2.flags)) {\n                  e2.msg = \"unknown compression method\", r2.mode = 30;\n                  break;\n                }\n                if (57344 & r2.flags) {\n                  e2.msg = \"unknown header flags set\", r2.mode = 30;\n                  break;\n                }\n                r2.head && (r2.head.text = u2 >> 8 & 1), 512 & r2.flags && (E[0] = 255 & u2, E[1] = u2 >>> 8 & 255, r2.check = B(r2.check, E, 2, 0)), l2 = u2 = 0, r2.mode = 3;\n              case 3:\n                for (; l2 < 32; ) {\n                  if (0 === o2)\n                    break e;\n                  o2--, u2 += n2[s2++] << l2, l2 += 8;\n                }\n                r2.head && (r2.head.time = u2), 512 & r2.flags && (E[0] = 255 & u2, E[1] = u2 >>> 8 & 255, E[2] = u2 >>> 16 & 255, E[3] = u2 >>> 24 & 255, r2.check = B(r2.check, E, 4, 0)), l2 = u2 = 0, r2.mode = 4;\n              case 4:\n                for (; l2 < 16; ) {\n                  if (0 === o2)\n                    break e;\n                  o2--, u2 += n2[s2++] << l2, l2 += 8;\n                }\n                r2.head && (r2.head.xflags = 255 & u2, r2.head.os = u2 >> 8), 512 & r2.flags && (E[0] = 255 & u2, E[1] = u2 >>> 8 & 255, r2.check = B(r2.check, E, 2, 0)), l2 = u2 = 0, r2.mode = 5;\n              case 5:\n                if (1024 & r2.flags) {\n                  for (; l2 < 16; ) {\n                    if (0 === o2)\n                      break e;\n                    o2--, u2 += n2[s2++] << l2, l2 += 8;\n                  }\n                  r2.length = u2, r2.head && (r2.head.extra_len = u2), 512 & r2.flags && (E[0] = 255 & u2, E[1] = u2 >>> 8 & 255, r2.check = B(r2.check, E, 2, 0)), l2 = u2 = 0;\n                } else\n                  r2.head && (r2.head.extra = null);\n                r2.mode = 6;\n              case 6:\n                if (1024 & r2.flags && (o2 < (d = r2.length) && (d = o2), d && (r2.head && (k = r2.head.extra_len - r2.length, r2.head.extra || (r2.head.extra = new Array(r2.head.extra_len)), I.arraySet(r2.head.extra, n2, s2, d, k)), 512 & r2.flags && (r2.check = B(r2.check, n2, d, s2)), o2 -= d, s2 += d, r2.length -= d), r2.length))\n                  break e;\n                r2.length = 0, r2.mode = 7;\n              case 7:\n                if (2048 & r2.flags) {\n                  if (0 === o2)\n                    break e;\n                  for (d = 0; k = n2[s2 + d++], r2.head && k && r2.length < 65536 && (r2.head.name += String.fromCharCode(k)), k && d < o2; )\n                    ;\n                  if (512 & r2.flags && (r2.check = B(r2.check, n2, d, s2)), o2 -= d, s2 += d, k)\n                    break e;\n                } else\n                  r2.head && (r2.head.name = null);\n                r2.length = 0, r2.mode = 8;\n              case 8:\n                if (4096 & r2.flags) {\n                  if (0 === o2)\n                    break e;\n                  for (d = 0; k = n2[s2 + d++], r2.head && k && r2.length < 65536 && (r2.head.comment += String.fromCharCode(k)), k && d < o2; )\n                    ;\n                  if (512 & r2.flags && (r2.check = B(r2.check, n2, d, s2)), o2 -= d, s2 += d, k)\n                    break e;\n                } else\n                  r2.head && (r2.head.comment = null);\n                r2.mode = 9;\n              case 9:\n                if (512 & r2.flags) {\n                  for (; l2 < 16; ) {\n                    if (0 === o2)\n                      break e;\n                    o2--, u2 += n2[s2++] << l2, l2 += 8;\n                  }\n                  if (u2 !== (65535 & r2.check)) {\n                    e2.msg = \"header crc mismatch\", r2.mode = 30;\n                    break;\n                  }\n                  l2 = u2 = 0;\n                }\n                r2.head && (r2.head.hcrc = r2.flags >> 9 & 1, r2.head.done = true), e2.adler = r2.check = 0, r2.mode = 12;\n                break;\n              case 10:\n                for (; l2 < 32; ) {\n                  if (0 === o2)\n                    break e;\n                  o2--, u2 += n2[s2++] << l2, l2 += 8;\n                }\n                e2.adler = r2.check = L(u2), l2 = u2 = 0, r2.mode = 11;\n              case 11:\n                if (0 === r2.havedict)\n                  return e2.next_out = a2, e2.avail_out = h2, e2.next_in = s2, e2.avail_in = o2, r2.hold = u2, r2.bits = l2, 2;\n                e2.adler = r2.check = 1, r2.mode = 12;\n              case 12:\n                if (5 === t2 || 6 === t2)\n                  break e;\n              case 13:\n                if (r2.last) {\n                  u2 >>>= 7 & l2, l2 -= 7 & l2, r2.mode = 27;\n                  break;\n                }\n                for (; l2 < 3; ) {\n                  if (0 === o2)\n                    break e;\n                  o2--, u2 += n2[s2++] << l2, l2 += 8;\n                }\n                switch (r2.last = 1 & u2, l2 -= 1, 3 & (u2 >>>= 1)) {\n                  case 0:\n                    r2.mode = 14;\n                    break;\n                  case 1:\n                    if (j(r2), r2.mode = 20, 6 !== t2)\n                      break;\n                    u2 >>>= 2, l2 -= 2;\n                    break e;\n                  case 2:\n                    r2.mode = 17;\n                    break;\n                  case 3:\n                    e2.msg = \"invalid block type\", r2.mode = 30;\n                }\n                u2 >>>= 2, l2 -= 2;\n                break;\n              case 14:\n                for (u2 >>>= 7 & l2, l2 -= 7 & l2; l2 < 32; ) {\n                  if (0 === o2)\n                    break e;\n                  o2--, u2 += n2[s2++] << l2, l2 += 8;\n                }\n                if ((65535 & u2) != (u2 >>> 16 ^ 65535)) {\n                  e2.msg = \"invalid stored block lengths\", r2.mode = 30;\n                  break;\n                }\n                if (r2.length = 65535 & u2, l2 = u2 = 0, r2.mode = 15, 6 === t2)\n                  break e;\n              case 15:\n                r2.mode = 16;\n              case 16:\n                if (d = r2.length) {\n                  if (o2 < d && (d = o2), h2 < d && (d = h2), 0 === d)\n                    break e;\n                  I.arraySet(i2, n2, s2, d, a2), o2 -= d, s2 += d, h2 -= d, a2 += d, r2.length -= d;\n                  break;\n                }\n                r2.mode = 12;\n                break;\n              case 17:\n                for (; l2 < 14; ) {\n                  if (0 === o2)\n                    break e;\n                  o2--, u2 += n2[s2++] << l2, l2 += 8;\n                }\n                if (r2.nlen = 257 + (31 & u2), u2 >>>= 5, l2 -= 5, r2.ndist = 1 + (31 & u2), u2 >>>= 5, l2 -= 5, r2.ncode = 4 + (15 & u2), u2 >>>= 4, l2 -= 4, 286 < r2.nlen || 30 < r2.ndist) {\n                  e2.msg = \"too many length or distance symbols\", r2.mode = 30;\n                  break;\n                }\n                r2.have = 0, r2.mode = 18;\n              case 18:\n                for (; r2.have < r2.ncode; ) {\n                  for (; l2 < 3; ) {\n                    if (0 === o2)\n                      break e;\n                    o2--, u2 += n2[s2++] << l2, l2 += 8;\n                  }\n                  r2.lens[A[r2.have++]] = 7 & u2, u2 >>>= 3, l2 -= 3;\n                }\n                for (; r2.have < 19; )\n                  r2.lens[A[r2.have++]] = 0;\n                if (r2.lencode = r2.lendyn, r2.lenbits = 7, S = { bits: r2.lenbits }, x = T(0, r2.lens, 0, 19, r2.lencode, 0, r2.work, S), r2.lenbits = S.bits, x) {\n                  e2.msg = \"invalid code lengths set\", r2.mode = 30;\n                  break;\n                }\n                r2.have = 0, r2.mode = 19;\n              case 19:\n                for (; r2.have < r2.nlen + r2.ndist; ) {\n                  for (; g = (C = r2.lencode[u2 & (1 << r2.lenbits) - 1]) >>> 16 & 255, b = 65535 & C, !((_ = C >>> 24) <= l2); ) {\n                    if (0 === o2)\n                      break e;\n                    o2--, u2 += n2[s2++] << l2, l2 += 8;\n                  }\n                  if (b < 16)\n                    u2 >>>= _, l2 -= _, r2.lens[r2.have++] = b;\n                  else {\n                    if (16 === b) {\n                      for (z = _ + 2; l2 < z; ) {\n                        if (0 === o2)\n                          break e;\n                        o2--, u2 += n2[s2++] << l2, l2 += 8;\n                      }\n                      if (u2 >>>= _, l2 -= _, 0 === r2.have) {\n                        e2.msg = \"invalid bit length repeat\", r2.mode = 30;\n                        break;\n                      }\n                      k = r2.lens[r2.have - 1], d = 3 + (3 & u2), u2 >>>= 2, l2 -= 2;\n                    } else if (17 === b) {\n                      for (z = _ + 3; l2 < z; ) {\n                        if (0 === o2)\n                          break e;\n                        o2--, u2 += n2[s2++] << l2, l2 += 8;\n                      }\n                      l2 -= _, k = 0, d = 3 + (7 & (u2 >>>= _)), u2 >>>= 3, l2 -= 3;\n                    } else {\n                      for (z = _ + 7; l2 < z; ) {\n                        if (0 === o2)\n                          break e;\n                        o2--, u2 += n2[s2++] << l2, l2 += 8;\n                      }\n                      l2 -= _, k = 0, d = 11 + (127 & (u2 >>>= _)), u2 >>>= 7, l2 -= 7;\n                    }\n                    if (r2.have + d > r2.nlen + r2.ndist) {\n                      e2.msg = \"invalid bit length repeat\", r2.mode = 30;\n                      break;\n                    }\n                    for (; d--; )\n                      r2.lens[r2.have++] = k;\n                  }\n                }\n                if (30 === r2.mode)\n                  break;\n                if (0 === r2.lens[256]) {\n                  e2.msg = \"invalid code -- missing end-of-block\", r2.mode = 30;\n                  break;\n                }\n                if (r2.lenbits = 9, S = { bits: r2.lenbits }, x = T(D, r2.lens, 0, r2.nlen, r2.lencode, 0, r2.work, S), r2.lenbits = S.bits, x) {\n                  e2.msg = \"invalid literal/lengths set\", r2.mode = 30;\n                  break;\n                }\n                if (r2.distbits = 6, r2.distcode = r2.distdyn, S = { bits: r2.distbits }, x = T(F, r2.lens, r2.nlen, r2.ndist, r2.distcode, 0, r2.work, S), r2.distbits = S.bits, x) {\n                  e2.msg = \"invalid distances set\", r2.mode = 30;\n                  break;\n                }\n                if (r2.mode = 20, 6 === t2)\n                  break e;\n              case 20:\n                r2.mode = 21;\n              case 21:\n                if (6 <= o2 && 258 <= h2) {\n                  e2.next_out = a2, e2.avail_out = h2, e2.next_in = s2, e2.avail_in = o2, r2.hold = u2, r2.bits = l2, R(e2, c2), a2 = e2.next_out, i2 = e2.output, h2 = e2.avail_out, s2 = e2.next_in, n2 = e2.input, o2 = e2.avail_in, u2 = r2.hold, l2 = r2.bits, 12 === r2.mode && (r2.back = -1);\n                  break;\n                }\n                for (r2.back = 0; g = (C = r2.lencode[u2 & (1 << r2.lenbits) - 1]) >>> 16 & 255, b = 65535 & C, !((_ = C >>> 24) <= l2); ) {\n                  if (0 === o2)\n                    break e;\n                  o2--, u2 += n2[s2++] << l2, l2 += 8;\n                }\n                if (g && 0 == (240 & g)) {\n                  for (v = _, y = g, w = b; g = (C = r2.lencode[w + ((u2 & (1 << v + y) - 1) >> v)]) >>> 16 & 255, b = 65535 & C, !(v + (_ = C >>> 24) <= l2); ) {\n                    if (0 === o2)\n                      break e;\n                    o2--, u2 += n2[s2++] << l2, l2 += 8;\n                  }\n                  u2 >>>= v, l2 -= v, r2.back += v;\n                }\n                if (u2 >>>= _, l2 -= _, r2.back += _, r2.length = b, 0 === g) {\n                  r2.mode = 26;\n                  break;\n                }\n                if (32 & g) {\n                  r2.back = -1, r2.mode = 12;\n                  break;\n                }\n                if (64 & g) {\n                  e2.msg = \"invalid literal/length code\", r2.mode = 30;\n                  break;\n                }\n                r2.extra = 15 & g, r2.mode = 22;\n              case 22:\n                if (r2.extra) {\n                  for (z = r2.extra; l2 < z; ) {\n                    if (0 === o2)\n                      break e;\n                    o2--, u2 += n2[s2++] << l2, l2 += 8;\n                  }\n                  r2.length += u2 & (1 << r2.extra) - 1, u2 >>>= r2.extra, l2 -= r2.extra, r2.back += r2.extra;\n                }\n                r2.was = r2.length, r2.mode = 23;\n              case 23:\n                for (; g = (C = r2.distcode[u2 & (1 << r2.distbits) - 1]) >>> 16 & 255, b = 65535 & C, !((_ = C >>> 24) <= l2); ) {\n                  if (0 === o2)\n                    break e;\n                  o2--, u2 += n2[s2++] << l2, l2 += 8;\n                }\n                if (0 == (240 & g)) {\n                  for (v = _, y = g, w = b; g = (C = r2.distcode[w + ((u2 & (1 << v + y) - 1) >> v)]) >>> 16 & 255, b = 65535 & C, !(v + (_ = C >>> 24) <= l2); ) {\n                    if (0 === o2)\n                      break e;\n                    o2--, u2 += n2[s2++] << l2, l2 += 8;\n                  }\n                  u2 >>>= v, l2 -= v, r2.back += v;\n                }\n                if (u2 >>>= _, l2 -= _, r2.back += _, 64 & g) {\n                  e2.msg = \"invalid distance code\", r2.mode = 30;\n                  break;\n                }\n                r2.offset = b, r2.extra = 15 & g, r2.mode = 24;\n              case 24:\n                if (r2.extra) {\n                  for (z = r2.extra; l2 < z; ) {\n                    if (0 === o2)\n                      break e;\n                    o2--, u2 += n2[s2++] << l2, l2 += 8;\n                  }\n                  r2.offset += u2 & (1 << r2.extra) - 1, u2 >>>= r2.extra, l2 -= r2.extra, r2.back += r2.extra;\n                }\n                if (r2.offset > r2.dmax) {\n                  e2.msg = \"invalid distance too far back\", r2.mode = 30;\n                  break;\n                }\n                r2.mode = 25;\n              case 25:\n                if (0 === h2)\n                  break e;\n                if (d = c2 - h2, r2.offset > d) {\n                  if ((d = r2.offset - d) > r2.whave && r2.sane) {\n                    e2.msg = \"invalid distance too far back\", r2.mode = 30;\n                    break;\n                  }\n                  p = d > r2.wnext ? (d -= r2.wnext, r2.wsize - d) : r2.wnext - d, d > r2.length && (d = r2.length), m = r2.window;\n                } else\n                  m = i2, p = a2 - r2.offset, d = r2.length;\n                for (h2 < d && (d = h2), h2 -= d, r2.length -= d; i2[a2++] = m[p++], --d; )\n                  ;\n                0 === r2.length && (r2.mode = 21);\n                break;\n              case 26:\n                if (0 === h2)\n                  break e;\n                i2[a2++] = r2.length, h2--, r2.mode = 21;\n                break;\n              case 27:\n                if (r2.wrap) {\n                  for (; l2 < 32; ) {\n                    if (0 === o2)\n                      break e;\n                    o2--, u2 |= n2[s2++] << l2, l2 += 8;\n                  }\n                  if (c2 -= h2, e2.total_out += c2, r2.total += c2, c2 && (e2.adler = r2.check = r2.flags ? B(r2.check, i2, c2, a2 - c2) : O(r2.check, i2, c2, a2 - c2)), c2 = h2, (r2.flags ? u2 : L(u2)) !== r2.check) {\n                    e2.msg = \"incorrect data check\", r2.mode = 30;\n                    break;\n                  }\n                  l2 = u2 = 0;\n                }\n                r2.mode = 28;\n              case 28:\n                if (r2.wrap && r2.flags) {\n                  for (; l2 < 32; ) {\n                    if (0 === o2)\n                      break e;\n                    o2--, u2 += n2[s2++] << l2, l2 += 8;\n                  }\n                  if (u2 !== (4294967295 & r2.total)) {\n                    e2.msg = \"incorrect length check\", r2.mode = 30;\n                    break;\n                  }\n                  l2 = u2 = 0;\n                }\n                r2.mode = 29;\n              case 29:\n                x = 1;\n                break e;\n              case 30:\n                x = -3;\n                break e;\n              case 31:\n                return -4;\n              case 32:\n              default:\n                return U;\n            }\n        return e2.next_out = a2, e2.avail_out = h2, e2.next_in = s2, e2.avail_in = o2, r2.hold = u2, r2.bits = l2, (r2.wsize || c2 !== e2.avail_out && r2.mode < 30 && (r2.mode < 27 || 4 !== t2)) && Z(e2, e2.output, e2.next_out, c2 - e2.avail_out) ? (r2.mode = 31, -4) : (f2 -= e2.avail_in, c2 -= e2.avail_out, e2.total_in += f2, e2.total_out += c2, r2.total += c2, r2.wrap && c2 && (e2.adler = r2.check = r2.flags ? B(r2.check, i2, c2, e2.next_out - c2) : O(r2.check, i2, c2, e2.next_out - c2)), e2.data_type = r2.bits + (r2.last ? 64 : 0) + (12 === r2.mode ? 128 : 0) + (20 === r2.mode || 15 === r2.mode ? 256 : 0), (0 == f2 && 0 === c2 || 4 === t2) && x === N && (x = -5), x);\n      }, r.inflateEnd = function(e2) {\n        if (!e2 || !e2.state)\n          return U;\n        var t2 = e2.state;\n        return t2.window && (t2.window = null), e2.state = null, N;\n      }, r.inflateGetHeader = function(e2, t2) {\n        var r2;\n        return e2 && e2.state ? 0 == (2 & (r2 = e2.state).wrap) ? U : ((r2.head = t2).done = false, N) : U;\n      }, r.inflateSetDictionary = function(e2, t2) {\n        var r2, n2 = t2.length;\n        return e2 && e2.state ? 0 !== (r2 = e2.state).wrap && 11 !== r2.mode ? U : 11 === r2.mode && O(1, t2, n2, 0) !== r2.check ? -3 : Z(e2, t2, n2, n2) ? (r2.mode = 31, -4) : (r2.havedict = 1, N) : U;\n      }, r.inflateInfo = \"pako inflate (from Nodeca project)\";\n    }, { \"../utils/common\": 41, \"./adler32\": 43, \"./crc32\": 45, \"./inffast\": 48, \"./inftrees\": 50 }], 50: [function(e, t, r) {\n      var D = e(\"../utils/common\"), F = [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0], N = [16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18, 19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78], U = [1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577, 0, 0], P = [16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22, 23, 23, 24, 24, 25, 25, 26, 26, 27, 27, 28, 28, 29, 29, 64, 64];\n      t.exports = function(e2, t2, r2, n, i, s, a, o) {\n        var h, u, l, f, c, d, p, m, _, g = o.bits, b = 0, v = 0, y = 0, w = 0, k = 0, x = 0, S = 0, z = 0, C = 0, E = 0, A = null, I = 0, O = new D.Buf16(16), B = new D.Buf16(16), R = null, T = 0;\n        for (b = 0; b <= 15; b++)\n          O[b] = 0;\n        for (v = 0; v < n; v++)\n          O[t2[r2 + v]]++;\n        for (k = g, w = 15; 1 <= w && 0 === O[w]; w--)\n          ;\n        if (w < k && (k = w), 0 === w)\n          return i[s++] = 20971520, i[s++] = 20971520, o.bits = 1, 0;\n        for (y = 1; y < w && 0 === O[y]; y++)\n          ;\n        for (k < y && (k = y), b = z = 1; b <= 15; b++)\n          if (z <<= 1, (z -= O[b]) < 0)\n            return -1;\n        if (0 < z && (0 === e2 || 1 !== w))\n          return -1;\n        for (B[1] = 0, b = 1; b < 15; b++)\n          B[b + 1] = B[b] + O[b];\n        for (v = 0; v < n; v++)\n          0 !== t2[r2 + v] && (a[B[t2[r2 + v]]++] = v);\n        if (d = 0 === e2 ? (A = R = a, 19) : 1 === e2 ? (A = F, I -= 257, R = N, T -= 257, 256) : (A = U, R = P, -1), b = y, c = s, S = v = E = 0, l = -1, f = (C = 1 << (x = k)) - 1, 1 === e2 && 852 < C || 2 === e2 && 592 < C)\n          return 1;\n        for (; ; ) {\n          for (p = b - S, _ = a[v] < d ? (m = 0, a[v]) : a[v] > d ? (m = R[T + a[v]], A[I + a[v]]) : (m = 96, 0), h = 1 << b - S, y = u = 1 << x; i[c + (E >> S) + (u -= h)] = p << 24 | m << 16 | _ | 0, 0 !== u; )\n            ;\n          for (h = 1 << b - 1; E & h; )\n            h >>= 1;\n          if (0 !== h ? (E &= h - 1, E += h) : E = 0, v++, 0 == --O[b]) {\n            if (b === w)\n              break;\n            b = t2[r2 + a[v]];\n          }\n          if (k < b && (E & f) !== l) {\n            for (0 === S && (S = k), c += y, z = 1 << (x = b - S); x + S < w && !((z -= O[x + S]) <= 0); )\n              x++, z <<= 1;\n            if (C += 1 << x, 1 === e2 && 852 < C || 2 === e2 && 592 < C)\n              return 1;\n            i[l = E & f] = k << 24 | x << 16 | c - s | 0;\n          }\n        }\n        return 0 !== E && (i[c + E] = b - S << 24 | 64 << 16 | 0), o.bits = k, 0;\n      };\n    }, { \"../utils/common\": 41 }], 51: [function(e, t, r) {\n      t.exports = { 2: \"need dictionary\", 1: \"stream end\", 0: \"\", \"-1\": \"file error\", \"-2\": \"stream error\", \"-3\": \"data error\", \"-4\": \"insufficient memory\", \"-5\": \"buffer error\", \"-6\": \"incompatible version\" };\n    }, {}], 52: [function(e, t, r) {\n      var i = e(\"../utils/common\"), o = 0, h = 1;\n      function n(e2) {\n        for (var t2 = e2.length; 0 <= --t2; )\n          e2[t2] = 0;\n      }\n      var s = 0, a = 29, u = 256, l = u + 1 + a, f = 30, c = 19, _ = 2 * l + 1, g = 15, d = 16, p = 7, m = 256, b = 16, v = 17, y = 18, w = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0], k = [0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13], x = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 7], S = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15], z = new Array(2 * (l + 2));\n      n(z);\n      var C = new Array(2 * f);\n      n(C);\n      var E = new Array(512);\n      n(E);\n      var A = new Array(256);\n      n(A);\n      var I = new Array(a);\n      n(I);\n      var O, B, R, T = new Array(f);\n      function D(e2, t2, r2, n2, i2) {\n        this.static_tree = e2, this.extra_bits = t2, this.extra_base = r2, this.elems = n2, this.max_length = i2, this.has_stree = e2 && e2.length;\n      }\n      function F(e2, t2) {\n        this.dyn_tree = e2, this.max_code = 0, this.stat_desc = t2;\n      }\n      function N(e2) {\n        return e2 < 256 ? E[e2] : E[256 + (e2 >>> 7)];\n      }\n      function U(e2, t2) {\n        e2.pending_buf[e2.pending++] = 255 & t2, e2.pending_buf[e2.pending++] = t2 >>> 8 & 255;\n      }\n      function P(e2, t2, r2) {\n        e2.bi_valid > d - r2 ? (e2.bi_buf |= t2 << e2.bi_valid & 65535, U(e2, e2.bi_buf), e2.bi_buf = t2 >> d - e2.bi_valid, e2.bi_valid += r2 - d) : (e2.bi_buf |= t2 << e2.bi_valid & 65535, e2.bi_valid += r2);\n      }\n      function L(e2, t2, r2) {\n        P(e2, r2[2 * t2], r2[2 * t2 + 1]);\n      }\n      function j(e2, t2) {\n        for (var r2 = 0; r2 |= 1 & e2, e2 >>>= 1, r2 <<= 1, 0 < --t2; )\n          ;\n        return r2 >>> 1;\n      }\n      function Z(e2, t2, r2) {\n        var n2, i2, s2 = new Array(g + 1), a2 = 0;\n        for (n2 = 1; n2 <= g; n2++)\n          s2[n2] = a2 = a2 + r2[n2 - 1] << 1;\n        for (i2 = 0; i2 <= t2; i2++) {\n          var o2 = e2[2 * i2 + 1];\n          0 !== o2 && (e2[2 * i2] = j(s2[o2]++, o2));\n        }\n      }\n      function W(e2) {\n        var t2;\n        for (t2 = 0; t2 < l; t2++)\n          e2.dyn_ltree[2 * t2] = 0;\n        for (t2 = 0; t2 < f; t2++)\n          e2.dyn_dtree[2 * t2] = 0;\n        for (t2 = 0; t2 < c; t2++)\n          e2.bl_tree[2 * t2] = 0;\n        e2.dyn_ltree[2 * m] = 1, e2.opt_len = e2.static_len = 0, e2.last_lit = e2.matches = 0;\n      }\n      function M(e2) {\n        8 < e2.bi_valid ? U(e2, e2.bi_buf) : 0 < e2.bi_valid && (e2.pending_buf[e2.pending++] = e2.bi_buf), e2.bi_buf = 0, e2.bi_valid = 0;\n      }\n      function H(e2, t2, r2, n2) {\n        var i2 = 2 * t2, s2 = 2 * r2;\n        return e2[i2] < e2[s2] || e2[i2] === e2[s2] && n2[t2] <= n2[r2];\n      }\n      function G(e2, t2, r2) {\n        for (var n2 = e2.heap[r2], i2 = r2 << 1; i2 <= e2.heap_len && (i2 < e2.heap_len && H(t2, e2.heap[i2 + 1], e2.heap[i2], e2.depth) && i2++, !H(t2, n2, e2.heap[i2], e2.depth)); )\n          e2.heap[r2] = e2.heap[i2], r2 = i2, i2 <<= 1;\n        e2.heap[r2] = n2;\n      }\n      function K(e2, t2, r2) {\n        var n2, i2, s2, a2, o2 = 0;\n        if (0 !== e2.last_lit)\n          for (; n2 = e2.pending_buf[e2.d_buf + 2 * o2] << 8 | e2.pending_buf[e2.d_buf + 2 * o2 + 1], i2 = e2.pending_buf[e2.l_buf + o2], o2++, 0 === n2 ? L(e2, i2, t2) : (L(e2, (s2 = A[i2]) + u + 1, t2), 0 !== (a2 = w[s2]) && P(e2, i2 -= I[s2], a2), L(e2, s2 = N(--n2), r2), 0 !== (a2 = k[s2]) && P(e2, n2 -= T[s2], a2)), o2 < e2.last_lit; )\n            ;\n        L(e2, m, t2);\n      }\n      function Y(e2, t2) {\n        var r2, n2, i2, s2 = t2.dyn_tree, a2 = t2.stat_desc.static_tree, o2 = t2.stat_desc.has_stree, h2 = t2.stat_desc.elems, u2 = -1;\n        for (e2.heap_len = 0, e2.heap_max = _, r2 = 0; r2 < h2; r2++)\n          0 !== s2[2 * r2] ? (e2.heap[++e2.heap_len] = u2 = r2, e2.depth[r2] = 0) : s2[2 * r2 + 1] = 0;\n        for (; e2.heap_len < 2; )\n          s2[2 * (i2 = e2.heap[++e2.heap_len] = u2 < 2 ? ++u2 : 0)] = 1, e2.depth[i2] = 0, e2.opt_len--, o2 && (e2.static_len -= a2[2 * i2 + 1]);\n        for (t2.max_code = u2, r2 = e2.heap_len >> 1; 1 <= r2; r2--)\n          G(e2, s2, r2);\n        for (i2 = h2; r2 = e2.heap[1], e2.heap[1] = e2.heap[e2.heap_len--], G(e2, s2, 1), n2 = e2.heap[1], e2.heap[--e2.heap_max] = r2, e2.heap[--e2.heap_max] = n2, s2[2 * i2] = s2[2 * r2] + s2[2 * n2], e2.depth[i2] = (e2.depth[r2] >= e2.depth[n2] ? e2.depth[r2] : e2.depth[n2]) + 1, s2[2 * r2 + 1] = s2[2 * n2 + 1] = i2, e2.heap[1] = i2++, G(e2, s2, 1), 2 <= e2.heap_len; )\n          ;\n        e2.heap[--e2.heap_max] = e2.heap[1], function(e3, t3) {\n          var r3, n3, i3, s3, a3, o3, h3 = t3.dyn_tree, u3 = t3.max_code, l2 = t3.stat_desc.static_tree, f2 = t3.stat_desc.has_stree, c2 = t3.stat_desc.extra_bits, d2 = t3.stat_desc.extra_base, p2 = t3.stat_desc.max_length, m2 = 0;\n          for (s3 = 0; s3 <= g; s3++)\n            e3.bl_count[s3] = 0;\n          for (h3[2 * e3.heap[e3.heap_max] + 1] = 0, r3 = e3.heap_max + 1; r3 < _; r3++)\n            p2 < (s3 = h3[2 * h3[2 * (n3 = e3.heap[r3]) + 1] + 1] + 1) && (s3 = p2, m2++), h3[2 * n3 + 1] = s3, u3 < n3 || (e3.bl_count[s3]++, a3 = 0, d2 <= n3 && (a3 = c2[n3 - d2]), o3 = h3[2 * n3], e3.opt_len += o3 * (s3 + a3), f2 && (e3.static_len += o3 * (l2[2 * n3 + 1] + a3)));\n          if (0 !== m2) {\n            do {\n              for (s3 = p2 - 1; 0 === e3.bl_count[s3]; )\n                s3--;\n              e3.bl_count[s3]--, e3.bl_count[s3 + 1] += 2, e3.bl_count[p2]--, m2 -= 2;\n            } while (0 < m2);\n            for (s3 = p2; 0 !== s3; s3--)\n              for (n3 = e3.bl_count[s3]; 0 !== n3; )\n                u3 < (i3 = e3.heap[--r3]) || (h3[2 * i3 + 1] !== s3 && (e3.opt_len += (s3 - h3[2 * i3 + 1]) * h3[2 * i3], h3[2 * i3 + 1] = s3), n3--);\n          }\n        }(e2, t2), Z(s2, u2, e2.bl_count);\n      }\n      function X(e2, t2, r2) {\n        var n2, i2, s2 = -1, a2 = t2[1], o2 = 0, h2 = 7, u2 = 4;\n        for (0 === a2 && (h2 = 138, u2 = 3), t2[2 * (r2 + 1) + 1] = 65535, n2 = 0; n2 <= r2; n2++)\n          i2 = a2, a2 = t2[2 * (n2 + 1) + 1], ++o2 < h2 && i2 === a2 || (o2 < u2 ? e2.bl_tree[2 * i2] += o2 : 0 !== i2 ? (i2 !== s2 && e2.bl_tree[2 * i2]++, e2.bl_tree[2 * b]++) : o2 <= 10 ? e2.bl_tree[2 * v]++ : e2.bl_tree[2 * y]++, s2 = i2, u2 = (o2 = 0) === a2 ? (h2 = 138, 3) : i2 === a2 ? (h2 = 6, 3) : (h2 = 7, 4));\n      }\n      function V(e2, t2, r2) {\n        var n2, i2, s2 = -1, a2 = t2[1], o2 = 0, h2 = 7, u2 = 4;\n        for (0 === a2 && (h2 = 138, u2 = 3), n2 = 0; n2 <= r2; n2++)\n          if (i2 = a2, a2 = t2[2 * (n2 + 1) + 1], !(++o2 < h2 && i2 === a2)) {\n            if (o2 < u2)\n              for (; L(e2, i2, e2.bl_tree), 0 != --o2; )\n                ;\n            else\n              0 !== i2 ? (i2 !== s2 && (L(e2, i2, e2.bl_tree), o2--), L(e2, b, e2.bl_tree), P(e2, o2 - 3, 2)) : o2 <= 10 ? (L(e2, v, e2.bl_tree), P(e2, o2 - 3, 3)) : (L(e2, y, e2.bl_tree), P(e2, o2 - 11, 7));\n            s2 = i2, u2 = (o2 = 0) === a2 ? (h2 = 138, 3) : i2 === a2 ? (h2 = 6, 3) : (h2 = 7, 4);\n          }\n      }\n      n(T);\n      var q = false;\n      function J(e2, t2, r2, n2) {\n        P(e2, (s << 1) + (n2 ? 1 : 0), 3), function(e3, t3, r3, n3) {\n          M(e3), U(e3, r3), U(e3, ~r3), i.arraySet(e3.pending_buf, e3.window, t3, r3, e3.pending), e3.pending += r3;\n        }(e2, t2, r2);\n      }\n      r._tr_init = function(e2) {\n        q || (function() {\n          var e3, t2, r2, n2, i2, s2 = new Array(g + 1);\n          for (n2 = r2 = 0; n2 < a - 1; n2++)\n            for (I[n2] = r2, e3 = 0; e3 < 1 << w[n2]; e3++)\n              A[r2++] = n2;\n          for (A[r2 - 1] = n2, n2 = i2 = 0; n2 < 16; n2++)\n            for (T[n2] = i2, e3 = 0; e3 < 1 << k[n2]; e3++)\n              E[i2++] = n2;\n          for (i2 >>= 7; n2 < f; n2++)\n            for (T[n2] = i2 << 7, e3 = 0; e3 < 1 << k[n2] - 7; e3++)\n              E[256 + i2++] = n2;\n          for (t2 = 0; t2 <= g; t2++)\n            s2[t2] = 0;\n          for (e3 = 0; e3 <= 143; )\n            z[2 * e3 + 1] = 8, e3++, s2[8]++;\n          for (; e3 <= 255; )\n            z[2 * e3 + 1] = 9, e3++, s2[9]++;\n          for (; e3 <= 279; )\n            z[2 * e3 + 1] = 7, e3++, s2[7]++;\n          for (; e3 <= 287; )\n            z[2 * e3 + 1] = 8, e3++, s2[8]++;\n          for (Z(z, l + 1, s2), e3 = 0; e3 < f; e3++)\n            C[2 * e3 + 1] = 5, C[2 * e3] = j(e3, 5);\n          O = new D(z, w, u + 1, l, g), B = new D(C, k, 0, f, g), R = new D(new Array(0), x, 0, c, p);\n        }(), q = true), e2.l_desc = new F(e2.dyn_ltree, O), e2.d_desc = new F(e2.dyn_dtree, B), e2.bl_desc = new F(e2.bl_tree, R), e2.bi_buf = 0, e2.bi_valid = 0, W(e2);\n      }, r._tr_stored_block = J, r._tr_flush_block = function(e2, t2, r2, n2) {\n        var i2, s2, a2 = 0;\n        0 < e2.level ? (2 === e2.strm.data_type && (e2.strm.data_type = function(e3) {\n          var t3, r3 = 4093624447;\n          for (t3 = 0; t3 <= 31; t3++, r3 >>>= 1)\n            if (1 & r3 && 0 !== e3.dyn_ltree[2 * t3])\n              return o;\n          if (0 !== e3.dyn_ltree[18] || 0 !== e3.dyn_ltree[20] || 0 !== e3.dyn_ltree[26])\n            return h;\n          for (t3 = 32; t3 < u; t3++)\n            if (0 !== e3.dyn_ltree[2 * t3])\n              return h;\n          return o;\n        }(e2)), Y(e2, e2.l_desc), Y(e2, e2.d_desc), a2 = function(e3) {\n          var t3;\n          for (X(e3, e3.dyn_ltree, e3.l_desc.max_code), X(e3, e3.dyn_dtree, e3.d_desc.max_code), Y(e3, e3.bl_desc), t3 = c - 1; 3 <= t3 && 0 === e3.bl_tree[2 * S[t3] + 1]; t3--)\n            ;\n          return e3.opt_len += 3 * (t3 + 1) + 5 + 5 + 4, t3;\n        }(e2), i2 = e2.opt_len + 3 + 7 >>> 3, (s2 = e2.static_len + 3 + 7 >>> 3) <= i2 && (i2 = s2)) : i2 = s2 = r2 + 5, r2 + 4 <= i2 && -1 !== t2 ? J(e2, t2, r2, n2) : 4 === e2.strategy || s2 === i2 ? (P(e2, 2 + (n2 ? 1 : 0), 3), K(e2, z, C)) : (P(e2, 4 + (n2 ? 1 : 0), 3), function(e3, t3, r3, n3) {\n          var i3;\n          for (P(e3, t3 - 257, 5), P(e3, r3 - 1, 5), P(e3, n3 - 4, 4), i3 = 0; i3 < n3; i3++)\n            P(e3, e3.bl_tree[2 * S[i3] + 1], 3);\n          V(e3, e3.dyn_ltree, t3 - 1), V(e3, e3.dyn_dtree, r3 - 1);\n        }(e2, e2.l_desc.max_code + 1, e2.d_desc.max_code + 1, a2 + 1), K(e2, e2.dyn_ltree, e2.dyn_dtree)), W(e2), n2 && M(e2);\n      }, r._tr_tally = function(e2, t2, r2) {\n        return e2.pending_buf[e2.d_buf + 2 * e2.last_lit] = t2 >>> 8 & 255, e2.pending_buf[e2.d_buf + 2 * e2.last_lit + 1] = 255 & t2, e2.pending_buf[e2.l_buf + e2.last_lit] = 255 & r2, e2.last_lit++, 0 === t2 ? e2.dyn_ltree[2 * r2]++ : (e2.matches++, t2--, e2.dyn_ltree[2 * (A[r2] + u + 1)]++, e2.dyn_dtree[2 * N(t2)]++), e2.last_lit === e2.lit_bufsize - 1;\n      }, r._tr_align = function(e2) {\n        P(e2, 2, 3), L(e2, m, z), function(e3) {\n          16 === e3.bi_valid ? (U(e3, e3.bi_buf), e3.bi_buf = 0, e3.bi_valid = 0) : 8 <= e3.bi_valid && (e3.pending_buf[e3.pending++] = 255 & e3.bi_buf, e3.bi_buf >>= 8, e3.bi_valid -= 8);\n        }(e2);\n      };\n    }, { \"../utils/common\": 41 }], 53: [function(e, t, r) {\n      t.exports = function() {\n        this.input = null, this.next_in = 0, this.avail_in = 0, this.total_in = 0, this.output = null, this.next_out = 0, this.avail_out = 0, this.total_out = 0, this.msg = \"\", this.state = null, this.data_type = 2, this.adler = 0;\n      };\n    }, {}], 54: [function(e, t, r) {\n      (function(e2) {\n        !function(r2, n) {\n          if (!r2.setImmediate) {\n            var i, s, t2, a, o = 1, h = {}, u = false, l = r2.document, e3 = Object.getPrototypeOf && Object.getPrototypeOf(r2);\n            e3 = e3 && e3.setTimeout ? e3 : r2, i = \"[object process]\" === {}.toString.call(r2.process) ? function(e4) {\n              process.nextTick(function() {\n                c(e4);\n              });\n            } : function() {\n              if (r2.postMessage && !r2.importScripts) {\n                var e4 = true, t3 = r2.onmessage;\n                return r2.onmessage = function() {\n                  e4 = false;\n                }, r2.postMessage(\"\", \"*\"), r2.onmessage = t3, e4;\n              }\n            }() ? (a = \"setImmediate$\" + Math.random() + \"$\", r2.addEventListener ? r2.addEventListener(\"message\", d, false) : r2.attachEvent(\"onmessage\", d), function(e4) {\n              r2.postMessage(a + e4, \"*\");\n            }) : r2.MessageChannel ? ((t2 = new MessageChannel()).port1.onmessage = function(e4) {\n              c(e4.data);\n            }, function(e4) {\n              t2.port2.postMessage(e4);\n            }) : l && \"onreadystatechange\" in l.createElement(\"script\") ? (s = l.documentElement, function(e4) {\n              var t3 = l.createElement(\"script\");\n              t3.onreadystatechange = function() {\n                c(e4), t3.onreadystatechange = null, s.removeChild(t3), t3 = null;\n              }, s.appendChild(t3);\n            }) : function(e4) {\n              setTimeout(c, 0, e4);\n            }, e3.setImmediate = function(e4) {\n              \"function\" != typeof e4 && (e4 = new Function(\"\" + e4));\n              for (var t3 = new Array(arguments.length - 1), r3 = 0; r3 < t3.length; r3++)\n                t3[r3] = arguments[r3 + 1];\n              var n2 = { callback: e4, args: t3 };\n              return h[o] = n2, i(o), o++;\n            }, e3.clearImmediate = f;\n          }\n          function f(e4) {\n            delete h[e4];\n          }\n          function c(e4) {\n            if (u)\n              setTimeout(c, 0, e4);\n            else {\n              var t3 = h[e4];\n              if (t3) {\n                u = true;\n                try {\n                  !function(e5) {\n                    var t4 = e5.callback, r3 = e5.args;\n                    switch (r3.length) {\n                      case 0:\n                        t4();\n                        break;\n                      case 1:\n                        t4(r3[0]);\n                        break;\n                      case 2:\n                        t4(r3[0], r3[1]);\n                        break;\n                      case 3:\n                        t4(r3[0], r3[1], r3[2]);\n                        break;\n                      default:\n                        t4.apply(n, r3);\n                    }\n                  }(t3);\n                } finally {\n                  f(e4), u = false;\n                }\n              }\n            }\n          }\n          function d(e4) {\n            e4.source === r2 && \"string\" == typeof e4.data && 0 === e4.data.indexOf(a) && c(+e4.data.slice(a.length));\n          }\n        }(\"undefined\" == typeof self ? void 0 === e2 ? this : e2 : self);\n      }).call(this, \"undefined\" != typeof commonjsGlobal ? commonjsGlobal : \"undefined\" != typeof self ? self : \"undefined\" != typeof window ? window : {});\n    }, {}] }, {}, [10])(10);\n  });\n})(jszip_min);\nvar jszip_minExports = jszip_min.exports;\nconst JSZip = /* @__PURE__ */ getDefaultExportFromCjs(jszip_minExports);\nclass Comment {\n  /**\n   * Constructs a new BCF Topic Comment instance.\n   * @param components - The Components instance.\n   * @param text - The initial comment text.\n   */\n  constructor(components, text) {\n    __publicField(this, \"date\", /* @__PURE__ */ new Date());\n    __publicField(this, \"author\");\n    __publicField(this, \"guid\", UUID.create());\n    __publicField(this, \"viewpoint\");\n    __publicField(this, \"modifiedAuthor\");\n    __publicField(this, \"modifiedDate\");\n    __publicField(this, \"topic\");\n    __publicField(this, \"_components\");\n    __publicField(this, \"_comment\", \"\");\n    this._components = components;\n    this._comment = text;\n    const manager = this._components.get(BCFTopics);\n    this.author = manager.config.author;\n  }\n  /**\n   * Sets the comment text and updates the modified date and author.\n   * The author will be the one defined in BCFTopics.config.author\n   * @param value - The new comment text.\n   */\n  set comment(value) {\n    var _a2;\n    const manager = this._components.get(BCFTopics);\n    this._comment = value;\n    this.modifiedDate = /* @__PURE__ */ new Date();\n    this.modifiedAuthor = manager.config.author;\n    (_a2 = this.topic) == null ? void 0 : _a2.comments.set(this.guid, this);\n  }\n  /**\n   * Gets the comment text.\n   * @returns The comment text.\n   */\n  get comment() {\n    return this._comment;\n  }\n  toJSON() {\n    var _a2, _b;\n    const result = {\n      guid: this.guid,\n      date: this.date.toISOString(),\n      author: this.author,\n      comment: this.comment,\n      topic_guid: (_a2 = this.topic) == null ? void 0 : _a2.guid,\n      viewpoint_guid: this.viewpoint,\n      modified_date: (_b = this.modifiedDate) == null ? void 0 : _b.toISOString(),\n      modified_author: this.modifiedAuthor\n    };\n    for (const [key, value] of Object.entries(result)) {\n      if (value === void 0)\n        delete result[key];\n    }\n    return result;\n  }\n}\nconst _Topic = class _Topic {\n  /**\n   * Initializes a new instance of the `Topic` class representing a BCF (BIM Collaboration Format) topic.\n   * It provides methods and properties to manage and serialize BCF topics.\n   *\n   * @remarks\n   * The default creationUser is the one set in BCFTopics.config.author\n   * It should not be created manually. Better use BCFTopics.create().\n   *\n   * @param components - The `Components` instance that provides access to other components and services.\n   */\n  constructor(components) {\n    /**\n     * A unique identifier for the topic.\n     *\n     * @remarks\n     * The `guid` is automatically generated upon topic creation and by no means it should change.\n     */\n    __publicField(this, \"guid\", UUID.create());\n    __publicField(this, \"title\", _Topic.default.title);\n    __publicField(this, \"creationDate\", /* @__PURE__ */ new Date());\n    __publicField(this, \"creationAuthor\", \"\");\n    // Store viewpoint guids instead of the actual Viewpoint to prevent a possible memory leak\n    __publicField(this, \"viewpoints\", new DataSet());\n    // Store topic guids instead of the actual Topic to prevent a possible memory leak\n    __publicField(this, \"relatedTopics\", new DataSet());\n    // There is no problem to store the comment it-self as it is not referenced anywhere else\n    __publicField(this, \"comments\", new DataMap());\n    // Store document reference guids instead of the actual thing to prevent a possible memory leak\n    __publicField(this, \"documentReferences\", new DataSet());\n    __publicField(this, \"customData\", {});\n    __publicField(this, \"description\");\n    __publicField(this, \"serverAssignedId\");\n    __publicField(this, \"dueDate\");\n    __publicField(this, \"modifiedAuthor\");\n    __publicField(this, \"modifiedDate\");\n    __publicField(this, \"index\");\n    // Based on the BCF API documentation, the files associated with a topic are the models that should be loaded when displaying the topic's viewpoints.\n    // files: any\n    __publicField(this, \"_type\", _Topic.default.type);\n    __publicField(this, \"_status\", _Topic.default.status);\n    __publicField(this, \"_priority\", _Topic.default.priority);\n    __publicField(this, \"_stage\", _Topic.default.stage);\n    __publicField(this, \"_assignedTo\", _Topic.default.assignedTo);\n    __publicField(this, \"_labels\", _Topic.default.labels ?? /* @__PURE__ */ new Set());\n    __publicField(this, \"_components\");\n    this._components = components;\n    const manager = components.get(BCFTopics);\n    this.creationAuthor = manager.config.author;\n    this.relatedTopics.guard = (guid) => guid !== this.guid;\n  }\n  set type(value) {\n    const manager = this._components.get(BCFTopics);\n    const { strict, types } = manager.config;\n    const valid = strict ? types.has(value) : true;\n    if (!valid)\n      return;\n    this._type = value;\n  }\n  get type() {\n    return this._type;\n  }\n  set status(value) {\n    const manager = this._components.get(BCFTopics);\n    const { strict, statuses } = manager.config;\n    const valid = strict ? statuses.has(value) : true;\n    if (!valid)\n      return;\n    this._status = value;\n  }\n  get status() {\n    return this._status;\n  }\n  set priority(value) {\n    const manager = this._components.get(BCFTopics);\n    if (value) {\n      const { strict, priorities } = manager.config;\n      const valid = strict ? priorities.has(value) : true;\n      if (!valid)\n        return;\n      this._priority = value;\n    } else {\n      this._priority = value;\n    }\n  }\n  get priority() {\n    return this._priority;\n  }\n  set stage(value) {\n    const manager = this._components.get(BCFTopics);\n    if (value) {\n      const { strict, stages } = manager.config;\n      const valid = strict ? stages.has(value) : true;\n      if (!valid)\n        return;\n      this._stage = value;\n    } else {\n      this._stage = value;\n    }\n  }\n  get stage() {\n    return this._stage;\n  }\n  set assignedTo(value) {\n    const manager = this._components.get(BCFTopics);\n    if (value) {\n      const { strict, users } = manager.config;\n      const valid = strict ? users.has(value) : true;\n      if (!valid)\n        return;\n      this._assignedTo = value;\n    } else {\n      this._assignedTo = value;\n    }\n  }\n  get assignedTo() {\n    return this._assignedTo;\n  }\n  set labels(value) {\n    const manager = this._components.get(BCFTopics);\n    const { strict, labels } = manager.config;\n    if (strict) {\n      const _value = /* @__PURE__ */ new Set();\n      for (const label of value) {\n        const valid = strict ? labels.has(label) : true;\n        if (!valid)\n          continue;\n        _value.add(label);\n      }\n      this._labels = _value;\n    } else {\n      this._labels = value;\n    }\n  }\n  get labels() {\n    return this._labels;\n  }\n  get _managerVersion() {\n    const manager = this._components.get(BCFTopics);\n    return manager.config.version;\n  }\n  /**\n   * Sets properties of the BCF Topic based on the provided data.\n   *\n   * @remarks\n   * This method iterates over the provided `data` object and updates the corresponding properties of the BCF Topic.\n   * It skips the `guid` property as it should not be modified.\n   *\n   * @param data - An object containing the properties to be updated.\n   * @returns The topic\n   *\n   * @example\n   * ```typescript\n   * const topic = new Topic(components);\n   * topic.set({\n   *   title: \"New BCF Topic Title\",\n   *   description: \"This is a new description.\",\n   *   status: \"Resolved\",\n   * });\n   * ```\n   */\n  set(data) {\n    const _data = data;\n    const _this = this;\n    for (const key in data) {\n      if (key === \"guid\")\n        continue;\n      const value = _data[key];\n      if (key in this)\n        _this[key] = value;\n    }\n    const manager = this._components.get(BCFTopics);\n    manager.list.set(this.guid, this);\n    return this;\n  }\n  /**\n   * Creates a new comment associated with the current topic.\n   *\n   * @param text - The text content of the comment.\n   * @param viewpoint - (Optional) The viewpoint associated with the comment.\n   *\n   * @returns The newly created comment.\n   *\n   * @example\n   * ```typescript\n   * const viewpoint = viewpoints.create(world); // Created with an instance of Viewpoints\n   * const topic = topics.create(); // Created with an instance of BCFTopics\n   * topic.viewpoints.add(viewpoint);\n   * const comment = topic.createComment(\"This is a new comment\", viewpoint);\n   * ```\n   */\n  createComment(text, viewpoint) {\n    const comment = new Comment(this._components, text);\n    comment.viewpoint = viewpoint;\n    comment.topic = this;\n    this.comments.set(comment.guid, comment);\n    return comment;\n  }\n  createLabelTags() {\n    const labels = [...this.labels];\n    const manager = this._components.get(BCFTopics);\n    if (manager.config.exportCustomDataAsLabels) {\n      for (const key in this.customData) {\n        const value = this.customData[key];\n        if (typeof value !== \"string\")\n          continue;\n        labels.push(value);\n      }\n    }\n    return labels;\n  }\n  createCommentTags() {\n    return [...this.comments.values()].map((comment) => {\n      var _a2;\n      return {\n        $Guid: comment.guid,\n        Date: comment.date.toISOString(),\n        Author: comment.author,\n        Comment: comment.comment,\n        ModifiedAuthor: comment.modifiedAuthor,\n        ModifiedDate: (_a2 = comment.modifiedDate) == null ? void 0 : _a2.toISOString(),\n        Viewpoint: comment.viewpoint ? { $Guid: comment.viewpoint } : void 0\n      };\n    });\n  }\n  createViewpointTags() {\n    const manager = this._components.get(Viewpoints);\n    const viewpoints = [...this.viewpoints].map((viewpointID) => manager.list.get(viewpointID)).filter((viewpoint) => viewpoint);\n    return viewpoints.map((viewpoint) => {\n      const xmlData = {\n        $Guid: viewpoint.guid,\n        Viewpoint: `${viewpoint.title ?? viewpoint.guid}.bcfv`\n      };\n      const snapshotData = manager.snapshots.get(viewpoint.snapshot);\n      if (snapshotData) {\n        const snapshotExtension = manager.getSnapshotExtension(\n          viewpoint.snapshot\n        );\n        xmlData.Snapshot = `${viewpoint.snapshot}.${snapshotExtension}`;\n      }\n      return xmlData;\n    });\n  }\n  createRelatedTopicTags() {\n    return [...this.relatedTopics].map((guid) => {\n      return { $Guid: guid };\n    });\n  }\n  createDocumentReferencesTag(version = this._managerVersion) {\n    const references = [];\n    if (!(version === \"3\" || version === \"2.1\"))\n      return references;\n    const manager = this._components.get(BCFTopics);\n    for (const guid of this.documentReferences) {\n      const doc = manager.documents.get(guid);\n      if (!doc)\n        continue;\n      let reference = {\n        $Guid: UUID.create(),\n        Description: doc.description\n      };\n      if (version === \"2.1\") {\n        reference = {\n          ...reference,\n          $isExternal: doc.type === \"external\" ? true : void 0,\n          ReferencedDocument: doc.type === \"external\" ? doc.url : `../${doc.fileName}`\n        };\n      }\n      if (version === \"3\") {\n        reference = {\n          ...reference,\n          DocumentGuid: doc.type === \"internal\" ? guid : void 0,\n          Url: doc.type === \"external\" ? doc.url : void 0\n        };\n      }\n      if (Object.keys(reference).length > 0)\n        references.push(reference);\n    }\n    return references;\n  }\n  toJSON() {\n    var _a2, _b;\n    const result = {\n      guid: this.guid,\n      server_assigned_id: this.serverAssignedId,\n      topic_type: this.type,\n      topic_status: this.status,\n      title: this.title,\n      priority: this.priority,\n      index: this.index,\n      labels: [...this.labels],\n      creation_date: this.creationDate.toISOString(),\n      creation_author: this.creationAuthor,\n      modified_date: (_a2 = this.modifiedDate) == null ? void 0 : _a2.toISOString(),\n      modified_author: this.modifiedAuthor,\n      assigned_to: this.assignedTo,\n      stage: this.stage,\n      description: this.description,\n      due_date: (_b = this.dueDate) == null ? void 0 : _b.toISOString(),\n      comments: [...this.comments].map(([_, comment]) => comment.toJSON()),\n      relatedTopics: [...this.relatedTopics].map((guid) => {\n        return { related_topic_guid: guid };\n      })\n    };\n    const viewpointsManager = this._components.get(Viewpoints);\n    for (const guid of this.viewpoints) {\n      const viewpoint = viewpointsManager.list.get(guid);\n      if (!viewpoint)\n        continue;\n      if (!result.viewpoints)\n        result.viewpoints = [];\n      result.viewpoints.push(viewpoint.toJSON());\n    }\n    const topicsManager = this._components.get(BCFTopics);\n    for (const guid of this.documentReferences) {\n      const reference = topicsManager.documents.get(guid);\n      if (!reference)\n        continue;\n      if (!result.document_references)\n        result.document_references = [];\n      if (reference.type === \"external\") {\n        result.document_references.push({\n          guid: UUID.create(),\n          // TODO: this is for sure incorrect!\n          description: reference.description,\n          url: reference.url\n        });\n      } else {\n        result.document_references.push({\n          guid: UUID.create(),\n          // TODO: this is for sure incorrect!\n          description: reference.description,\n          document_guid: guid\n        });\n      }\n    }\n    for (const [key, value] of Object.entries(result)) {\n      if (value === void 0 || Array.isArray(value) && value.length === 0) {\n        delete result[key];\n      }\n    }\n    return result;\n  }\n  /**\n   * Serializes the BCF Topic instance into an XML string representation based on the official schema.\n   *\n   * @remarks\n   * This method constructs an XML string based on the properties of the BCF Topic instance.\n   * It includes the topic's guid, type, status, creation date, creation author, priority, index,\n   * modified date, modified author, due date, assigned to, description, stage, labels, related topics,\n   * comments, and viewpoints.\n   *\n   * @returns A string representing the XML serialization of the BCF Topic.\n   *\n   * @example\n   * ```typescript\n   * const topic = bcfTopics.create(); // Created with an instance of BCFTopics\n   * const xml = topic.serialize();\n   * console.log(xml);\n   * ```\n   */\n  serialize() {\n    var _a2, _b;\n    const version = this._managerVersion;\n    const topic = {\n      $Guid: this.guid,\n      $TopicType: this.type,\n      $TopicStatus: this.status,\n      $ServerAssignedId: this.serverAssignedId,\n      Title: this.title,\n      CreationAuthor: this.creationAuthor,\n      CreationDate: this.creationDate.toISOString(),\n      Priority: this.priority,\n      Index: version === \"2.1\" ? this.index : void 0,\n      ModifiedDate: (_a2 = this.modifiedDate) == null ? void 0 : _a2.toISOString(),\n      ModifiedAuthor: this.modifiedAuthor,\n      DueDate: (_b = this.dueDate) == null ? void 0 : _b.toISOString(),\n      AssignedTo: this.assignedTo,\n      Description: this.description,\n      Stage: this.stage,\n      DocumentReferences: version === \"3\" ? { DocumentReference: this.createDocumentReferencesTag(version) } : void 0,\n      RelatedTopics: version === \"3\" ? { RelatedTopic: this.createRelatedTopicTags() } : void 0,\n      RelatedTopic: version === \"2.1\" ? this.createRelatedTopicTags() : void 0,\n      Labels: version === \"3\" ? { Label: this.createLabelTags() } : void 0,\n      Viewpoints: version === \"3\" ? { ViewPoint: this.createViewpointTags() } : void 0,\n      Comments: version === \"3\" ? { Comment: this.createCommentTags() } : void 0\n    };\n    if (version === \"2.1\") {\n      topic.Labels = this.createLabelTags();\n      topic.DocumentReference = this.createDocumentReferencesTag(version);\n    }\n    const markup = {\n      Markup: { Topic: topic }\n    };\n    if (version === \"2.1\") {\n      markup.Markup.Viewpoints = this.createViewpointTags();\n      markup.Markup.Comment = this.createCommentTags();\n    }\n    return `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n    ${XML.builder.build(markup)}`;\n  }\n};\n/**\n * Default values for a BCF Topic, excluding `guid`, `creationDate`, and `creationAuthor`.\n */\n__publicField(_Topic, \"default\", {\n  title: \"BCF Topic\",\n  type: \"Issue\",\n  status: \"Active\"\n});\nlet Topic = _Topic;\nconst extensionsImporter = (manager, extensionsXML) => {\n  if (extensionsXML.trim() === \"\")\n    return;\n  const extensions = BCFTopics.xmlParser.parse(extensionsXML).Extensions;\n  if (!extensions)\n    return;\n  const { Priorities, TopicStatuses, TopicTypes, Users } = extensions;\n  if (Priorities && Priorities.Priority) {\n    const priorities = Array.isArray(Priorities.Priority) ? Priorities.Priority : [Priorities.Priority];\n    for (const priority of priorities) {\n      manager.config.priorities.add(priority);\n    }\n  }\n  if (TopicStatuses && TopicStatuses.TopicStatus) {\n    const statuses = Array.isArray(TopicStatuses.TopicStatus) ? TopicStatuses.TopicStatus : [TopicStatuses.TopicStatus];\n    for (const status of statuses) {\n      manager.config.statuses.add(status);\n    }\n  }\n  if (TopicTypes && TopicTypes.TopicType) {\n    const types = Array.isArray(TopicTypes.TopicType) ? TopicTypes.TopicType : [TopicTypes.TopicType];\n    for (const type of types) {\n      manager.config.types.add(type);\n    }\n  }\n  if (Users && Users.User) {\n    const users = Array.isArray(Users.User) ? Users.User : [Users.User];\n    for (const user of users) {\n      manager.config.users.add(user);\n    }\n  }\n};\nclass BCFTopicsConfigManager extends Configurator {\n  constructor() {\n    super(...arguments);\n    __publicField(this, \"_config\", {\n      version: {\n        type: \"Select\",\n        options: /* @__PURE__ */ new Set([\"2.1\", \"3\"]),\n        multiple: false,\n        value: \"\"\n      },\n      author: {\n        type: \"Text\",\n        value: \"\"\n      },\n      types: {\n        type: \"TextSet\",\n        value: /* @__PURE__ */ new Set()\n      },\n      statuses: {\n        type: \"TextSet\",\n        value: /* @__PURE__ */ new Set()\n      },\n      priorities: {\n        type: \"TextSet\",\n        value: /* @__PURE__ */ new Set()\n      },\n      labels: {\n        type: \"TextSet\",\n        value: /* @__PURE__ */ new Set()\n      },\n      stages: {\n        type: \"TextSet\",\n        value: /* @__PURE__ */ new Set()\n      },\n      users: {\n        type: \"TextSet\",\n        value: /* @__PURE__ */ new Set()\n      },\n      includeSelectionTag: {\n        type: \"Boolean\",\n        value: false\n      },\n      updateExtensionsOnImport: {\n        type: \"Boolean\",\n        value: false\n      },\n      strict: {\n        type: \"Boolean\",\n        value: false\n      },\n      includeAllExtensionsOnExport: {\n        type: \"Boolean\",\n        value: false\n      },\n      fallbackVersionOnImport: {\n        type: \"Select\",\n        multiple: false,\n        options: /* @__PURE__ */ new Set([\"2.1\", \"3\"]),\n        value: \"\"\n      },\n      ignoreIncompleteTopicsOnImport: {\n        type: \"Boolean\",\n        value: false\n      },\n      exportCustomDataAsLabels: {\n        type: \"Boolean\",\n        value: false\n      }\n    });\n  }\n  get version() {\n    return this._config.version.value;\n  }\n  set version(value) {\n    this._config.version.value = value;\n  }\n  get author() {\n    return this._config.author.value;\n  }\n  set author(value) {\n    this._config.author.value = value;\n  }\n  get types() {\n    return this._config.types.value;\n  }\n  set types(value) {\n    this._config.types.value = value;\n  }\n  get statuses() {\n    return this._config.statuses.value;\n  }\n  set statuses(value) {\n    this._config.statuses.value = value;\n  }\n  get priorities() {\n    return this._config.priorities.value;\n  }\n  set priorities(value) {\n    this._config.priorities.value = value;\n  }\n  get labels() {\n    return this._config.labels.value;\n  }\n  set labels(value) {\n    this._config.labels.value = value;\n  }\n  get stages() {\n    return this._config.stages.value;\n  }\n  set stages(value) {\n    this._config.stages.value = value;\n  }\n  get users() {\n    return this._config.users.value;\n  }\n  set users(value) {\n    this._config.users.value = value;\n  }\n  get includeSelectionTag() {\n    return this._config.includeSelectionTag.value;\n  }\n  set includeSelectionTag(value) {\n    this._config.includeSelectionTag.value = value;\n  }\n  get updateExtensionsOnImport() {\n    return this._config.updateExtensionsOnImport.value;\n  }\n  set updateExtensionsOnImport(value) {\n    this._config.updateExtensionsOnImport.value = value;\n  }\n  get strict() {\n    return this._config.strict.value;\n  }\n  set strict(value) {\n    this._config.strict.value = value;\n  }\n  get includeAllExtensionsOnExport() {\n    return this._config.includeAllExtensionsOnExport.value;\n  }\n  set includeAllExtensionsOnExport(value) {\n    this._config.includeAllExtensionsOnExport.value = value;\n  }\n  get fallbackVersionOnImport() {\n    return this._config.fallbackVersionOnImport.value;\n  }\n  set fallbackVersionOnImport(value) {\n    this._config.fallbackVersionOnImport.value = value;\n  }\n  get ignoreIncompleteTopicsOnImport() {\n    return this._config.ignoreIncompleteTopicsOnImport.value;\n  }\n  set ignoreIncompleteTopicsOnImport(value) {\n    this._config.ignoreIncompleteTopicsOnImport.value = value;\n  }\n  get exportCustomDataAsLabels() {\n    return this._config.exportCustomDataAsLabels.value;\n  }\n  set exportCustomDataAsLabels(value) {\n    this._config.exportCustomDataAsLabels.value = value;\n  }\n}\nconst _BCFTopics = class _BCFTopics extends Component {\n  constructor() {\n    super(...arguments);\n    __publicField(this, \"enabled\", false);\n    __publicField(this, \"_defaultConfig\", {\n      author: \"jhon.doe@example.com\",\n      version: \"2.1\",\n      types: /* @__PURE__ */ new Set([\n        \"Clash\",\n        \"Failure\",\n        \"Fault\",\n        \"Inquiry\",\n        \"Issue\",\n        \"Remark\",\n        \"Request\"\n      ]),\n      statuses: /* @__PURE__ */ new Set([\"Active\", \"In Progress\", \"Done\", \"In Review\", \"Closed\"]),\n      priorities: /* @__PURE__ */ new Set([\"On hold\", \"Minor\", \"Normal\", \"Major\", \"Critical\"]),\n      labels: /* @__PURE__ */ new Set(),\n      stages: /* @__PURE__ */ new Set(),\n      users: /* @__PURE__ */ new Set(),\n      includeSelectionTag: false,\n      updateExtensionsOnImport: true,\n      strict: false,\n      includeAllExtensionsOnExport: true,\n      fallbackVersionOnImport: \"2.1\",\n      ignoreIncompleteTopicsOnImport: false,\n      exportCustomDataAsLabels: false\n    });\n    __publicField(this, \"config\", new BCFTopicsConfigManager(\n      this,\n      this.components,\n      \"BCF Topics\",\n      _BCFTopics.uuid\n    ));\n    __publicField(this, \"list\", new DataMap());\n    __publicField(this, \"documents\", new DataMap());\n    __publicField(this, \"onSetup\", new Event());\n    __publicField(this, \"isSetup\", false);\n    __publicField(this, \"onBCFImported\", new Event());\n    __publicField(this, \"onDisposed\", new Event());\n  }\n  setup(config) {\n    if (this.isSetup)\n      return;\n    const fullConfig = { ...this._defaultConfig, ...config };\n    this.config.version = fullConfig.version;\n    this.config.author = fullConfig.author;\n    this.config.types = fullConfig.types;\n    this.config.statuses = fullConfig.statuses;\n    this.config.priorities = fullConfig.priorities;\n    this.config.labels = fullConfig.labels;\n    this.config.stages = fullConfig.stages;\n    this.config.users = fullConfig.users;\n    this.config.includeSelectionTag = fullConfig.includeSelectionTag;\n    this.config.updateExtensionsOnImport = fullConfig.updateExtensionsOnImport;\n    this.config.strict = fullConfig.strict;\n    this.config.includeAllExtensionsOnExport = fullConfig.includeAllExtensionsOnExport;\n    this.config.fallbackVersionOnImport = fullConfig.fallbackVersionOnImport || \"\";\n    this.config.ignoreIncompleteTopicsOnImport = fullConfig.ignoreIncompleteTopicsOnImport;\n    this.isSetup = true;\n    this.enabled = true;\n    this.onSetup.trigger();\n  }\n  /**\n   * Creates a new BCFTopic instance and adds it to the list.\n   *\n   * @param data - Optional partial BCFTopic object to initialize the new topic with.\n   * If not provided, default values will be used.\n   * @returns The newly created BCFTopic instance.\n   */\n  create(data) {\n    const topic = new Topic(this.components);\n    if (data) {\n      topic.guid = data.guid ?? topic.guid;\n      topic.set(data);\n    } else {\n      this.list.set(topic.guid, topic);\n    }\n    return topic;\n  }\n  /**\n   * Disposes of the BCFTopics component and triggers the onDisposed event.\n   *\n   * @remarks\n   * This method clears the list of topics and triggers the onDisposed event.\n   * It also resets the onDisposed event listener.\n   */\n  dispose() {\n    this.list.dispose();\n    this.onDisposed.trigger();\n    this.onDisposed.reset();\n  }\n  /**\n   * Retrieves the unique set of topic types used across all topics.\n   *\n   * @returns A Set containing the unique topic types.\n   */\n  get usedTypes() {\n    const types = [...this.list].map(([_, topic]) => topic.type);\n    return new Set(types);\n  }\n  /**\n   * Retrieves the unique set of topic statuses used across all topics.\n   *\n   * @returns A Set containing the unique topic statuses.\n   */\n  get usedStatuses() {\n    const statuses = [...this.list].map(([_, topic]) => topic.status);\n    return new Set(statuses);\n  }\n  /**\n   * Retrieves the unique set of topic priorities used across all topics.\n   *\n   * @returns A Set containing the unique topic priorities.\n   * Note: This method filters out any null or undefined priorities.\n   */\n  get usedPriorities() {\n    const priorities = [...this.list].map(([_, topic]) => topic.priority).filter((priority) => priority);\n    return new Set(priorities);\n  }\n  /**\n   * Retrieves the unique set of topic stages used across all topics.\n   *\n   * @returns A Set containing the unique topic stages.\n   * Note: This method filters out any null or undefined stages.\n   */\n  get usedStages() {\n    const stages = [...this.list].map(([_, topic]) => topic.stage).filter((stage) => stage);\n    return new Set(stages);\n  }\n  /**\n   * Retrieves the unique set of users associated with topics.\n   *\n   * @returns A Set containing the unique users.\n   * Note: This method collects users from the creation author, assigned to, modified author, and comment authors.\n   */\n  get usedUsers() {\n    const users = [];\n    for (const [_, topic] of this.list) {\n      users.push(topic.creationAuthor);\n      if (topic.assignedTo)\n        users.push(topic.assignedTo);\n      if (topic.modifiedAuthor)\n        users.push(topic.modifiedAuthor);\n      for (const [_2, comment] of topic.comments) {\n        users.push(comment.author);\n        if (comment.modifiedAuthor)\n          users.push(comment.modifiedAuthor);\n      }\n    }\n    return new Set(users);\n  }\n  /**\n   * Retrieves the unique set of labels used across all topics.\n   *\n   * @returns A Set containing the unique labels.\n   */\n  get usedLabels() {\n    const labels = [];\n    for (const [_, topic] of this.list)\n      labels.push(...topic.labels);\n    return new Set(labels);\n  }\n  /**\n   * Updates the set of extensions (types, statuses, priorities, labels, stages, users) based on the current topics.\n   * This method iterates through each topic in the list and adds its properties to the corresponding sets in the config.\n   */\n  updateExtensions() {\n    for (const [_, topic] of this.list) {\n      for (const label of topic.labels)\n        this.config.labels.add(label);\n      this.config.types.add(topic.type);\n      if (topic.priority)\n        this.config.priorities.add(topic.priority);\n      if (topic.stage)\n        this.config.stages.add(topic.stage);\n      this.config.statuses.add(topic.status);\n      this.config.users.add(topic.creationAuthor);\n      if (topic.assignedTo)\n        this.config.users.add(topic.assignedTo);\n      if (topic.modifiedAuthor)\n        this.config.users.add(topic.modifiedAuthor);\n      for (const [_2, comment] of topic.comments) {\n        this.config.users.add(comment.author);\n        if (comment.modifiedAuthor)\n          this.config.users.add(comment.modifiedAuthor);\n      }\n    }\n  }\n  /**\n   * Updates the references to viewpoints in the topics.\n   * This function iterates through each topic and checks if the viewpoints exist in the viewpoints list.\n   * If a viewpoint does not exist, it is removed from the topic's viewpoints.\n   */\n  updateViewpointReferences() {\n    const viewpoints = this.components.get(Viewpoints);\n    for (const [_, topic] of this.list) {\n      for (const viewpointID of topic.viewpoints) {\n        const exists = viewpoints.list.has(viewpointID);\n        if (!exists)\n          topic.viewpoints.delete(viewpointID);\n      }\n    }\n  }\n  /**\n   * Exports the given topics to a BCF (Building Collaboration Format) zip file.\n   *\n   * @param topics - The topics to export. Defaults to all topics in the list.\n   * @returns A promise that resolves to a Blob containing the exported BCF zip file.\n   */\n  async export(topics = this.list.values()) {\n    const zip = new JSZip();\n    zip.file(\n      \"bcf.version\",\n      `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n    <Version VersionId=\"${this.config.version}\" xsi:noNamespaceSchemaLocation=\"https://raw.githubusercontent.com/buildingSMART/BCF-XML/release_3_0/Schemas/version.xsd\"\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    </Version>`\n    );\n    for (const [guid, doc] of this.documents.entries()) {\n      if (doc.type === \"external\")\n        continue;\n      zip.file(\n        this.config.version === \"2.1\" ? doc.fileName : `documents/${guid}`,\n        doc.data\n      );\n    }\n    if (this.config.version === \"3\") {\n      const docTags = [];\n      for (const [guid, doc] of this.documents.entries()) {\n        const { type, description } = doc;\n        if (type === \"external\")\n          continue;\n        docTags.push(`<Document Guid=\"${guid}\">\n        <Filename>${doc.fileName}</Filename>\n        ${description ? `<Description>${description}</Description>` : \"\"}\n      </Document>`);\n      }\n      if (docTags.length > 0) {\n        zip.file(\n          \"documents.xml\",\n          `<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n  <DocumentInfo xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"documents.xsd\">\n    <Documents>\n      ${docTags.join(\"\\n\")}\n    </Documents>\n  </DocumentInfo>`\n        );\n      }\n    }\n    zip.file(\"bcf.extensions\", this.serializeExtensions());\n    const viewpoints = this.components.get(Viewpoints);\n    for (const topic of topics) {\n      const topicFolder = zip.folder(topic.guid);\n      topicFolder.file(\"markup.bcf\", topic.serialize());\n      for (const viewpointID of topic.viewpoints) {\n        const viewpoint = viewpoints.list.get(viewpointID);\n        if (!viewpoint)\n          continue;\n        const viewpointFileName = viewpoint.title ?? viewpoint.guid;\n        topicFolder.file(\n          `${viewpointFileName}.bcfv`,\n          await viewpoint.serialize()\n        );\n        const snapshotData = viewpoints.snapshots.get(viewpoint.snapshot);\n        if (!snapshotData)\n          continue;\n        const snapshotFileName = snapshotData ? viewpoint.snapshot : viewpoint.guid;\n        const snapshotExtension = viewpoints.getSnapshotExtension(\n          viewpoint.snapshot\n        );\n        topicFolder.file(\n          `${snapshotFileName}.${snapshotExtension}`,\n          snapshotData,\n          {\n            binary: true\n          }\n        );\n      }\n    }\n    const content = await zip.generateAsync({ type: \"blob\" });\n    return content;\n  }\n  serializeExtensions() {\n    const types = [...this.config.types].map((type) => `<TopicType>${type}</TopicType>`).join(\"\\n\");\n    const statuses = [...this.config.statuses].map((status) => `<TopicStatus>${status}</TopicStatus>`).join(\"\\n\");\n    const priorities = [...this.config.priorities].map((priority) => `<Priority>${priority}</Priority>`).join(\"\\n\");\n    const labels = [...this.config.labels].map((label) => `<TopicLabel>${label}</TopicLabel>`).join(\"\\n\");\n    const stages = [...this.config.stages].map((stage) => `<Stage>${stage}</Stage>`).join(\"\\n\");\n    const users = [...this.config.users].map((user) => `<User>${user}</User>`).join(\"\\n\");\n    return `\n      <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n      <Extensions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"your-schema-location.xsd\">\n        ${types.length !== 0 ? `<TopicTypes>\n${types}\n</TopicTypes>` : \"\"}\n        ${statuses.length !== 0 ? `<TopicStatuses>\n${statuses}\n</TopicStatuses>` : \"\"}\n        ${priorities.length !== 0 ? `<Priorities>\n${priorities}\n</Priorities>` : \"\"}\n        ${labels.length !== 0 ? `<TopicLabels>\n${labels}\n</TopicLabels>` : \"\"}\n        ${stages.length !== 0 ? `<Stages>\n${stages}\n</Stages>` : \"\"}\n        ${users.length !== 0 ? `<Users>\n${users}\n</Users>` : \"\"}\n      </Extensions>\n    `;\n  }\n  processMarkupComment(markupComment) {\n    const {\n      Guid,\n      Date: CommentDate,\n      Author,\n      Comment: CommentText,\n      Viewpoint: Viewpoint2\n    } = markupComment;\n    if (!(Guid && CommentDate && Author && (Comment || Viewpoint2)))\n      return null;\n    const comment = new Comment(this.components, CommentText ?? \"\");\n    comment.guid = Guid;\n    comment.date = new Date(CommentDate);\n    comment.author = Author;\n    comment.viewpoint = Viewpoint2 == null ? void 0 : Viewpoint2.Guid;\n    comment.modifiedAuthor = markupComment.ModifiedAuthor;\n    comment.modifiedDate = markupComment.ModifiedDate ? new Date(markupComment.ModifiedDate) : void 0;\n    return comment;\n  }\n  getMarkupComments(markup, version) {\n    var _a2;\n    let data;\n    if (version === \"2.1\")\n      data = markup.Comment;\n    if (version === \"3\")\n      data = (_a2 = markup.Topic.Comments) == null ? void 0 : _a2.Comment;\n    if (!data)\n      return [];\n    data = Array.isArray(data) ? data : [data];\n    const comments = data.map((comment) => this.processMarkupComment(comment)).filter((comment) => comment);\n    const array = Array.isArray(comments) ? comments : [comments];\n    return array;\n  }\n  getMarkupLabels(markup, version) {\n    var _a2;\n    let data;\n    if (version === \"2.1\")\n      data = markup.Topic.Labels;\n    if (version === \"3\")\n      data = (_a2 = markup.Topic.Labels) == null ? void 0 : _a2.Label;\n    if (!data)\n      return [];\n    const labels = Array.isArray(data) ? data : [data];\n    return labels;\n  }\n  getMarkupViewpoints(markup, version) {\n    var _a2;\n    let data;\n    if (version === \"2.1\")\n      data = markup.Viewpoints;\n    if (version === \"3\")\n      data = (_a2 = markup.Topic.Viewpoints) == null ? void 0 : _a2.ViewPoint;\n    if (!data)\n      return [];\n    data = Array.isArray(data) ? data : [data];\n    return data;\n  }\n  getMarkupRelatedTopics(markup, version) {\n    var _a2;\n    let data;\n    if (version === \"2.1\")\n      data = markup.Topic.RelatedTopic;\n    if (version === \"3\")\n      data = (_a2 = markup.Topic.RelatedTopics) == null ? void 0 : _a2.RelatedTopic;\n    if (!data)\n      return [];\n    const topics = Array.isArray(data) ? data : [data];\n    return topics.map((topic) => topic.Guid);\n  }\n  getMarkupDocumentReferences(markup, version) {\n    var _a2;\n    let data;\n    if (version === \"2.1\")\n      data = markup.Topic.DocumentReference;\n    if (version === \"3\")\n      data = (_a2 = markup.Topic.DocumentReferences) == null ? void 0 : _a2.DocumentReference;\n    if (!data)\n      return [];\n    const references = Array.isArray(data) ? data : [data];\n    return references;\n  }\n  /**\n   * Loads BCF (Building Collaboration Format) data into the engine.\n   *\n   * @param world - The default world where the viewpoints are going to be created.\n   * @param data - The BCF data to load.\n   *\n   * @returns A promise that resolves to an object containing the created viewpoints and topics.\n   *\n   * @throws An error if the BCF version is not supported.\n   */\n  async load(data) {\n    var _a2, _b, _c;\n    const {\n      fallbackVersionOnImport,\n      ignoreIncompleteTopicsOnImport,\n      updateExtensionsOnImport\n    } = this.config;\n    const zip = new JSZip();\n    await zip.loadAsync(data);\n    const files = Object.values(zip.files);\n    let version = fallbackVersionOnImport;\n    const versionFile = files.find((file) => file.name.endsWith(\".version\"));\n    if (versionFile) {\n      const versionXML = await versionFile.async(\"string\");\n      const bcfVersion = _BCFTopics.xmlParser.parse(versionXML).Version.VersionId;\n      version = String(bcfVersion);\n    }\n    if (!(version && (version === \"2.1\" || version === \"3\"))) {\n      throw new Error(`BCFTopics: ${version} is not supported.`);\n    }\n    const extensionsFile = files.find(\n      (file) => file.name.endsWith(\".extensions\")\n    );\n    if (updateExtensionsOnImport && extensionsFile) {\n      const extensionsXML = await extensionsFile.async(\"string\");\n      extensionsImporter(this, extensionsXML);\n    }\n    const createdViewpoints = [];\n    const viewpoints = this.components.get(Viewpoints);\n    const viewpointFiles = files.filter((file) => file.name.endsWith(\".bcfv\"));\n    for (const viewpointFile of viewpointFiles) {\n      const xml = await viewpointFile.async(\"string\");\n      const visualizationInfo = _BCFTopics.xmlParser.parse(xml).VisualizationInfo;\n      if (!visualizationInfo) {\n        console.warn(\"Missing VisualizationInfo in Viewpoint\");\n        continue;\n      }\n      const bcfViewpoint = {};\n      const {\n        Guid,\n        ClippingPlanes,\n        Components: Components2,\n        OrthogonalCamera,\n        PerspectiveCamera\n      } = visualizationInfo;\n      if (Guid)\n        bcfViewpoint.guid = Guid;\n      if (Components2) {\n        const components = {\n          selection: [],\n          coloring: [],\n          visibility: {\n            default_visibility: false,\n            exceptions: [],\n            view_setup_hints: {\n              spaces_visible: false,\n              space_boundaries_visible: false,\n              openings_visible: false\n            }\n          }\n        };\n        bcfViewpoint.components = components;\n        const { Selection, Visibility } = Components2;\n        if (Selection && Selection.Component) {\n          const selectionComponents = Array.isArray(Selection.Component) ? Selection.Component : [Selection.Component];\n          components.selection = selectionComponents.map((component) => {\n            if (!component.IfcGuid)\n              return null;\n            return { ifc_guid: component.IfcGuid };\n          }).filter((data2) => data2 !== null);\n        }\n        if (Visibility && \"DefaultVisibility\" in Visibility) {\n          components.visibility.default_visibility = Visibility.DefaultVisibility;\n        }\n        if (Visibility && Visibility.Exceptions && \"Component\" in Visibility.Exceptions) {\n          const { Component: Component2 } = Visibility.Exceptions;\n          const exceptionComponents = Array.isArray(Component2) ? Component2 : [Component2];\n          components.visibility.exceptions = exceptionComponents.map((component) => {\n            if (!component.IfcGuid)\n              return null;\n            return { ifc_guid: component.IfcGuid };\n          }).filter((data2) => data2 !== null);\n        }\n        let ViewSetupHints;\n        if (version === \"2.1\") {\n          ViewSetupHints = Components2.ViewSetupHints;\n        }\n        if (version === \"3\") {\n          ViewSetupHints = (_a2 = Components2.Visibility) == null ? void 0 : _a2.ViewSetupHints;\n        }\n        if (ViewSetupHints) {\n          if (\"OpeningsVisible\" in ViewSetupHints) {\n            components.visibility.view_setup_hints.openings_visible = ViewSetupHints.OpeningsVisible;\n          }\n          if (\"SpacesVisible\" in ViewSetupHints) {\n            components.visibility.view_setup_hints.spaces_visible = ViewSetupHints.SpacesVisible;\n          }\n          if (\"SpaceBoundariesVisible\" in ViewSetupHints) {\n            components.visibility.view_setup_hints.space_boundaries_visible = ViewSetupHints.SpaceBoundariesVisible;\n          }\n        }\n        const { Coloring } = Components2;\n        if (Coloring && Coloring.Color) {\n          const colors = Array.isArray(Coloring.Color) ? Coloring.Color : [Coloring.Color];\n          for (const colorData of colors) {\n            const { Color, Component: Component2 } = colorData;\n            if (!(Color.length === 6 || Color.length === 8))\n              continue;\n            const color = Color.length === 6 ? Color : Color.slice(2);\n            const colorComponents = Array.isArray(Component2) ? Component2 : [Component2];\n            const guids = colorComponents.map((component) => {\n              if (!component.IfcGuid)\n                return null;\n              return { ifc_guid: component.IfcGuid };\n            }).filter((data2) => data2 !== null);\n            components.coloring.push({\n              color,\n              components: guids\n            });\n          }\n        }\n      }\n      if (OrthogonalCamera || PerspectiveCamera) {\n        const camera = visualizationInfo.PerspectiveCamera ?? visualizationInfo.OrthogonalCamera;\n        const { CameraViewPoint, CameraDirection } = camera;\n        const position = new THREE$1.Vector3(\n          Number(CameraViewPoint.X),\n          Number(CameraViewPoint.Z),\n          Number(-CameraViewPoint.Y)\n        );\n        const direction = new THREE$1.Vector3(\n          Number(CameraDirection.X),\n          Number(CameraDirection.Z),\n          Number(-CameraDirection.Y)\n        );\n        const viewpointCamera = {\n          camera_view_point: { x: position.x, y: position.y, z: position.z },\n          camera_direction: { x: direction.x, y: direction.y, z: direction.z },\n          aspect_ratio: \"AspectRatio\" in camera ? camera.AspectRatio : 1,\n          // TODO: Better define camera_up_vector\n          camera_up_vector: {\n            x: 0,\n            y: 0,\n            z: 0\n          }\n        };\n        if (\"ViewToWorldScale\" in camera) {\n          bcfViewpoint.orthogonal_camera = {\n            ...viewpointCamera,\n            view_to_world_scale: camera.ViewToWorldScale\n          };\n        }\n        if (\"FieldOfView\" in camera) {\n          bcfViewpoint.perspective_camera = {\n            ...viewpointCamera,\n            field_of_view: camera.FieldOfView\n          };\n        }\n      }\n      if (ClippingPlanes) {\n        const planes = Array.isArray(ClippingPlanes.ClippingPlane) ? ClippingPlanes.ClippingPlane : [ClippingPlanes.ClippingPlane];\n        const clippingPlanes = planes.map(\n          ({ Location, Direction }) => {\n            return {\n              location: { x: Location.x, y: Location.y, z: Location.z },\n              direction: { x: Direction.x, y: Direction.y, z: Direction.z }\n            };\n          }\n        );\n        bcfViewpoint.clipping_planes = clippingPlanes;\n      }\n      const viewpoint = new Viewpoint(this.components, bcfViewpoint);\n      createdViewpoints.push(viewpoint);\n    }\n    const getNameWithoutExtension = (name) => {\n      const partsBySlash = name.split(\"/\");\n      const partsByDot = partsBySlash[partsBySlash.length - 1].split(\".\");\n      partsByDot.pop();\n      return partsByDot.join(\".\");\n    };\n    const snapshotFiles = files.filter(\n      (file) => file.name.endsWith(\".png\") || file.name.endsWith(\".jpeg\")\n    );\n    for (const file of snapshotFiles) {\n      const name = getNameWithoutExtension(file.name);\n      const buffer = await file.async(\"arraybuffer\");\n      const bytes = new Uint8Array(buffer);\n      viewpoints.snapshots.set(name, bytes);\n    }\n    const topicRelations = {};\n    const topics = [];\n    const markupFiles = files.filter((file) => file.name.endsWith(\".bcf\"));\n    for (const markupFile of markupFiles) {\n      const xml = await markupFile.async(\"string\");\n      const markup = _BCFTopics.xmlParser.parse(xml).Markup;\n      const markupTopic = markup.Topic;\n      const {\n        Guid,\n        TopicType,\n        TopicStatus,\n        Title,\n        CreationDate,\n        CreationAuthor\n      } = markupTopic;\n      if (ignoreIncompleteTopicsOnImport) {\n        if (!(Guid && TopicType && TopicStatus && Title && CreationDate && CreationAuthor))\n          continue;\n      }\n      const topic = new Topic(this.components);\n      topic.guid = Guid ?? topic.guid;\n      const relatedTopics = this.getMarkupRelatedTopics(markup, version);\n      topicRelations[topic.guid] = new Set(relatedTopics);\n      topic.type = TopicType ?? topic.type;\n      topic.status = TopicStatus ?? topic.status;\n      topic.title = Title ?? topic.title;\n      topic.creationDate = CreationDate ? new Date(CreationDate) : topic.creationDate;\n      topic.creationAuthor = CreationAuthor ?? topic.creationAuthor;\n      topic.serverAssignedId = markupTopic.ServerAssignedId;\n      topic.priority = markupTopic.Priority;\n      topic.index = markupTopic.Index;\n      topic.modifiedDate = markupTopic.ModifiedDate ? new Date(markupTopic.ModifiedDate) : void 0;\n      topic.modifiedAuthor = markupTopic.ModifiedAuthor;\n      topic.dueDate = markupTopic.DueDate ? new Date(markupTopic.DueDate) : void 0;\n      topic.assignedTo = markupTopic.AssignedTo;\n      topic.description = markupTopic.Description;\n      topic.stage = markupTopic.Stage;\n      const labels = this.getMarkupLabels(markup, version);\n      for (const label of labels)\n        topic.labels.add(label);\n      const comments = this.getMarkupComments(markup, version);\n      for (const comment of comments)\n        topic.comments.set(comment.guid, comment);\n      const markupViewpoints = this.getMarkupViewpoints(markup, version);\n      for (const markupViewpoint of markupViewpoints) {\n        if (!(markupViewpoint && markupViewpoint.Guid))\n          continue;\n        const viewpoint = viewpoints.list.get(markupViewpoint.Guid);\n        if (viewpoint) {\n          topic.viewpoints.add(viewpoint.guid);\n          const snapshotName = getNameWithoutExtension(\n            markupViewpoint.Snapshot\n          );\n          viewpoint.snapshot = snapshotName ?? null;\n        }\n      }\n      const markupDocReferences = this.getMarkupDocumentReferences(\n        markup,\n        version\n      );\n      const documentsFile = files.find((file) => file.name === \"documents.xml\");\n      let documentsData = [];\n      const documentsListXML = await (documentsFile == null ? void 0 : documentsFile.async(\"string\"));\n      if (documentsListXML) {\n        const data2 = (_c = (_b = XML.parser.parse(documentsListXML).DocumentInfo) == null ? void 0 : _b.Documents) == null ? void 0 : _c.Document;\n        documentsData = Array.isArray(data2) ? data2 : [data2];\n      }\n      for (const reference of markupDocReferences) {\n        const {\n          Description: description,\n          // From 3.0\n          DocumentGuid,\n          Url: url,\n          // From 2.1\n          isExternal,\n          ReferencedDocument\n        } = reference;\n        if (DocumentGuid && documentsData.length > 0) {\n          const docInfo = documentsData.find(\n            ({ Guid: Guid2 }) => Guid2 === DocumentGuid\n          );\n          const docFile = files.find(\n            (file) => file.name.endsWith(DocumentGuid)\n          );\n          const data2 = await (docFile == null ? void 0 : docFile.async(\"uint8array\"));\n          if (!(docInfo && data2))\n            continue;\n          const { Description: description2, Filename: fileName } = docInfo;\n          this.documents.set(DocumentGuid, {\n            type: \"internal\",\n            fileName,\n            description: description2,\n            data: data2\n          });\n          topic.documentReferences.add(DocumentGuid);\n        }\n        if (url) {\n          const docGuid = this.documents.add({\n            type: \"external\",\n            url,\n            description\n          });\n          topic.documentReferences.add(docGuid);\n        }\n        if (ReferencedDocument) {\n          let docGuid = null;\n          if (isExternal) {\n            docGuid = this.documents.add({\n              type: \"external\",\n              url: ReferencedDocument,\n              description\n            });\n          } else {\n            const splitPath = ReferencedDocument.split(\"/\");\n            const fileName = splitPath[splitPath.length - 1];\n            const docFile = files.find((file) => file.name.endsWith(fileName));\n            const data2 = await (docFile == null ? void 0 : docFile.async(\"uint8array\"));\n            if (!data2)\n              continue;\n            docGuid = this.documents.add({\n              type: \"internal\",\n              fileName,\n              data: data2,\n              description\n            });\n          }\n          topic.documentReferences.add(docGuid);\n        }\n      }\n      this.list.set(topic.guid, topic);\n      topics.push(topic);\n    }\n    for (const topicID in topicRelations) {\n      const topic = this.list.get(topicID);\n      if (!topic)\n        continue;\n      const relations = topicRelations[topicID];\n      for (const guid of relations) {\n        topic.relatedTopics.add(guid);\n      }\n    }\n    this.onBCFImported.trigger(topics);\n    return { viewpoints: createdViewpoints, topics };\n  }\n};\n__publicField(_BCFTopics, \"uuid\", \"de977976-e4f6-4e4f-a01a-204727839802\");\n__publicField(_BCFTopics, \"xmlParser\", new fxp.XMLParser({\n  allowBooleanAttributes: true,\n  attributeNamePrefix: \"\",\n  ignoreAttributes: false,\n  ignoreDeclaration: true,\n  ignorePiTags: true,\n  numberParseOptions: { leadingZeros: true, hex: true },\n  parseAttributeValue: true,\n  preserveOrder: false,\n  processEntities: false,\n  removeNSPrefix: true,\n  trimValues: true\n}));\nlet BCFTopics = _BCFTopics;\nconst _raycaster = new Raycaster();\nconst _tempVector = new Vector3();\nconst _tempVector2 = new Vector3();\nconst _tempQuaternion = new Quaternion();\nconst _unit = {\n  X: new Vector3(1, 0, 0),\n  Y: new Vector3(0, 1, 0),\n  Z: new Vector3(0, 0, 1)\n};\nconst _changeEvent = { type: \"change\" };\nconst _mouseDownEvent = { type: \"mouseDown\", mode: null };\nconst _mouseUpEvent = { type: \"mouseUp\", mode: null };\nconst _objectChangeEvent = { type: \"objectChange\" };\nclass TransformControls extends Controls {\n  /**\n   * Constructs a new controls instance.\n   *\n   * @param {Camera} camera - The camera of the rendered scene.\n   * @param {?HTMLDOMElement} domElement - The HTML element used for event listeners.\n   */\n  constructor(camera, domElement = null) {\n    super(void 0, domElement);\n    const root = new TransformControlsRoot(this);\n    this._root = root;\n    const gizmo = new TransformControlsGizmo();\n    this._gizmo = gizmo;\n    root.add(gizmo);\n    const plane = new TransformControlsPlane();\n    this._plane = plane;\n    root.add(plane);\n    const scope = this;\n    function defineProperty(propName2, defaultValue) {\n      let propValue = defaultValue;\n      Object.defineProperty(scope, propName2, {\n        get: function() {\n          return propValue !== void 0 ? propValue : defaultValue;\n        },\n        set: function(value) {\n          if (propValue !== value) {\n            propValue = value;\n            plane[propName2] = value;\n            gizmo[propName2] = value;\n            scope.dispatchEvent({ type: propName2 + \"-changed\", value });\n            scope.dispatchEvent(_changeEvent);\n          }\n        }\n      });\n      scope[propName2] = defaultValue;\n      plane[propName2] = defaultValue;\n      gizmo[propName2] = defaultValue;\n    }\n    defineProperty(\"camera\", camera);\n    defineProperty(\"object\", void 0);\n    defineProperty(\"enabled\", true);\n    defineProperty(\"axis\", null);\n    defineProperty(\"mode\", \"translate\");\n    defineProperty(\"translationSnap\", null);\n    defineProperty(\"rotationSnap\", null);\n    defineProperty(\"scaleSnap\", null);\n    defineProperty(\"space\", \"world\");\n    defineProperty(\"size\", 1);\n    defineProperty(\"dragging\", false);\n    defineProperty(\"showX\", true);\n    defineProperty(\"showY\", true);\n    defineProperty(\"showZ\", true);\n    defineProperty(\"minX\", -Infinity);\n    defineProperty(\"maxX\", Infinity);\n    defineProperty(\"minY\", -Infinity);\n    defineProperty(\"maxY\", Infinity);\n    defineProperty(\"minZ\", -Infinity);\n    defineProperty(\"maxZ\", Infinity);\n    const worldPosition = new Vector3();\n    const worldPositionStart = new Vector3();\n    const worldQuaternion = new Quaternion();\n    const worldQuaternionStart = new Quaternion();\n    const cameraPosition = new Vector3();\n    const cameraQuaternion = new Quaternion();\n    const pointStart = new Vector3();\n    const pointEnd = new Vector3();\n    const rotationAxis = new Vector3();\n    const rotationAngle = 0;\n    const eye = new Vector3();\n    defineProperty(\"worldPosition\", worldPosition);\n    defineProperty(\"worldPositionStart\", worldPositionStart);\n    defineProperty(\"worldQuaternion\", worldQuaternion);\n    defineProperty(\"worldQuaternionStart\", worldQuaternionStart);\n    defineProperty(\"cameraPosition\", cameraPosition);\n    defineProperty(\"cameraQuaternion\", cameraQuaternion);\n    defineProperty(\"pointStart\", pointStart);\n    defineProperty(\"pointEnd\", pointEnd);\n    defineProperty(\"rotationAxis\", rotationAxis);\n    defineProperty(\"rotationAngle\", rotationAngle);\n    defineProperty(\"eye\", eye);\n    this._offset = new Vector3();\n    this._startNorm = new Vector3();\n    this._endNorm = new Vector3();\n    this._cameraScale = new Vector3();\n    this._parentPosition = new Vector3();\n    this._parentQuaternion = new Quaternion();\n    this._parentQuaternionInv = new Quaternion();\n    this._parentScale = new Vector3();\n    this._worldScaleStart = new Vector3();\n    this._worldQuaternionInv = new Quaternion();\n    this._worldScale = new Vector3();\n    this._positionStart = new Vector3();\n    this._quaternionStart = new Quaternion();\n    this._scaleStart = new Vector3();\n    this._getPointer = getPointer.bind(this);\n    this._onPointerDown = onPointerDown.bind(this);\n    this._onPointerHover = onPointerHover.bind(this);\n    this._onPointerMove = onPointerMove.bind(this);\n    this._onPointerUp = onPointerUp.bind(this);\n    if (domElement !== null) {\n      this.connect(domElement);\n    }\n  }\n  connect(element) {\n    super.connect(element);\n    this.domElement.addEventListener(\"pointerdown\", this._onPointerDown);\n    this.domElement.addEventListener(\"pointermove\", this._onPointerHover);\n    this.domElement.addEventListener(\"pointerup\", this._onPointerUp);\n    this.domElement.style.touchAction = \"none\";\n  }\n  disconnect() {\n    this.domElement.removeEventListener(\"pointerdown\", this._onPointerDown);\n    this.domElement.removeEventListener(\"pointermove\", this._onPointerHover);\n    this.domElement.removeEventListener(\"pointermove\", this._onPointerMove);\n    this.domElement.removeEventListener(\"pointerup\", this._onPointerUp);\n    this.domElement.style.touchAction = \"auto\";\n  }\n  /**\n   * Returns the visual representation of the controls. Add the helper to your scene to\n   * visually transform the attached  3D object.\n   *\n   * @return {TransformControlsRoot} The helper.\n   */\n  getHelper() {\n    return this._root;\n  }\n  pointerHover(pointer) {\n    if (this.object === void 0 || this.dragging === true)\n      return;\n    if (pointer !== null)\n      _raycaster.setFromCamera(pointer, this.camera);\n    const intersect = intersectObjectWithRay(this._gizmo.picker[this.mode], _raycaster);\n    if (intersect) {\n      this.axis = intersect.object.name;\n    } else {\n      this.axis = null;\n    }\n  }\n  pointerDown(pointer) {\n    if (this.object === void 0 || this.dragging === true || pointer != null && pointer.button !== 0)\n      return;\n    if (this.axis !== null) {\n      if (pointer !== null)\n        _raycaster.setFromCamera(pointer, this.camera);\n      const planeIntersect = intersectObjectWithRay(this._plane, _raycaster, true);\n      if (planeIntersect) {\n        this.object.updateMatrixWorld();\n        this.object.parent.updateMatrixWorld();\n        this._positionStart.copy(this.object.position);\n        this._quaternionStart.copy(this.object.quaternion);\n        this._scaleStart.copy(this.object.scale);\n        this.object.matrixWorld.decompose(this.worldPositionStart, this.worldQuaternionStart, this._worldScaleStart);\n        this.pointStart.copy(planeIntersect.point).sub(this.worldPositionStart);\n      }\n      this.dragging = true;\n      _mouseDownEvent.mode = this.mode;\n      this.dispatchEvent(_mouseDownEvent);\n    }\n  }\n  pointerMove(pointer) {\n    const axis = this.axis;\n    const mode = this.mode;\n    const object = this.object;\n    let space = this.space;\n    if (mode === \"scale\") {\n      space = \"local\";\n    } else if (axis === \"E\" || axis === \"XYZE\" || axis === \"XYZ\") {\n      space = \"world\";\n    }\n    if (object === void 0 || axis === null || this.dragging === false || pointer !== null && pointer.button !== -1)\n      return;\n    if (pointer !== null)\n      _raycaster.setFromCamera(pointer, this.camera);\n    const planeIntersect = intersectObjectWithRay(this._plane, _raycaster, true);\n    if (!planeIntersect)\n      return;\n    this.pointEnd.copy(planeIntersect.point).sub(this.worldPositionStart);\n    if (mode === \"translate\") {\n      this._offset.copy(this.pointEnd).sub(this.pointStart);\n      if (space === \"local\" && axis !== \"XYZ\") {\n        this._offset.applyQuaternion(this._worldQuaternionInv);\n      }\n      if (axis.indexOf(\"X\") === -1)\n        this._offset.x = 0;\n      if (axis.indexOf(\"Y\") === -1)\n        this._offset.y = 0;\n      if (axis.indexOf(\"Z\") === -1)\n        this._offset.z = 0;\n      if (space === \"local\" && axis !== \"XYZ\") {\n        this._offset.applyQuaternion(this._quaternionStart).divide(this._parentScale);\n      } else {\n        this._offset.applyQuaternion(this._parentQuaternionInv).divide(this._parentScale);\n      }\n      object.position.copy(this._offset).add(this._positionStart);\n      if (this.translationSnap) {\n        if (space === \"local\") {\n          object.position.applyQuaternion(_tempQuaternion.copy(this._quaternionStart).invert());\n          if (axis.search(\"X\") !== -1) {\n            object.position.x = Math.round(object.position.x / this.translationSnap) * this.translationSnap;\n          }\n          if (axis.search(\"Y\") !== -1) {\n            object.position.y = Math.round(object.position.y / this.translationSnap) * this.translationSnap;\n          }\n          if (axis.search(\"Z\") !== -1) {\n            object.position.z = Math.round(object.position.z / this.translationSnap) * this.translationSnap;\n          }\n          object.position.applyQuaternion(this._quaternionStart);\n        }\n        if (space === \"world\") {\n          if (object.parent) {\n            object.position.add(_tempVector.setFromMatrixPosition(object.parent.matrixWorld));\n          }\n          if (axis.search(\"X\") !== -1) {\n            object.position.x = Math.round(object.position.x / this.translationSnap) * this.translationSnap;\n          }\n          if (axis.search(\"Y\") !== -1) {\n            object.position.y = Math.round(object.position.y / this.translationSnap) * this.translationSnap;\n          }\n          if (axis.search(\"Z\") !== -1) {\n            object.position.z = Math.round(object.position.z / this.translationSnap) * this.translationSnap;\n          }\n          if (object.parent) {\n            object.position.sub(_tempVector.setFromMatrixPosition(object.parent.matrixWorld));\n          }\n        }\n      }\n      object.position.x = Math.max(this.minX, Math.min(this.maxX, object.position.x));\n      object.position.y = Math.max(this.minY, Math.min(this.maxY, object.position.y));\n      object.position.z = Math.max(this.minZ, Math.min(this.maxZ, object.position.z));\n    } else if (mode === \"scale\") {\n      if (axis.search(\"XYZ\") !== -1) {\n        let d = this.pointEnd.length() / this.pointStart.length();\n        if (this.pointEnd.dot(this.pointStart) < 0)\n          d *= -1;\n        _tempVector2.set(d, d, d);\n      } else {\n        _tempVector.copy(this.pointStart);\n        _tempVector2.copy(this.pointEnd);\n        _tempVector.applyQuaternion(this._worldQuaternionInv);\n        _tempVector2.applyQuaternion(this._worldQuaternionInv);\n        _tempVector2.divide(_tempVector);\n        if (axis.search(\"X\") === -1) {\n          _tempVector2.x = 1;\n        }\n        if (axis.search(\"Y\") === -1) {\n          _tempVector2.y = 1;\n        }\n        if (axis.search(\"Z\") === -1) {\n          _tempVector2.z = 1;\n        }\n      }\n      object.scale.copy(this._scaleStart).multiply(_tempVector2);\n      if (this.scaleSnap) {\n        if (axis.search(\"X\") !== -1) {\n          object.scale.x = Math.round(object.scale.x / this.scaleSnap) * this.scaleSnap || this.scaleSnap;\n        }\n        if (axis.search(\"Y\") !== -1) {\n          object.scale.y = Math.round(object.scale.y / this.scaleSnap) * this.scaleSnap || this.scaleSnap;\n        }\n        if (axis.search(\"Z\") !== -1) {\n          object.scale.z = Math.round(object.scale.z / this.scaleSnap) * this.scaleSnap || this.scaleSnap;\n        }\n      }\n    } else if (mode === \"rotate\") {\n      this._offset.copy(this.pointEnd).sub(this.pointStart);\n      const ROTATION_SPEED = 20 / this.worldPosition.distanceTo(_tempVector.setFromMatrixPosition(this.camera.matrixWorld));\n      let _inPlaneRotation = false;\n      if (axis === \"XYZE\") {\n        this.rotationAxis.copy(this._offset).cross(this.eye).normalize();\n        this.rotationAngle = this._offset.dot(_tempVector.copy(this.rotationAxis).cross(this.eye)) * ROTATION_SPEED;\n      } else if (axis === \"X\" || axis === \"Y\" || axis === \"Z\") {\n        this.rotationAxis.copy(_unit[axis]);\n        _tempVector.copy(_unit[axis]);\n        if (space === \"local\") {\n          _tempVector.applyQuaternion(this.worldQuaternion);\n        }\n        _tempVector.cross(this.eye);\n        if (_tempVector.length() === 0) {\n          _inPlaneRotation = true;\n        } else {\n          this.rotationAngle = this._offset.dot(_tempVector.normalize()) * ROTATION_SPEED;\n        }\n      }\n      if (axis === \"E\" || _inPlaneRotation) {\n        this.rotationAxis.copy(this.eye);\n        this.rotationAngle = this.pointEnd.angleTo(this.pointStart);\n        this._startNorm.copy(this.pointStart).normalize();\n        this._endNorm.copy(this.pointEnd).normalize();\n        this.rotationAngle *= this._endNorm.cross(this._startNorm).dot(this.eye) < 0 ? 1 : -1;\n      }\n      if (this.rotationSnap)\n        this.rotationAngle = Math.round(this.rotationAngle / this.rotationSnap) * this.rotationSnap;\n      if (space === \"local\" && axis !== \"E\" && axis !== \"XYZE\") {\n        object.quaternion.copy(this._quaternionStart);\n        object.quaternion.multiply(_tempQuaternion.setFromAxisAngle(this.rotationAxis, this.rotationAngle)).normalize();\n      } else {\n        this.rotationAxis.applyQuaternion(this._parentQuaternionInv);\n        object.quaternion.copy(_tempQuaternion.setFromAxisAngle(this.rotationAxis, this.rotationAngle));\n        object.quaternion.multiply(this._quaternionStart).normalize();\n      }\n    }\n    this.dispatchEvent(_changeEvent);\n    this.dispatchEvent(_objectChangeEvent);\n  }\n  pointerUp(pointer) {\n    if (pointer !== null && pointer.button !== 0)\n      return;\n    if (this.dragging && this.axis !== null) {\n      _mouseUpEvent.mode = this.mode;\n      this.dispatchEvent(_mouseUpEvent);\n    }\n    this.dragging = false;\n    this.axis = null;\n  }\n  dispose() {\n    this.disconnect();\n    this._root.dispose();\n  }\n  /**\n   * Sets the 3D object that should be transformed and ensures the controls UI is visible.\n   *\n   * @param {Object3D} object -  The 3D object that should be transformed.\n   * @return {TransformControls} A reference to this controls.\n   */\n  attach(object) {\n    this.object = object;\n    this._root.visible = true;\n    return this;\n  }\n  /**\n   * Removes the current 3D object from the controls and makes the helper UI invisible.\n   *\n   * @return {TransformControls} A reference to this controls.\n   */\n  detach() {\n    this.object = void 0;\n    this.axis = null;\n    this._root.visible = false;\n    return this;\n  }\n  /**\n   * Resets the object's position, rotation and scale to when the current transform began.\n   */\n  reset() {\n    if (!this.enabled)\n      return;\n    if (this.dragging) {\n      this.object.position.copy(this._positionStart);\n      this.object.quaternion.copy(this._quaternionStart);\n      this.object.scale.copy(this._scaleStart);\n      this.dispatchEvent(_changeEvent);\n      this.dispatchEvent(_objectChangeEvent);\n      this.pointStart.copy(this.pointEnd);\n    }\n  }\n  /**\n   * Returns the raycaster that is used for user interaction. This object is shared between all\n   * instances of `TransformControls`.\n   *\n   * @returns {Raycaster} The internal raycaster.\n   */\n  getRaycaster() {\n    return _raycaster;\n  }\n  /**\n   * Returns the transformation mode.\n   *\n   * @returns {'translate'|'rotate'|'scale'} The transformation mode.\n   */\n  getMode() {\n    return this.mode;\n  }\n  /**\n   * Sets the given transformation mode.\n   *\n   * @param {'translate'|'rotate'|'scale'} mode - The transformation mode to set.\n   */\n  setMode(mode) {\n    this.mode = mode;\n  }\n  /**\n   * Sets the translation snap.\n   *\n   * @param {?number} translationSnap - The translation snap to set.\n   */\n  setTranslationSnap(translationSnap) {\n    this.translationSnap = translationSnap;\n  }\n  /**\n   * Sets the rotation snap.\n   *\n   * @param {?number} rotationSnap - The rotation snap to set.\n   */\n  setRotationSnap(rotationSnap) {\n    this.rotationSnap = rotationSnap;\n  }\n  /**\n   * Sets the scale snap.\n   *\n   * @param {?number} scaleSnap - The scale snap to set.\n   */\n  setScaleSnap(scaleSnap) {\n    this.scaleSnap = scaleSnap;\n  }\n  /**\n   * Sets the size of the helper UI.\n   *\n   * @param {number} size - The size to set.\n   */\n  setSize(size) {\n    this.size = size;\n  }\n  /**\n   * Sets the coordinate space in which transformations are applied.\n   *\n   * @param {'world'|'local'} space - The space to set.\n   */\n  setSpace(space) {\n    this.space = space;\n  }\n}\nfunction getPointer(event) {\n  if (this.domElement.ownerDocument.pointerLockElement) {\n    return {\n      x: 0,\n      y: 0,\n      button: event.button\n    };\n  } else {\n    const rect = this.domElement.getBoundingClientRect();\n    return {\n      x: (event.clientX - rect.left) / rect.width * 2 - 1,\n      y: -(event.clientY - rect.top) / rect.height * 2 + 1,\n      button: event.button\n    };\n  }\n}\nfunction onPointerHover(event) {\n  if (!this.enabled)\n    return;\n  switch (event.pointerType) {\n    case \"mouse\":\n    case \"pen\":\n      this.pointerHover(this._getPointer(event));\n      break;\n  }\n}\nfunction onPointerDown(event) {\n  if (!this.enabled)\n    return;\n  if (!document.pointerLockElement) {\n    this.domElement.setPointerCapture(event.pointerId);\n  }\n  this.domElement.addEventListener(\"pointermove\", this._onPointerMove);\n  this.pointerHover(this._getPointer(event));\n  this.pointerDown(this._getPointer(event));\n}\nfunction onPointerMove(event) {\n  if (!this.enabled)\n    return;\n  this.pointerMove(this._getPointer(event));\n}\nfunction onPointerUp(event) {\n  if (!this.enabled)\n    return;\n  this.domElement.releasePointerCapture(event.pointerId);\n  this.domElement.removeEventListener(\"pointermove\", this._onPointerMove);\n  this.pointerUp(this._getPointer(event));\n}\nfunction intersectObjectWithRay(object, raycaster, includeInvisible) {\n  const allIntersections = raycaster.intersectObject(object, true);\n  for (let i = 0; i < allIntersections.length; i++) {\n    if (allIntersections[i].object.visible || includeInvisible) {\n      return allIntersections[i];\n    }\n  }\n  return false;\n}\nconst _tempEuler = new Euler();\nconst _alignVector = new Vector3(0, 1, 0);\nconst _zeroVector = new Vector3(0, 0, 0);\nconst _lookAtMatrix = new Matrix4();\nconst _tempQuaternion2 = new Quaternion();\nconst _identityQuaternion = new Quaternion();\nconst _dirVector = new Vector3();\nconst _tempMatrix = new Matrix4();\nconst _unitX = new Vector3(1, 0, 0);\nconst _unitY = new Vector3(0, 1, 0);\nconst _unitZ = new Vector3(0, 0, 1);\nconst _v1 = new Vector3();\nconst _v2 = new Vector3();\nconst _v3 = new Vector3();\nclass TransformControlsRoot extends Object3D {\n  constructor(controls) {\n    super();\n    this.isTransformControlsRoot = true;\n    this.controls = controls;\n    this.visible = false;\n  }\n  // updateMatrixWorld updates key transformation variables\n  updateMatrixWorld(force) {\n    const controls = this.controls;\n    if (controls.object !== void 0) {\n      controls.object.updateMatrixWorld();\n      if (controls.object.parent === null) {\n        console.error(\"TransformControls: The attached 3D object must be a part of the scene graph.\");\n      } else {\n        controls.object.parent.matrixWorld.decompose(controls._parentPosition, controls._parentQuaternion, controls._parentScale);\n      }\n      controls.object.matrixWorld.decompose(controls.worldPosition, controls.worldQuaternion, controls._worldScale);\n      controls._parentQuaternionInv.copy(controls._parentQuaternion).invert();\n      controls._worldQuaternionInv.copy(controls.worldQuaternion).invert();\n    }\n    controls.camera.updateMatrixWorld();\n    controls.camera.matrixWorld.decompose(controls.cameraPosition, controls.cameraQuaternion, controls._cameraScale);\n    if (controls.camera.isOrthographicCamera) {\n      controls.camera.getWorldDirection(controls.eye).negate();\n    } else {\n      controls.eye.copy(controls.cameraPosition).sub(controls.worldPosition).normalize();\n    }\n    super.updateMatrixWorld(force);\n  }\n  dispose() {\n    this.traverse(function(child) {\n      if (child.geometry)\n        child.geometry.dispose();\n      if (child.material)\n        child.material.dispose();\n    });\n  }\n}\nclass TransformControlsGizmo extends Object3D {\n  constructor() {\n    super();\n    this.isTransformControlsGizmo = true;\n    this.type = \"TransformControlsGizmo\";\n    const gizmoMaterial = new MeshBasicMaterial({\n      depthTest: false,\n      depthWrite: false,\n      fog: false,\n      toneMapped: false,\n      transparent: true\n    });\n    const gizmoLineMaterial = new LineBasicMaterial({\n      depthTest: false,\n      depthWrite: false,\n      fog: false,\n      toneMapped: false,\n      transparent: true\n    });\n    const matInvisible = gizmoMaterial.clone();\n    matInvisible.opacity = 0.15;\n    const matHelper = gizmoLineMaterial.clone();\n    matHelper.opacity = 0.5;\n    const matRed = gizmoMaterial.clone();\n    matRed.color.setHex(16711680);\n    const matGreen = gizmoMaterial.clone();\n    matGreen.color.setHex(65280);\n    const matBlue = gizmoMaterial.clone();\n    matBlue.color.setHex(255);\n    const matRedTransparent = gizmoMaterial.clone();\n    matRedTransparent.color.setHex(16711680);\n    matRedTransparent.opacity = 0.5;\n    const matGreenTransparent = gizmoMaterial.clone();\n    matGreenTransparent.color.setHex(65280);\n    matGreenTransparent.opacity = 0.5;\n    const matBlueTransparent = gizmoMaterial.clone();\n    matBlueTransparent.color.setHex(255);\n    matBlueTransparent.opacity = 0.5;\n    const matWhiteTransparent = gizmoMaterial.clone();\n    matWhiteTransparent.opacity = 0.25;\n    const matYellowTransparent = gizmoMaterial.clone();\n    matYellowTransparent.color.setHex(16776960);\n    matYellowTransparent.opacity = 0.25;\n    const matYellow = gizmoMaterial.clone();\n    matYellow.color.setHex(16776960);\n    const matGray = gizmoMaterial.clone();\n    matGray.color.setHex(7895160);\n    const arrowGeometry = new CylinderGeometry(0, 0.04, 0.1, 12);\n    arrowGeometry.translate(0, 0.05, 0);\n    const scaleHandleGeometry = new BoxGeometry(0.08, 0.08, 0.08);\n    scaleHandleGeometry.translate(0, 0.04, 0);\n    const lineGeometry = new BufferGeometry();\n    lineGeometry.setAttribute(\"position\", new Float32BufferAttribute([0, 0, 0, 1, 0, 0], 3));\n    const lineGeometry2 = new CylinderGeometry(75e-4, 75e-4, 0.5, 3);\n    lineGeometry2.translate(0, 0.25, 0);\n    function CircleGeometry(radius, arc) {\n      const geometry = new TorusGeometry(radius, 75e-4, 3, 64, arc * Math.PI * 2);\n      geometry.rotateY(Math.PI / 2);\n      geometry.rotateX(Math.PI / 2);\n      return geometry;\n    }\n    function TranslateHelperGeometry() {\n      const geometry = new BufferGeometry();\n      geometry.setAttribute(\"position\", new Float32BufferAttribute([0, 0, 0, 1, 1, 1], 3));\n      return geometry;\n    }\n    const gizmoTranslate = {\n      X: [\n        [new Mesh(arrowGeometry, matRed), [0.5, 0, 0], [0, 0, -Math.PI / 2]],\n        [new Mesh(arrowGeometry, matRed), [-0.5, 0, 0], [0, 0, Math.PI / 2]],\n        [new Mesh(lineGeometry2, matRed), [0, 0, 0], [0, 0, -Math.PI / 2]]\n      ],\n      Y: [\n        [new Mesh(arrowGeometry, matGreen), [0, 0.5, 0]],\n        [new Mesh(arrowGeometry, matGreen), [0, -0.5, 0], [Math.PI, 0, 0]],\n        [new Mesh(lineGeometry2, matGreen)]\n      ],\n      Z: [\n        [new Mesh(arrowGeometry, matBlue), [0, 0, 0.5], [Math.PI / 2, 0, 0]],\n        [new Mesh(arrowGeometry, matBlue), [0, 0, -0.5], [-Math.PI / 2, 0, 0]],\n        [new Mesh(lineGeometry2, matBlue), null, [Math.PI / 2, 0, 0]]\n      ],\n      XYZ: [\n        [new Mesh(new OctahedronGeometry(0.1, 0), matWhiteTransparent.clone()), [0, 0, 0]]\n      ],\n      XY: [\n        [new Mesh(new BoxGeometry(0.15, 0.15, 0.01), matBlueTransparent.clone()), [0.15, 0.15, 0]]\n      ],\n      YZ: [\n        [new Mesh(new BoxGeometry(0.15, 0.15, 0.01), matRedTransparent.clone()), [0, 0.15, 0.15], [0, Math.PI / 2, 0]]\n      ],\n      XZ: [\n        [new Mesh(new BoxGeometry(0.15, 0.15, 0.01), matGreenTransparent.clone()), [0.15, 0, 0.15], [-Math.PI / 2, 0, 0]]\n      ]\n    };\n    const pickerTranslate = {\n      X: [\n        [new Mesh(new CylinderGeometry(0.2, 0, 0.6, 4), matInvisible), [0.3, 0, 0], [0, 0, -Math.PI / 2]],\n        [new Mesh(new CylinderGeometry(0.2, 0, 0.6, 4), matInvisible), [-0.3, 0, 0], [0, 0, Math.PI / 2]]\n      ],\n      Y: [\n        [new Mesh(new CylinderGeometry(0.2, 0, 0.6, 4), matInvisible), [0, 0.3, 0]],\n        [new Mesh(new CylinderGeometry(0.2, 0, 0.6, 4), matInvisible), [0, -0.3, 0], [0, 0, Math.PI]]\n      ],\n      Z: [\n        [new Mesh(new CylinderGeometry(0.2, 0, 0.6, 4), matInvisible), [0, 0, 0.3], [Math.PI / 2, 0, 0]],\n        [new Mesh(new CylinderGeometry(0.2, 0, 0.6, 4), matInvisible), [0, 0, -0.3], [-Math.PI / 2, 0, 0]]\n      ],\n      XYZ: [\n        [new Mesh(new OctahedronGeometry(0.2, 0), matInvisible)]\n      ],\n      XY: [\n        [new Mesh(new BoxGeometry(0.2, 0.2, 0.01), matInvisible), [0.15, 0.15, 0]]\n      ],\n      YZ: [\n        [new Mesh(new BoxGeometry(0.2, 0.2, 0.01), matInvisible), [0, 0.15, 0.15], [0, Math.PI / 2, 0]]\n      ],\n      XZ: [\n        [new Mesh(new BoxGeometry(0.2, 0.2, 0.01), matInvisible), [0.15, 0, 0.15], [-Math.PI / 2, 0, 0]]\n      ]\n    };\n    const helperTranslate = {\n      START: [\n        [new Mesh(new OctahedronGeometry(0.01, 2), matHelper), null, null, null, \"helper\"]\n      ],\n      END: [\n        [new Mesh(new OctahedronGeometry(0.01, 2), matHelper), null, null, null, \"helper\"]\n      ],\n      DELTA: [\n        [new Line(TranslateHelperGeometry(), matHelper), null, null, null, \"helper\"]\n      ],\n      X: [\n        [new Line(lineGeometry, matHelper.clone()), [-1e3, 0, 0], null, [1e6, 1, 1], \"helper\"]\n      ],\n      Y: [\n        [new Line(lineGeometry, matHelper.clone()), [0, -1e3, 0], [0, 0, Math.PI / 2], [1e6, 1, 1], \"helper\"]\n      ],\n      Z: [\n        [new Line(lineGeometry, matHelper.clone()), [0, 0, -1e3], [0, -Math.PI / 2, 0], [1e6, 1, 1], \"helper\"]\n      ]\n    };\n    const gizmoRotate = {\n      XYZE: [\n        [new Mesh(CircleGeometry(0.5, 1), matGray), null, [0, Math.PI / 2, 0]]\n      ],\n      X: [\n        [new Mesh(CircleGeometry(0.5, 0.5), matRed)]\n      ],\n      Y: [\n        [new Mesh(CircleGeometry(0.5, 0.5), matGreen), null, [0, 0, -Math.PI / 2]]\n      ],\n      Z: [\n        [new Mesh(CircleGeometry(0.5, 0.5), matBlue), null, [0, Math.PI / 2, 0]]\n      ],\n      E: [\n        [new Mesh(CircleGeometry(0.75, 1), matYellowTransparent), null, [0, Math.PI / 2, 0]]\n      ]\n    };\n    const helperRotate = {\n      AXIS: [\n        [new Line(lineGeometry, matHelper.clone()), [-1e3, 0, 0], null, [1e6, 1, 1], \"helper\"]\n      ]\n    };\n    const pickerRotate = {\n      XYZE: [\n        [new Mesh(new SphereGeometry(0.25, 10, 8), matInvisible)]\n      ],\n      X: [\n        [new Mesh(new TorusGeometry(0.5, 0.1, 4, 24), matInvisible), [0, 0, 0], [0, -Math.PI / 2, -Math.PI / 2]]\n      ],\n      Y: [\n        [new Mesh(new TorusGeometry(0.5, 0.1, 4, 24), matInvisible), [0, 0, 0], [Math.PI / 2, 0, 0]]\n      ],\n      Z: [\n        [new Mesh(new TorusGeometry(0.5, 0.1, 4, 24), matInvisible), [0, 0, 0], [0, 0, -Math.PI / 2]]\n      ],\n      E: [\n        [new Mesh(new TorusGeometry(0.75, 0.1, 2, 24), matInvisible)]\n      ]\n    };\n    const gizmoScale = {\n      X: [\n        [new Mesh(scaleHandleGeometry, matRed), [0.5, 0, 0], [0, 0, -Math.PI / 2]],\n        [new Mesh(lineGeometry2, matRed), [0, 0, 0], [0, 0, -Math.PI / 2]],\n        [new Mesh(scaleHandleGeometry, matRed), [-0.5, 0, 0], [0, 0, Math.PI / 2]]\n      ],\n      Y: [\n        [new Mesh(scaleHandleGeometry, matGreen), [0, 0.5, 0]],\n        [new Mesh(lineGeometry2, matGreen)],\n        [new Mesh(scaleHandleGeometry, matGreen), [0, -0.5, 0], [0, 0, Math.PI]]\n      ],\n      Z: [\n        [new Mesh(scaleHandleGeometry, matBlue), [0, 0, 0.5], [Math.PI / 2, 0, 0]],\n        [new Mesh(lineGeometry2, matBlue), [0, 0, 0], [Math.PI / 2, 0, 0]],\n        [new Mesh(scaleHandleGeometry, matBlue), [0, 0, -0.5], [-Math.PI / 2, 0, 0]]\n      ],\n      XY: [\n        [new Mesh(new BoxGeometry(0.15, 0.15, 0.01), matBlueTransparent), [0.15, 0.15, 0]]\n      ],\n      YZ: [\n        [new Mesh(new BoxGeometry(0.15, 0.15, 0.01), matRedTransparent), [0, 0.15, 0.15], [0, Math.PI / 2, 0]]\n      ],\n      XZ: [\n        [new Mesh(new BoxGeometry(0.15, 0.15, 0.01), matGreenTransparent), [0.15, 0, 0.15], [-Math.PI / 2, 0, 0]]\n      ],\n      XYZ: [\n        [new Mesh(new BoxGeometry(0.1, 0.1, 0.1), matWhiteTransparent.clone())]\n      ]\n    };\n    const pickerScale = {\n      X: [\n        [new Mesh(new CylinderGeometry(0.2, 0, 0.6, 4), matInvisible), [0.3, 0, 0], [0, 0, -Math.PI / 2]],\n        [new Mesh(new CylinderGeometry(0.2, 0, 0.6, 4), matInvisible), [-0.3, 0, 0], [0, 0, Math.PI / 2]]\n      ],\n      Y: [\n        [new Mesh(new CylinderGeometry(0.2, 0, 0.6, 4), matInvisible), [0, 0.3, 0]],\n        [new Mesh(new CylinderGeometry(0.2, 0, 0.6, 4), matInvisible), [0, -0.3, 0], [0, 0, Math.PI]]\n      ],\n      Z: [\n        [new Mesh(new CylinderGeometry(0.2, 0, 0.6, 4), matInvisible), [0, 0, 0.3], [Math.PI / 2, 0, 0]],\n        [new Mesh(new CylinderGeometry(0.2, 0, 0.6, 4), matInvisible), [0, 0, -0.3], [-Math.PI / 2, 0, 0]]\n      ],\n      XY: [\n        [new Mesh(new BoxGeometry(0.2, 0.2, 0.01), matInvisible), [0.15, 0.15, 0]]\n      ],\n      YZ: [\n        [new Mesh(new BoxGeometry(0.2, 0.2, 0.01), matInvisible), [0, 0.15, 0.15], [0, Math.PI / 2, 0]]\n      ],\n      XZ: [\n        [new Mesh(new BoxGeometry(0.2, 0.2, 0.01), matInvisible), [0.15, 0, 0.15], [-Math.PI / 2, 0, 0]]\n      ],\n      XYZ: [\n        [new Mesh(new BoxGeometry(0.2, 0.2, 0.2), matInvisible), [0, 0, 0]]\n      ]\n    };\n    const helperScale = {\n      X: [\n        [new Line(lineGeometry, matHelper.clone()), [-1e3, 0, 0], null, [1e6, 1, 1], \"helper\"]\n      ],\n      Y: [\n        [new Line(lineGeometry, matHelper.clone()), [0, -1e3, 0], [0, 0, Math.PI / 2], [1e6, 1, 1], \"helper\"]\n      ],\n      Z: [\n        [new Line(lineGeometry, matHelper.clone()), [0, 0, -1e3], [0, -Math.PI / 2, 0], [1e6, 1, 1], \"helper\"]\n      ]\n    };\n    function setupGizmo(gizmoMap) {\n      const gizmo = new Object3D();\n      for (const name in gizmoMap) {\n        for (let i = gizmoMap[name].length; i--; ) {\n          const object = gizmoMap[name][i][0].clone();\n          const position = gizmoMap[name][i][1];\n          const rotation = gizmoMap[name][i][2];\n          const scale = gizmoMap[name][i][3];\n          const tag = gizmoMap[name][i][4];\n          object.name = name;\n          object.tag = tag;\n          if (position) {\n            object.position.set(position[0], position[1], position[2]);\n          }\n          if (rotation) {\n            object.rotation.set(rotation[0], rotation[1], rotation[2]);\n          }\n          if (scale) {\n            object.scale.set(scale[0], scale[1], scale[2]);\n          }\n          object.updateMatrix();\n          const tempGeometry = object.geometry.clone();\n          tempGeometry.applyMatrix4(object.matrix);\n          object.geometry = tempGeometry;\n          object.renderOrder = Infinity;\n          object.position.set(0, 0, 0);\n          object.rotation.set(0, 0, 0);\n          object.scale.set(1, 1, 1);\n          gizmo.add(object);\n        }\n      }\n      return gizmo;\n    }\n    this.gizmo = {};\n    this.picker = {};\n    this.helper = {};\n    this.add(this.gizmo[\"translate\"] = setupGizmo(gizmoTranslate));\n    this.add(this.gizmo[\"rotate\"] = setupGizmo(gizmoRotate));\n    this.add(this.gizmo[\"scale\"] = setupGizmo(gizmoScale));\n    this.add(this.picker[\"translate\"] = setupGizmo(pickerTranslate));\n    this.add(this.picker[\"rotate\"] = setupGizmo(pickerRotate));\n    this.add(this.picker[\"scale\"] = setupGizmo(pickerScale));\n    this.add(this.helper[\"translate\"] = setupGizmo(helperTranslate));\n    this.add(this.helper[\"rotate\"] = setupGizmo(helperRotate));\n    this.add(this.helper[\"scale\"] = setupGizmo(helperScale));\n    this.picker[\"translate\"].visible = false;\n    this.picker[\"rotate\"].visible = false;\n    this.picker[\"scale\"].visible = false;\n  }\n  // updateMatrixWorld will update transformations and appearance of individual handles\n  updateMatrixWorld(force) {\n    const space = this.mode === \"scale\" ? \"local\" : this.space;\n    const quaternion = space === \"local\" ? this.worldQuaternion : _identityQuaternion;\n    this.gizmo[\"translate\"].visible = this.mode === \"translate\";\n    this.gizmo[\"rotate\"].visible = this.mode === \"rotate\";\n    this.gizmo[\"scale\"].visible = this.mode === \"scale\";\n    this.helper[\"translate\"].visible = this.mode === \"translate\";\n    this.helper[\"rotate\"].visible = this.mode === \"rotate\";\n    this.helper[\"scale\"].visible = this.mode === \"scale\";\n    let handles = [];\n    handles = handles.concat(this.picker[this.mode].children);\n    handles = handles.concat(this.gizmo[this.mode].children);\n    handles = handles.concat(this.helper[this.mode].children);\n    for (let i = 0; i < handles.length; i++) {\n      const handle = handles[i];\n      handle.visible = true;\n      handle.rotation.set(0, 0, 0);\n      handle.position.copy(this.worldPosition);\n      let factor;\n      if (this.camera.isOrthographicCamera) {\n        factor = (this.camera.top - this.camera.bottom) / this.camera.zoom;\n      } else {\n        factor = this.worldPosition.distanceTo(this.cameraPosition) * Math.min(1.9 * Math.tan(Math.PI * this.camera.fov / 360) / this.camera.zoom, 7);\n      }\n      handle.scale.set(1, 1, 1).multiplyScalar(factor * this.size / 4);\n      if (handle.tag === \"helper\") {\n        handle.visible = false;\n        if (handle.name === \"AXIS\") {\n          handle.visible = !!this.axis;\n          if (this.axis === \"X\") {\n            _tempQuaternion.setFromEuler(_tempEuler.set(0, 0, 0));\n            handle.quaternion.copy(quaternion).multiply(_tempQuaternion);\n            if (Math.abs(_alignVector.copy(_unitX).applyQuaternion(quaternion).dot(this.eye)) > 0.9) {\n              handle.visible = false;\n            }\n          }\n          if (this.axis === \"Y\") {\n            _tempQuaternion.setFromEuler(_tempEuler.set(0, 0, Math.PI / 2));\n            handle.quaternion.copy(quaternion).multiply(_tempQuaternion);\n            if (Math.abs(_alignVector.copy(_unitY).applyQuaternion(quaternion).dot(this.eye)) > 0.9) {\n              handle.visible = false;\n            }\n          }\n          if (this.axis === \"Z\") {\n            _tempQuaternion.setFromEuler(_tempEuler.set(0, Math.PI / 2, 0));\n            handle.quaternion.copy(quaternion).multiply(_tempQuaternion);\n            if (Math.abs(_alignVector.copy(_unitZ).applyQuaternion(quaternion).dot(this.eye)) > 0.9) {\n              handle.visible = false;\n            }\n          }\n          if (this.axis === \"XYZE\") {\n            _tempQuaternion.setFromEuler(_tempEuler.set(0, Math.PI / 2, 0));\n            _alignVector.copy(this.rotationAxis);\n            handle.quaternion.setFromRotationMatrix(_lookAtMatrix.lookAt(_zeroVector, _alignVector, _unitY));\n            handle.quaternion.multiply(_tempQuaternion);\n            handle.visible = this.dragging;\n          }\n          if (this.axis === \"E\") {\n            handle.visible = false;\n          }\n        } else if (handle.name === \"START\") {\n          handle.position.copy(this.worldPositionStart);\n          handle.visible = this.dragging;\n        } else if (handle.name === \"END\") {\n          handle.position.copy(this.worldPosition);\n          handle.visible = this.dragging;\n        } else if (handle.name === \"DELTA\") {\n          handle.position.copy(this.worldPositionStart);\n          handle.quaternion.copy(this.worldQuaternionStart);\n          _tempVector.set(1e-10, 1e-10, 1e-10).add(this.worldPositionStart).sub(this.worldPosition).multiplyScalar(-1);\n          _tempVector.applyQuaternion(this.worldQuaternionStart.clone().invert());\n          handle.scale.copy(_tempVector);\n          handle.visible = this.dragging;\n        } else {\n          handle.quaternion.copy(quaternion);\n          if (this.dragging) {\n            handle.position.copy(this.worldPositionStart);\n          } else {\n            handle.position.copy(this.worldPosition);\n          }\n          if (this.axis) {\n            handle.visible = this.axis.search(handle.name) !== -1;\n          }\n        }\n        continue;\n      }\n      handle.quaternion.copy(quaternion);\n      if (this.mode === \"translate\" || this.mode === \"scale\") {\n        const AXIS_HIDE_THRESHOLD = 0.99;\n        const PLANE_HIDE_THRESHOLD = 0.2;\n        if (handle.name === \"X\") {\n          if (Math.abs(_alignVector.copy(_unitX).applyQuaternion(quaternion).dot(this.eye)) > AXIS_HIDE_THRESHOLD) {\n            handle.scale.set(1e-10, 1e-10, 1e-10);\n            handle.visible = false;\n          }\n        }\n        if (handle.name === \"Y\") {\n          if (Math.abs(_alignVector.copy(_unitY).applyQuaternion(quaternion).dot(this.eye)) > AXIS_HIDE_THRESHOLD) {\n            handle.scale.set(1e-10, 1e-10, 1e-10);\n            handle.visible = false;\n          }\n        }\n        if (handle.name === \"Z\") {\n          if (Math.abs(_alignVector.copy(_unitZ).applyQuaternion(quaternion).dot(this.eye)) > AXIS_HIDE_THRESHOLD) {\n            handle.scale.set(1e-10, 1e-10, 1e-10);\n            handle.visible = false;\n          }\n        }\n        if (handle.name === \"XY\") {\n          if (Math.abs(_alignVector.copy(_unitZ).applyQuaternion(quaternion).dot(this.eye)) < PLANE_HIDE_THRESHOLD) {\n            handle.scale.set(1e-10, 1e-10, 1e-10);\n            handle.visible = false;\n          }\n        }\n        if (handle.name === \"YZ\") {\n          if (Math.abs(_alignVector.copy(_unitX).applyQuaternion(quaternion).dot(this.eye)) < PLANE_HIDE_THRESHOLD) {\n            handle.scale.set(1e-10, 1e-10, 1e-10);\n            handle.visible = false;\n          }\n        }\n        if (handle.name === \"XZ\") {\n          if (Math.abs(_alignVector.copy(_unitY).applyQuaternion(quaternion).dot(this.eye)) < PLANE_HIDE_THRESHOLD) {\n            handle.scale.set(1e-10, 1e-10, 1e-10);\n            handle.visible = false;\n          }\n        }\n      } else if (this.mode === \"rotate\") {\n        _tempQuaternion2.copy(quaternion);\n        _alignVector.copy(this.eye).applyQuaternion(_tempQuaternion.copy(quaternion).invert());\n        if (handle.name.search(\"E\") !== -1) {\n          handle.quaternion.setFromRotationMatrix(_lookAtMatrix.lookAt(this.eye, _zeroVector, _unitY));\n        }\n        if (handle.name === \"X\") {\n          _tempQuaternion.setFromAxisAngle(_unitX, Math.atan2(-_alignVector.y, _alignVector.z));\n          _tempQuaternion.multiplyQuaternions(_tempQuaternion2, _tempQuaternion);\n          handle.quaternion.copy(_tempQuaternion);\n        }\n        if (handle.name === \"Y\") {\n          _tempQuaternion.setFromAxisAngle(_unitY, Math.atan2(_alignVector.x, _alignVector.z));\n          _tempQuaternion.multiplyQuaternions(_tempQuaternion2, _tempQuaternion);\n          handle.quaternion.copy(_tempQuaternion);\n        }\n        if (handle.name === \"Z\") {\n          _tempQuaternion.setFromAxisAngle(_unitZ, Math.atan2(_alignVector.y, _alignVector.x));\n          _tempQuaternion.multiplyQuaternions(_tempQuaternion2, _tempQuaternion);\n          handle.quaternion.copy(_tempQuaternion);\n        }\n      }\n      handle.visible = handle.visible && (handle.name.indexOf(\"X\") === -1 || this.showX);\n      handle.visible = handle.visible && (handle.name.indexOf(\"Y\") === -1 || this.showY);\n      handle.visible = handle.visible && (handle.name.indexOf(\"Z\") === -1 || this.showZ);\n      handle.visible = handle.visible && (handle.name.indexOf(\"E\") === -1 || this.showX && this.showY && this.showZ);\n      handle.material._color = handle.material._color || handle.material.color.clone();\n      handle.material._opacity = handle.material._opacity || handle.material.opacity;\n      handle.material.color.copy(handle.material._color);\n      handle.material.opacity = handle.material._opacity;\n      if (this.enabled && this.axis) {\n        if (handle.name === this.axis) {\n          handle.material.color.setHex(16776960);\n          handle.material.opacity = 1;\n        } else if (this.axis.split(\"\").some(function(a) {\n          return handle.name === a;\n        })) {\n          handle.material.color.setHex(16776960);\n          handle.material.opacity = 1;\n        }\n      }\n    }\n    super.updateMatrixWorld(force);\n  }\n}\nclass TransformControlsPlane extends Mesh {\n  constructor() {\n    super(\n      new PlaneGeometry(1e5, 1e5, 2, 2),\n      new MeshBasicMaterial({ visible: false, wireframe: true, side: DoubleSide, transparent: true, opacity: 0.1, toneMapped: false })\n    );\n    this.isTransformControlsPlane = true;\n    this.type = \"TransformControlsPlane\";\n  }\n  updateMatrixWorld(force) {\n    let space = this.space;\n    this.position.copy(this.worldPosition);\n    if (this.mode === \"scale\")\n      space = \"local\";\n    _v1.copy(_unitX).applyQuaternion(space === \"local\" ? this.worldQuaternion : _identityQuaternion);\n    _v2.copy(_unitY).applyQuaternion(space === \"local\" ? this.worldQuaternion : _identityQuaternion);\n    _v3.copy(_unitZ).applyQuaternion(space === \"local\" ? this.worldQuaternion : _identityQuaternion);\n    _alignVector.copy(_v2);\n    switch (this.mode) {\n      case \"translate\":\n      case \"scale\":\n        switch (this.axis) {\n          case \"X\":\n            _alignVector.copy(this.eye).cross(_v1);\n            _dirVector.copy(_v1).cross(_alignVector);\n            break;\n          case \"Y\":\n            _alignVector.copy(this.eye).cross(_v2);\n            _dirVector.copy(_v2).cross(_alignVector);\n            break;\n          case \"Z\":\n            _alignVector.copy(this.eye).cross(_v3);\n            _dirVector.copy(_v3).cross(_alignVector);\n            break;\n          case \"XY\":\n            _dirVector.copy(_v3);\n            break;\n          case \"YZ\":\n            _dirVector.copy(_v1);\n            break;\n          case \"XZ\":\n            _alignVector.copy(_v3);\n            _dirVector.copy(_v2);\n            break;\n          case \"XYZ\":\n          case \"E\":\n            _dirVector.set(0, 0, 0);\n            break;\n        }\n        break;\n      case \"rotate\":\n      default:\n        _dirVector.set(0, 0, 0);\n    }\n    if (_dirVector.length() === 0) {\n      this.quaternion.copy(this.cameraQuaternion);\n    } else {\n      _tempMatrix.lookAt(_tempVector.set(0, 0, 0), _dirVector, _alignVector);\n      this.quaternion.setFromRotationMatrix(_tempMatrix);\n    }\n    super.updateMatrixWorld(force);\n  }\n}\nclass SimplePlane {\n  constructor(components, world, origin, normal, material, size = 5, activateControls = true) {\n    /** Event that fires when the user starts dragging a clipping plane. */\n    __publicField(this, \"onDraggingStarted\", new Event());\n    /** Event that fires when the user stops dragging a clipping plane. */\n    __publicField(this, \"onDraggingEnded\", new Event());\n    /** {@link Disposable.onDisposed} */\n    __publicField(this, \"onDisposed\", new Event());\n    /**\n     * The normal vector of the clipping plane.\n     */\n    __publicField(this, \"normal\");\n    /**\n     * The origin point of the clipping plane.\n     */\n    __publicField(this, \"origin\");\n    /**\n     * The THREE.js Plane object representing the clipping plane.\n     */\n    __publicField(this, \"three\", new THREE$1.Plane());\n    /** The components instance to which this plane belongs. */\n    __publicField(this, \"components\");\n    /** The world instance to which this plane belongs. */\n    __publicField(this, \"world\");\n    /** A custom string to identify what this plane is used for. */\n    __publicField(this, \"type\", \"default\");\n    __publicField(this, \"_title\", \"Clipping Plane\");\n    __publicField(this, \"_helper\");\n    __publicField(this, \"_visible\", true);\n    __publicField(this, \"_enabled\", true);\n    __publicField(this, \"_controlsActive\", false);\n    __publicField(this, \"_arrowBoundBox\", new THREE$1.Mesh());\n    __publicField(this, \"_planeMesh\");\n    __publicField(this, \"_controls\");\n    __publicField(this, \"_hiddenMaterial\", new THREE$1.MeshBasicMaterial({\n      visible: false\n    }));\n    __publicField(this, \"_visibilityBeforeDisabled\", true);\n    __publicField(this, \"notifyManager\", () => {\n      const clipper = this.components.get(Clipper);\n      const id = clipper.list.getKey(this);\n      if (id)\n        clipper.list.set(id, this);\n    });\n    /** {@link Updateable.update} */\n    __publicField(this, \"update\", () => {\n      if (!this._enabled)\n        return;\n      this.three.setFromNormalAndCoplanarPoint(\n        this.normal,\n        this._helper.position\n      );\n    });\n    __publicField(this, \"changeDrag\", (event) => {\n      this._visible = !event.value;\n      this.preventCameraMovement();\n      this.notifyDraggingChanged(event);\n    });\n    this.components = components;\n    this.world = world;\n    if (!world.renderer) {\n      throw new Error(\"The given world must have a renderer!\");\n    }\n    this.normal = normal;\n    this.origin = origin;\n    world.renderer.setPlane(true, this.three);\n    this._planeMesh = SimplePlane.newPlaneMesh(size, material);\n    this._helper = this.newHelper();\n    this._controls = this.newTransformControls();\n    this.three.setFromNormalAndCoplanarPoint(normal, origin);\n    if (activateControls) {\n      this.toggleControls(true);\n    }\n  }\n  set title(value) {\n    this._title = value;\n    this.notifyManager();\n  }\n  get title() {\n    return this._title;\n  }\n  /**\n   * Getter for the enabled state of the clipping plane.\n   * @returns {boolean} The current enabled state.\n   */\n  get enabled() {\n    return this._enabled;\n  }\n  /**\n   * Setter for the enabled state of the clipping plane.\n   * Updates the clipping plane state in the renderer and throws an error if no renderer is found.\n   * @param {boolean} state - The new enabled state.\n   */\n  set enabled(state) {\n    if (this.world.isDisposing) {\n      return;\n    }\n    if (!this.world.renderer) {\n      throw new Error(\"No renderer found for clipping plane!\");\n    }\n    this._enabled = state;\n    if (state) {\n      this.visible = this._visibilityBeforeDisabled;\n    } else {\n      this._visibilityBeforeDisabled = this.visible;\n      this.visible = false;\n    }\n    this.world.renderer.setPlane(state, this.three);\n    this.notifyManager();\n  }\n  /** {@link Hideable.visible } */\n  get visible() {\n    return this._visible;\n  }\n  /** {@link Hideable.visible } */\n  set visible(state) {\n    this._visible = state;\n    this._controls.getHelper().visible = state;\n    this._helper.visible = state;\n    this.toggleControls(state);\n    this.notifyManager();\n  }\n  /** The meshes used for raycasting */\n  get meshes() {\n    return [this._planeMesh, this._arrowBoundBox];\n  }\n  /** The material of the clipping plane representation. */\n  get planeMaterial() {\n    return this._planeMesh.material;\n  }\n  /** The material of the clipping plane representation. */\n  set planeMaterial(material) {\n    this._planeMesh.material = material;\n  }\n  /** The size of the clipping plane representation. */\n  get size() {\n    return this._planeMesh.scale.x;\n  }\n  /** Sets the size of the clipping plane representation. */\n  set size(size) {\n    this._planeMesh.scale.set(size, size, size);\n  }\n  /**\n   * Getter for the helper object of the clipping plane.\n   * The helper object is a THREE.Object3D that contains the clipping plane mesh and other related objects.\n   * It is used for positioning, rotating, and scaling the clipping plane in the 3D scene.\n   *\n   * @returns {THREE.Object3D} The helper object of the clipping plane.\n   */\n  get helper() {\n    return this._helper;\n  }\n  /**\n   * Sets the clipping plane's normal and origin from the given normal and point.\n   * This method resets the clipping plane's state, updates the normal and origin,\n   * and positions the helper object accordingly.\n   *\n   * @param normal - The new normal vector for the clipping plane.\n   * @param point - The new origin point for the clipping plane.\n   *\n   * @returns {void}\n   */\n  setFromNormalAndCoplanarPoint(normal, point) {\n    this.reset();\n    if (!this.normal.equals(normal)) {\n      this.normal.copy(normal);\n      this._helper.lookAt(normal);\n    }\n    this.origin.copy(point);\n    this._helper.position.copy(point);\n    this._helper.updateMatrix();\n    this.update();\n  }\n  /** {@link Disposable.dispose} */\n  dispose() {\n    this._enabled = false;\n    this.onDraggingStarted.reset();\n    this.onDraggingEnded.reset();\n    this._helper.removeFromParent();\n    if (this.world.renderer) {\n      this.world.renderer.setPlane(false, this.three);\n    }\n    this._arrowBoundBox.removeFromParent();\n    this._arrowBoundBox.geometry.dispose();\n    this._planeMesh.geometry.dispose();\n    this._controls.getHelper().removeFromParent();\n    this._controls.dispose();\n    this.onDisposed.trigger();\n    this.onDisposed.reset();\n  }\n  reset() {\n    const normal = new THREE$1.Vector3(1, 0, 0);\n    const point = new THREE$1.Vector3();\n    if (!this.normal.equals(normal)) {\n      this.normal.copy(normal);\n      this._helper.lookAt(normal);\n    }\n    this.origin.copy(point);\n    this._helper.position.copy(point);\n    this._helper.updateMatrix();\n  }\n  toggleControls(state) {\n    if (state) {\n      if (this._controlsActive)\n        return;\n      this._controls.addEventListener(\"change\", this.update);\n      this._controls.addEventListener(\"dragging-changed\", this.changeDrag);\n    } else {\n      this._controls.removeEventListener(\"change\", this.update);\n      this._controls.removeEventListener(\"dragging-changed\", this.changeDrag);\n    }\n    this._controlsActive = state;\n  }\n  newTransformControls() {\n    if (!this.world.renderer) {\n      throw new Error(\"No renderer found for clipping plane!\");\n    }\n    const camera = this.world.camera.three;\n    const container = this.world.renderer.three.domElement;\n    const controls = new TransformControls(camera, container);\n    this.initializeControls(controls);\n    this.world.scene.three.add(controls.getHelper());\n    return controls;\n  }\n  initializeControls(controls) {\n    controls.attach(this._helper);\n    controls.showX = false;\n    controls.showY = false;\n    controls.setSpace(\"local\");\n    this.createArrowBoundingBox();\n    controls.getHelper().children[0].children[0].add(this._arrowBoundBox);\n  }\n  createArrowBoundingBox() {\n    this._arrowBoundBox.geometry = new THREE$1.CylinderGeometry(0.18, 0.18, 1.2);\n    this._arrowBoundBox.material = this._hiddenMaterial;\n    this._arrowBoundBox.rotateX(Math.PI / 2);\n    this._arrowBoundBox.updateMatrix();\n    this._arrowBoundBox.geometry.applyMatrix4(this._arrowBoundBox.matrix);\n  }\n  notifyDraggingChanged(event) {\n    if (event.value) {\n      this.onDraggingStarted.trigger();\n    } else {\n      this.onDraggingEnded.trigger();\n    }\n  }\n  preventCameraMovement() {\n    this.world.camera.enabled = this._visible;\n  }\n  newHelper() {\n    const helper = new THREE$1.Object3D();\n    helper.lookAt(this.normal);\n    helper.position.copy(this.origin);\n    this._planeMesh.position.z += 0.01;\n    helper.add(this._planeMesh);\n    this.world.scene.three.add(helper);\n    return helper;\n  }\n  static newPlaneMesh(size, material) {\n    const planeGeom = new THREE$1.PlaneGeometry(1);\n    const mesh = new THREE$1.Mesh(planeGeom, material);\n    mesh.scale.set(size, size, size);\n    return mesh;\n  }\n}\nclass ClipperConfigManager extends Configurator {\n  constructor() {\n    super(...arguments);\n    __publicField(this, \"_config\", {\n      enabled: {\n        value: true,\n        type: \"Boolean\"\n      },\n      visible: {\n        value: true,\n        type: \"Boolean\"\n      },\n      color: {\n        value: new THREE$1.Color(),\n        type: \"Color\"\n      },\n      opacity: {\n        type: \"Number\",\n        interpolable: true,\n        value: 1,\n        min: 0,\n        max: 1\n      },\n      size: {\n        type: \"Number\",\n        interpolable: true,\n        value: 2,\n        min: 0,\n        max: 100\n      }\n    });\n  }\n  get enabled() {\n    return this._config.enabled.value;\n  }\n  set enabled(value) {\n    this._config.enabled.value = value;\n    this._component.enabled = value;\n  }\n  get visible() {\n    return this._config.visible.value;\n  }\n  set visible(value) {\n    this._config.visible.value = value;\n    this._component.visible = value;\n  }\n  get color() {\n    return this._config.color.value;\n  }\n  set color(value) {\n    this._config.color.value = value;\n    this._component.material.color.copy(value);\n  }\n  get opacity() {\n    return this._config.opacity.value;\n  }\n  set opacity(value) {\n    this._config.opacity.value = value;\n    this._component.material.opacity = value;\n  }\n  get size() {\n    return this._config.size.value;\n  }\n  set size(value) {\n    this._config.size.value = value;\n    this._component.size = value;\n  }\n}\nconst _Clipper = class _Clipper extends Component {\n  constructor(components) {\n    super(components);\n    /** {@link Configurable.onSetup} */\n    __publicField(this, \"onSetup\", new Event());\n    /** Event that fires when the user starts dragging a clipping plane. */\n    __publicField(this, \"onBeforeDrag\", new Event());\n    /** Event that fires when the user stops dragging a clipping plane. */\n    __publicField(this, \"onAfterDrag\", new Event());\n    /**\n     * Event that fires when the user starts creating a clipping plane.\n     */\n    __publicField(this, \"onBeforeCreate\", new Event());\n    /**\n     * Event that fires when the user cancels the creation of a clipping plane.\n     */\n    __publicField(this, \"onBeforeCancel\", new Event());\n    /**\n     * Event that fires after the user cancels the creation of a clipping plane.\n     */\n    __publicField(this, \"onAfterCancel\", new Event());\n    /**\n     * Event that fires when the user starts deleting a clipping plane.\n     */\n    __publicField(this, \"onBeforeDelete\", new Event());\n    /**\n     * Event that fires after a clipping plane has been created.\n     * @param plane - The newly created clipping plane.\n     */\n    __publicField(this, \"onAfterCreate\", new Event());\n    /**\n     * Event that fires after a clipping plane has been deleted.\n     * @param plane - The deleted clipping plane.\n     */\n    __publicField(this, \"onAfterDelete\", new Event());\n    /** {@link Disposable.onDisposed} */\n    __publicField(this, \"onDisposed\", new Event());\n    /** {@link Configurable.isSetup} */\n    __publicField(this, \"isSetup\", false);\n    /**\n     * Whether to force the clipping plane to be orthogonal in the Y direction\n     * (up). This is desirable when clipping a building horizontally and a\n     * clipping plane is created in its roof, which might have a slight\n     * slope for draining purposes.\n     */\n    __publicField(this, \"orthogonalY\", false);\n    /**\n     * The tolerance that determines whether an almost-horizontal clipping plane\n     * will be forced to be orthogonal to the Y direction. {@link orthogonalY}\n     * has to be `true` for this to apply.\n     */\n    __publicField(this, \"toleranceOrthogonalY\", 0.7);\n    /**\n     * The type of clipping plane to be created.\n     * Default is {@link SimplePlane}.\n     */\n    __publicField(this, \"Type\", SimplePlane);\n    /**\n     * A list of all the clipping planes created by this component.\n     */\n    __publicField(this, \"list\", new FRAGS.DataMap());\n    /** {@link Configurable.config} */\n    __publicField(this, \"config\", new ClipperConfigManager(\n      this,\n      this.components,\n      \"Clipper\",\n      _Clipper.uuid\n    ));\n    __publicField(this, \"_defaultConfig\", {\n      color: new THREE$1.Color(12255487),\n      opacity: 0.2,\n      size: 2\n    });\n    /** The material used in all the clipping planes. */\n    __publicField(this, \"_material\", new THREE$1.MeshBasicMaterial({\n      color: 12255487,\n      side: THREE$1.DoubleSide,\n      transparent: true,\n      opacity: 0.2\n    }));\n    __publicField(this, \"_size\", 5);\n    __publicField(this, \"_enabled\", false);\n    __publicField(this, \"_visible\", true);\n    __publicField(this, \"_onStartDragging\", () => {\n      this.onBeforeDrag.trigger();\n    });\n    __publicField(this, \"_onEndDragging\", () => {\n      this.onAfterDrag.trigger();\n    });\n    this.components.add(_Clipper.uuid, this);\n    this.setEvents();\n  }\n  /** {@link Component.enabled} */\n  get enabled() {\n    return this._enabled;\n  }\n  /** {@link Component.enabled} */\n  set enabled(state) {\n    this._enabled = state;\n  }\n  /** {@link Hideable.visible } */\n  get visible() {\n    return this._visible;\n  }\n  /** {@link Hideable.visible } */\n  set visible(state) {\n    this._visible = state;\n    for (const [_, plane] of this.list) {\n      plane.visible = state;\n    }\n  }\n  /** The material of the clipping plane representation. */\n  get material() {\n    return this._material;\n  }\n  /** The material of the clipping plane representation. */\n  set material(material) {\n    this._material = material;\n    for (const [_, plane] of this.list) {\n      plane.planeMaterial = material;\n    }\n  }\n  /** The size of the geometric representation of the clippings planes. */\n  get size() {\n    return this._size;\n  }\n  /** The size of the geometric representation of the clippings planes. */\n  set size(size) {\n    this._size = size;\n    for (const [_, plane] of this.list) {\n      plane.size = size;\n    }\n  }\n  setEvents() {\n    this.list.onBeforeDelete.add(({ value: plane }) => {\n      if (!plane.world.renderer) {\n        throw new Error(\"Renderer not found for this plane's world!\");\n      }\n      plane.world.renderer.setPlane(false, plane.three);\n      plane.dispose();\n      this.updateMaterialsAndPlanes();\n    });\n  }\n  /** {@link Disposable.dispose} */\n  dispose() {\n    this._enabled = false;\n    const configs = this.components.get(ConfigManager);\n    configs.list.delete(this.config.uuid);\n    this.list.clear();\n    this._material.dispose();\n    this.onBeforeCreate.reset();\n    this.onBeforeCancel.reset();\n    this.onBeforeDelete.reset();\n    this.onBeforeDrag.reset();\n    this.onAfterCreate.reset();\n    this.onAfterCancel.reset();\n    this.onAfterDelete.reset();\n    this.onAfterDrag.reset();\n    this.onDisposed.trigger(_Clipper.uuid);\n    this.onDisposed.reset();\n  }\n  /** {@link Createable.create} */\n  async create(world) {\n    const casters = this.components.get(Raycasters);\n    const caster = casters.get(world);\n    const intersects = await caster.castRay();\n    if (intersects) {\n      return this.createPlaneFromIntersection(world, intersects);\n    }\n    return null;\n  }\n  /**\n   * Creates a plane in a certain place and with a certain orientation,\n   * without the need of the mouse.\n   *\n   * @param world - the world where this plane should be created.\n   * @param normal - the orientation of the clipping plane.\n   * @param point - the position of the clipping plane.\n   * navigation.\n   */\n  createFromNormalAndCoplanarPoint(world, normal, point) {\n    const id = this.newPlane(world, point, normal);\n    this.updateMaterialsAndPlanes();\n    return id;\n  }\n  /**\n   * {@link Createable.delete}\n   *\n   * @param world - the world where the plane to delete is.\n   * @param planeId - the plane to delete. If undefined, the first plane\n   * found under the cursor will be deleted.\n   */\n  async delete(world, planeId) {\n    if (!planeId) {\n      const plane = await this.pickPlane(world);\n      if (!plane)\n        return;\n      planeId = this.list.getKey(plane);\n    }\n    if (!planeId) {\n      return;\n    }\n    this.list.delete(planeId);\n  }\n  /**\n   * Deletes all the existing clipping planes.\n   *\n   * @param types - the types of planes to be deleted. If not provided, all planes will be deleted.\n   */\n  deleteAll(types) {\n    for (const [id, plane] of this.list) {\n      if (!types || types.has(plane.type)) {\n        this.list.delete(id);\n      }\n    }\n  }\n  /** {@link Configurable.setup} */\n  setup(config) {\n    const fullConfig = { ...this._defaultConfig, ...config };\n    this.config.color = fullConfig.color;\n    this.config.opacity = fullConfig.opacity;\n    this.config.size = fullConfig.size;\n    this.isSetup = true;\n    this.onSetup.trigger();\n  }\n  // private deletePlane(plane: SimplePlane) {\n  //   const index = this.list.indexOf(plane);\n  //   if (index !== -1) {\n  //     this.list.splice(index, 1);\n  //     if (!plane.world.renderer) {\n  //       throw new Error(\"Renderer not found for this plane's world!\");\n  //     }\n  //     plane.world.renderer.setPlane(false, plane.three);\n  //     plane.dispose();\n  //     this.updateMaterialsAndPlanes();\n  //     this.onAfterDelete.trigger(plane);\n  //   }\n  // }\n  async pickPlane(world) {\n    const casters = this.components.get(Raycasters);\n    const caster = casters.get(world);\n    const items = this.getAllPlaneMeshes();\n    const intersects = await caster.castRay({ items });\n    if (intersects) {\n      const found = intersects.object;\n      return [...this.list.values()].find((p) => p.meshes.includes(found));\n    }\n    return void 0;\n  }\n  getAllPlaneMeshes() {\n    const meshes = [];\n    for (const [_, plane] of this.list) {\n      meshes.push(...plane.meshes);\n    }\n    return meshes;\n  }\n  createPlaneFromIntersection(world, intersect) {\n    var _a2;\n    if (!world.renderer) {\n      throw new Error(\"The given world must have a renderer!\");\n    }\n    const constant = intersect.point.distanceTo(new THREE$1.Vector3(0, 0, 0));\n    const normal = intersect.normal || ((_a2 = intersect.face) == null ? void 0 : _a2.normal);\n    if (!constant || !normal) {\n      return null;\n    }\n    const worldNormal = this.getWorldNormal(intersect, normal);\n    const id = this.newPlane(world, intersect.point, worldNormal.negate());\n    const plane = this.list.get(id);\n    plane.visible = this._visible;\n    plane.size = this._size;\n    world.renderer.setPlane(true, plane.three);\n    this.updateMaterialsAndPlanes();\n    return plane;\n  }\n  getWorldNormal(intersect, normal) {\n    const object = intersect.object;\n    let transform = intersect.object.matrixWorld.clone();\n    const isInstance = object instanceof THREE$1.InstancedMesh;\n    if (isInstance && intersect.instanceId !== void 0) {\n      const temp5 = new THREE$1.Matrix4();\n      object.getMatrixAt(intersect.instanceId, temp5);\n      transform = temp5.multiply(transform);\n    }\n    const normalMatrix = new THREE$1.Matrix3().getNormalMatrix(transform);\n    const worldNormal = normal.clone().applyMatrix3(normalMatrix).normalize();\n    this.normalizePlaneDirectionY(worldNormal);\n    return worldNormal;\n  }\n  normalizePlaneDirectionY(normal) {\n    if (this.orthogonalY) {\n      if (normal.y > this.toleranceOrthogonalY) {\n        normal.x = 0;\n        normal.y = 1;\n        normal.z = 0;\n      }\n      if (normal.y < -this.toleranceOrthogonalY) {\n        normal.x = 0;\n        normal.y = -1;\n        normal.z = 0;\n      }\n    }\n  }\n  newPlane(world, point, normal) {\n    const plane = new this.Type(\n      this.components,\n      world,\n      point,\n      normal,\n      this._material\n    );\n    plane.onDraggingStarted.add(this._onStartDragging);\n    plane.onDraggingEnded.add(this._onEndDragging);\n    const id = UUID.create();\n    this.list.set(id, plane);\n    this.onAfterCreate.trigger(plane);\n    return id;\n  }\n  updateMaterialsAndPlanes() {\n    const worlds = this.components.get(Worlds);\n    for (const [_id, world] of worlds.list) {\n      if (!world.renderer) {\n        continue;\n      }\n      world.renderer.updateClippingPlanes();\n      const { clippingPlanes } = world.renderer;\n      for (const model of world.meshes) {\n        if (!model.material) {\n          continue;\n        }\n        if (Array.isArray(model.material)) {\n          for (const mat of model.material) {\n            mat.clippingPlanes = clippingPlanes;\n          }\n        } else {\n          model.material.clippingPlanes = clippingPlanes;\n        }\n      }\n    }\n  }\n};\n/**\n * A unique identifier for the component.\n * This UUID is used to register the component within the Components system.\n */\n__publicField(_Clipper, \"uuid\", \"66290bc5-18c4-4cd1-9379-2e17a0617611\");\nlet Clipper = _Clipper;\nclass Viewpoint {\n  constructor(components, data) {\n    __publicField(this, \"title\");\n    __publicField(this, \"guid\", UUID.create());\n    /**\n     * ClippingPlanes can be used to define a subsection of a building model that is related to the topic.\n     * Each clipping plane is defined by Location and Direction.\n     * The Direction vector points in the invisible direction meaning the half-space that is clipped.\n     */\n    __publicField(this, \"clippingPlanes\", new FRAGS.DataSet());\n    __publicField(this, \"camera\", {\n      aspect_ratio: 1,\n      field_of_view: 60,\n      camera_direction: { x: 0, y: 0, z: 0 },\n      camera_view_point: { x: 0, y: 0, z: 0 },\n      camera_up_vector: { x: 0, y: 1, z: 0 }\n    });\n    /**\n     * A list of components GUIDs to hide when defaultVisibility = true or to show when defaultVisibility = false\n     */\n    __publicField(this, \"exceptionComponents\", new FRAGS.DataSet());\n    /**\n     * A list of components GUIDs that should be selected (highlighted) when displaying a viewpoint.\n     */\n    __publicField(this, \"selectionComponents\", new FRAGS.DataSet());\n    // this is not directly a ModelIdMap because a viewpoint should be able to reference elements from models that are not loaded, usually from information comming externally\n    /**\n     * A map of colors and components GUIDs that should be colorized when displaying a viewpoint.\n     * For this to work, call viewpoint.colorize()\n     */\n    __publicField(this, \"componentColors\", new FRAGS.DataMap());\n    /**\n     * Boolean flags to allow fine control over the visibility of spaces.\n     * A typical use of these flags is when DefaultVisibility=true but spaces should remain hidden.\n     * @default false\n     */\n    __publicField(this, \"spacesVisible\", false);\n    /**\n     * Boolean flags to allow fine control over the visibility of space boundaries.\n     * A typical use of these flags is when DefaultVisibility=true but space boundaries should remain hidden.\n     * @default false\n     */\n    __publicField(this, \"spaceBoundariesVisible\", false);\n    /**\n     * Boolean flags to allow fine control over the visibility of openings.\n     * A typical use of these flags is when DefaultVisibility=true but openings should remain hidden.\n     * @default false\n     */\n    __publicField(this, \"openingsVisible\", false);\n    /**\n     * When true, all components should be visible unless listed in the exceptions\n     * When false all components should be invisible unless listed in the exceptions\n     */\n    __publicField(this, \"defaultVisibility\", true);\n    /**\n     * The snapshotID that will be used for this viewpoint when exported.\n     */\n    __publicField(this, \"snapshot\", this.guid);\n    __publicField(this, \"_components\");\n    __publicField(this, \"_world\", null);\n    __publicField(this, \"notifyUpdate\", () => {\n      const manager = this._components.get(Viewpoints);\n      manager.list.set(this.guid, this);\n    });\n    this._components = components;\n    if (data) {\n      this.guid = data.guid ?? this.guid;\n      this.set(data);\n    }\n    this.setEvents();\n  }\n  async getSelectionMap() {\n    const fragments = this._components.get(FragmentsManager);\n    const modelIdMap = await fragments.guidsToModelIdMap([\n      ...this.selectionComponents\n    ]);\n    return modelIdMap;\n  }\n  async getExceptionMap() {\n    const fragments = this._components.get(FragmentsManager);\n    const modelIdMap = await fragments.guidsToModelIdMap([\n      ...this.exceptionComponents\n    ]);\n    return modelIdMap;\n  }\n  /**\n   * Retrieves the projection type of the viewpoint's camera.\n   *\n   * @returns A string representing the projection type of the viewpoint's camera.\n   *          It can be either 'Perspective' or 'Orthographic'.\n   */\n  get projection() {\n    if (\"field_of_view\" in this.camera)\n      return \"Perspective\";\n    return \"Orthographic\";\n  }\n  /**\n   * Retrieves the position vector of the viewpoint's camera.\n   *\n   * @returns A THREE.Vector3 representing the position of the viewpoint's camera.\n   */\n  get position() {\n    const fragments = this._components.get(FragmentsManager);\n    const { camera_view_point } = this.camera;\n    const { x, y, z } = camera_view_point;\n    const vector = new THREE$1.Vector3(x, y, z);\n    fragments.applyBaseCoordinateSystem(vector, new THREE$1.Matrix4());\n    return vector;\n  }\n  /**\n   * Sets the position of the viewpoint's camera.\n   * @param value - The new position for the viewpoint's camera.\n   */\n  set position(value) {\n    const position = value.clone();\n    const fragments = this._components.get(FragmentsManager);\n    value.clone().applyMatrix4(fragments.baseCoordinationMatrix.clone().invert());\n    this.camera.camera_view_point = {\n      x: position.x,\n      y: position.y,\n      z: position.z\n    };\n  }\n  /**\n   * Retrieves the direction vector of the viewpoint's camera.\n   * @returns A THREE.Vector3 representing the direction of the viewpoint's camera.\n   */\n  get direction() {\n    const { camera_direction } = this.camera;\n    const { x, y, z } = camera_direction;\n    const vector = new THREE$1.Vector3(x, y, z);\n    return vector;\n  }\n  /**\n   * Represents the world in which the viewpoint will take effect.\n   */\n  set world(value) {\n    this._world = value;\n  }\n  get world() {\n    return this._world;\n  }\n  get _managerVersion() {\n    const manager = this._components.get(BCFTopics);\n    return manager.config.version;\n  }\n  /**\n   * Retrieves the list of BCF topics associated with the current viewpoint.\n   *\n   * @remarks\n   * This function retrieves the BCFTopics manager from the components,\n   * then filters the list of topics to find those associated with the current viewpoint.\n   *\n   * @returns An array of BCF topics associated with the current viewpoint.\n   */\n  get topics() {\n    const manager = this._components.get(BCFTopics);\n    const topicsList = [...manager.list.values()];\n    const topics = topicsList.filter(\n      (topic) => topic.viewpoints.has(this.guid)\n    );\n    return topics;\n  }\n  // TODO: Remove the notifyUpdate when needed\n  setEvents() {\n    this.selectionComponents.onUpdated.add(this.notifyUpdate);\n    this.exceptionComponents.onUpdated.add(this.notifyUpdate);\n    this.clippingPlanes.onUpdated.add(this.notifyUpdate);\n    this.componentColors.onItemSet.add(this.notifyUpdate);\n    this.componentColors.onItemDeleted.add(this.notifyUpdate);\n    this.componentColors.onItemUpdated.add(this.notifyUpdate);\n    this.componentColors.onCleared.add(this.notifyUpdate);\n  }\n  /**\n   * Fully replace the properties of the viewpoint with the provided data.\n   * The properties not included will remain unchanged.\n   *\n   * @remarks The guid will be ommited as it shouldn't change after it has been initially set.\n   *\n   * @param data - An object containing the properties to be set.\n   */\n  set(data) {\n    this.title = data.title;\n    const {\n      components,\n      perspective_camera,\n      orthogonal_camera,\n      clipping_planes\n    } = data;\n    if (components) {\n      const { selection, visibility, coloring } = components;\n      if (selection) {\n        this.selectionComponents.clear();\n        for (const { ifc_guid } of selection) {\n          if (!ifc_guid)\n            continue;\n          this.selectionComponents.add(ifc_guid);\n        }\n      }\n      if (visibility) {\n        const { default_visibility, exceptions, view_setup_hints } = visibility;\n        if (default_visibility !== void 0) {\n          this.defaultVisibility = default_visibility;\n        }\n        if (exceptions) {\n          this.exceptionComponents.clear();\n          for (const { ifc_guid } of exceptions) {\n            if (!ifc_guid)\n              continue;\n            this.exceptionComponents.add(ifc_guid);\n          }\n        }\n        if (view_setup_hints) {\n          const { spaces_visible, space_boundaries_visible, openings_visible } = view_setup_hints;\n          if (spaces_visible !== void 0) {\n            this.spacesVisible = spaces_visible;\n          }\n          if (space_boundaries_visible !== void 0) {\n            this.spaceBoundariesVisible = space_boundaries_visible;\n          }\n          if (openings_visible !== void 0) {\n            this.openingsVisible = openings_visible;\n          }\n        }\n      }\n      if (coloring) {\n        this.componentColors.clear();\n        for (const description of coloring) {\n          const { color, components: components2 } = description;\n          const guids = components2.map((component) => component.ifc_guid).filter((guid) => guid !== null);\n          this.componentColors.set(color, guids);\n        }\n      }\n    }\n    if (perspective_camera || orthogonal_camera) {\n      this.camera = perspective_camera ?? orthogonal_camera;\n    }\n    if (clipping_planes && this.world) {\n      const clipper = this._components.get(Clipper);\n      for (const data2 of clipping_planes) {\n        const { location, direction } = data2;\n        const locationVector = new THREE$1.Vector3(\n          location.x,\n          location.z,\n          -location.y\n        );\n        const directionVector = new THREE$1.Vector3(\n          direction.x,\n          direction.z,\n          -direction.y\n        );\n        const id = clipper.createFromNormalAndCoplanarPoint(\n          this.world,\n          directionVector,\n          locationVector\n        );\n        this.clippingPlanes.add(id);\n        clipper.list.get(id).enabled = false;\n        clipper.list.get(id).visible = false;\n      }\n    }\n    this.notifyUpdate();\n  }\n  /**\n   * Sets the viewpoint of the camera in the world.\n   *\n   * @remarks\n   * This function calculates the target position based on the viewpoint information.\n   * It sets the visibility of the viewpoint components and then applies the viewpoint using the camera's controls.\n   *\n   * @param transition - Indicates whether the camera movement should have a transition effect.\n   *                      Default value is `true`.\n   *\n   * @throws An error if the world's camera does not have camera controls.\n   *\n   * @returns A Promise that resolves when the camera has been set.\n   */\n  async go(_config) {\n    if (!this.world)\n      return;\n    const { camera } = this.world;\n    if (!(camera instanceof OrthoPerspectiveCamera)) {\n      throw new Error(\n        \"Viewpoint: the world's camera component must be of type OrthoPerspectiveCamera to switch between perspective and orthographic projections.\"\n      );\n    }\n    const { transition, applyClippings, applyVisibility, clippingsVisibility } = {\n      transition: true,\n      applyClippings: true,\n      applyVisibility: true,\n      clippingsVisibility: true,\n      ..._config\n    };\n    camera.projection.set(this.projection);\n    const basePosition = new THREE$1.Vector3(\n      this.camera.camera_view_point.x,\n      this.camera.camera_view_point.y,\n      this.camera.camera_view_point.z\n    );\n    const baseTarget = new THREE$1.Vector3(\n      this.camera.camera_direction.x,\n      this.camera.camera_direction.y,\n      this.camera.camera_direction.z\n    );\n    if (basePosition.equals(new THREE$1.Vector3()) && baseTarget.equals(new THREE$1.Vector3())) {\n      return;\n    }\n    const position = this.position;\n    const direction = this.direction;\n    const factor = 80;\n    const target = {\n      x: position.x + direction.x * factor,\n      y: position.y + direction.y * factor,\n      z: position.z + direction.z * factor\n    };\n    const promises = [];\n    if (applyClippings)\n      this.setClippingState(true);\n    if (applyVisibility)\n      promises.push(this.applyVisibility());\n    this.setClippingVisibility(clippingsVisibility);\n    promises.push(\n      camera.controls.setLookAt(\n        position.x,\n        position.y,\n        position.z,\n        target.x,\n        target.y,\n        target.z,\n        transition\n      )\n    );\n    await Promise.all(promises);\n  }\n  /**\n   * Updates the camera settings of the viewpoint based on the current world's camera and renderer.\n   * @returns A boolean indicating if the camera data was updated or not.\n   */\n  async updateCamera(takeSnapshot = true) {\n    return new Promise((resolve) => {\n      if (!this.world) {\n        resolve(false);\n        return;\n      }\n      const { camera, renderer } = this.world;\n      if (!renderer) {\n        throw new Error(\"Viewpoint: the world needs to have a renderer!\");\n      }\n      if (!camera.hasCameraControls()) {\n        throw new Error(\"Viewpoint: world's camera need camera controls!\");\n      }\n      const position = new THREE$1.Vector3();\n      camera.controls.getPosition(position);\n      const threeCamera = camera.three;\n      const direction = new THREE$1.Vector3(0, 0, -1).applyEuler(\n        threeCamera.rotation\n      );\n      const { width, height } = renderer.getSize();\n      let aspect_ratio = width / height;\n      if (Number.isNaN(aspect_ratio))\n        aspect_ratio = 1;\n      const fragments = this._components.get(FragmentsManager);\n      position.applyMatrix4(fragments.baseCoordinationMatrix.clone().invert());\n      const partialCamera = {\n        aspect_ratio,\n        camera_view_point: { x: position.x, y: position.y, z: position.z },\n        camera_direction: { x: direction.x, y: direction.y, z: direction.z },\n        camera_up_vector: { x: 0, y: 1, z: 0 }\n      };\n      if (threeCamera instanceof THREE$1.PerspectiveCamera) {\n        this.camera = {\n          ...partialCamera,\n          field_of_view: threeCamera.fov\n        };\n      } else if (threeCamera instanceof THREE$1.OrthographicCamera) {\n        this.camera = {\n          ...partialCamera,\n          view_to_world_scale: threeCamera.top - threeCamera.bottom\n        };\n      }\n      if (takeSnapshot) {\n        const manager = this._components.get(Viewpoints);\n        const canvas = renderer.three.domElement;\n        renderer.three.render(this.world.scene.three, camera.three);\n        canvas.toBlob(async (blob) => {\n          if (blob) {\n            const data = await blob.arrayBuffer();\n            const buffer = new Uint8Array(data);\n            manager.snapshots.set(this.guid, buffer);\n          }\n          this.notifyUpdate();\n          resolve(true);\n        });\n      } else {\n        this.notifyUpdate();\n        resolve(true);\n      }\n    });\n  }\n  /**\n   * Captures a snapshot of the current viewpoint and stores it in the snapshots manager.\n   */\n  takeSnapshot() {\n    return new Promise((resolve) => {\n      if (!this.world) {\n        resolve(false);\n        return;\n      }\n      const { camera, renderer } = this.world;\n      if (!renderer) {\n        throw new Error(\"Viewpoint: the world needs to have a renderer!\");\n      }\n      const manager = this._components.get(Viewpoints);\n      const canvas = renderer.three.domElement;\n      renderer.three.render(this.world.scene.three, camera.three);\n      canvas.toBlob(async (blob) => {\n        if (blob) {\n          const data = await blob.arrayBuffer();\n          const buffer = new Uint8Array(data);\n          manager.snapshots.set(this.guid, buffer);\n        }\n        this.notifyUpdate();\n        resolve(true);\n      });\n    });\n  }\n  /**\n   * Updates the collection of clipping planes by clearing the current set and adding enabled planes\n   * from the associated `Clipper` component.\n   */\n  updateClippingPlanes() {\n    this.clippingPlanes.clear();\n    const clipper = this._components.get(Clipper);\n    for (const [id, plane] of clipper.list) {\n      if (!plane.enabled)\n        continue;\n      this.clippingPlanes.add(id);\n    }\n  }\n  /**\n   * Applies visibility settings to components based on default visibility, exceptions, and selections.\n   *\n   * This method adjusts the visibility of components using the `Hider` instance. It ensures that:\n   * - The default visibility is applied to all components.\n   * - Exceptions are handled to override the default visibility.\n   * - Selected components are always visible.\n   */\n  async applyVisibility() {\n    const hider = this._components.get(Hider);\n    hider.set(this.defaultVisibility);\n    const exception = await this.getExceptionMap();\n    hider.set(!this.defaultVisibility, exception);\n    const selection = await this.getSelectionMap();\n    hider.set(true, selection);\n  }\n  // TODO: Analyze how this works along with the Highlighter\n  /**\n   * Asynchronously sets the colorization state for the viewpoint's components.\n   * When the state is true, it applies the defined component colors to the corresponding fragments.\n   * When the state is false, it resets the highlight for the corresponding fragments.\n   *\n   * @param state - A boolean indicating whether to apply or reset the colorization.\n   *                If true, the components will be colorized. If false, the colorization will be reset.\n   * @returns A Promise that resolves when all colorization or reset operations are complete.\n   * @remarks Be careful when using this method along with the Highlighter as it can cause unwanted results\n   */\n  async setColorizationState(state) {\n    const fragments = this._components.get(FragmentsManager);\n    const promises = [];\n    if (state) {\n      for (const [color, guids] of this.componentColors) {\n        const hexColorString = `#${color}`;\n        const modelIdMap = await fragments.guidsToModelIdMap(guids);\n        for (const [modelId, localIds] of Object.entries(modelIdMap)) {\n          const model = fragments.list.get(modelId);\n          if (!model)\n            continue;\n          promises.push(\n            model.highlight([...localIds], {\n              customId: hexColorString,\n              color: new THREE$1.Color(hexColorString),\n              renderedFaces: FRAGS.RenderedFaces.ONE,\n              opacity: 1,\n              transparent: false\n            })\n          );\n        }\n      }\n    } else {\n      for (const [_, guids] of this.componentColors) {\n        const modelIdMap = await fragments.guidsToModelIdMap(guids);\n        for (const [modelId, localIds] of Object.entries(modelIdMap)) {\n          const model = fragments.list.get(modelId);\n          if (!model)\n            continue;\n          promises.push(model.resetHighlight([...localIds]));\n        }\n      }\n    }\n    promises.push(fragments.core.update(true));\n    await Promise.all(promises);\n  }\n  /**\n   * Sets the enabled state of all clipping planes associated with this viewpoint.\n   * @param state A boolean indicating whether the clipping planes should be enabled or disabled.\n   */\n  setClippingState(state) {\n    const clipper = this._components.get(Clipper);\n    for (const [id, plane] of clipper.list) {\n      plane.enabled = state && this.clippingPlanes.has(id);\n    }\n  }\n  /**\n   * Sets the visibility of all clipping planes associated with this viewpoint.\n   *\n   * @param visibility - A boolean indicating whether the clipping planes should be visible (`true`) or hidden (`false`).\n   */\n  setClippingVisibility(visibility) {\n    const clipper = this._components.get(Clipper);\n    for (const id of this.clippingPlanes) {\n      const plane = clipper.list.get(id);\n      if (!plane)\n        continue;\n      plane.visible = visibility;\n    }\n  }\n  async createComponentTags(from) {\n    var _a2;\n    const fragments = this._components.get(FragmentsManager);\n    const manager = this._components.get(BCFTopics);\n    let tags = \"\";\n    if (manager.config.includeSelectionTag) {\n      const modelIdMap = from === \"selection\" ? await this.getSelectionMap() : await this.getExceptionMap();\n      for (const modelID in modelIdMap) {\n        const model = fragments.list.get(modelID);\n        if (!model)\n          continue;\n        const localIds = modelIdMap[modelID];\n        for (const localId of localIds) {\n          const item = model.getItem(localId);\n          const globalID = await item.getGuid();\n          if (!globalID)\n            continue;\n          const tag = (_a2 = await item.getAttributes()) == null ? void 0 : _a2.getValue(\"Tag\");\n          let tagAttribute = null;\n          if (tag)\n            tagAttribute = `AuthoringToolId=\"${tag}\"`;\n          tags += `\n<Component IfcGuid=\"${globalID}\" ${tagAttribute ?? \"\"} />`;\n        }\n      }\n    } else {\n      tags = [...this.selectionComponents].map((globalId) => `<Component IfcGuid=\"${globalId}\" />`).join(`\n`);\n    }\n    return tags;\n  }\n  createColorTags() {\n    let colorTags = \"\";\n    for (const [color, components] of this.componentColors.entries()) {\n      const tags = components.map((globalId) => `\n<Component IfcGuid=\"${globalId}\" />`).join(\"\\n\");\n      colorTags += `<Color Color=\"${color}\">\n${tags}\n</Color>`;\n    }\n    if (colorTags.length !== 0) {\n      return `<Coloring>\n${colorTags}\n</Coloring>`;\n    }\n    return `<Coloring />`;\n  }\n  /**\n   * Converts the current viewpoint instance into a JSON representation compliant with the BCFViewpoint format.\n   *\n   * @returns A BCF API JSON complaint object representing the viewpoint, including its GUID, components,\n   * visibility settings, clipping planes, camera configuration, and snapshot data.\n   */\n  toJSON() {\n    const clipper = this._components.get(Clipper);\n    const result = {\n      guid: this.guid,\n      components: {\n        selection: [...this.selectionComponents].map((guid) => {\n          return { ifc_guid: guid, authoring_tool_id: null };\n        }),\n        coloring: [...this.componentColors].map(([color, guids]) => {\n          return {\n            color,\n            components: guids.map((guid) => {\n              return { ifc_guid: guid, authoring_tool_id: null };\n            })\n          };\n        }),\n        visibility: {\n          default_visibility: this.defaultVisibility,\n          exceptions: [...this.exceptionComponents].map((guid) => {\n            return { ifc_guid: guid, authoring_tool_id: null };\n          }),\n          view_setup_hints: {\n            spaces_visible: this.spacesVisible,\n            space_boundaries_visible: this.spaceBoundariesVisible,\n            openings_visible: this.openingsVisible\n          }\n        }\n      },\n      clipping_planes: [...this.clippingPlanes].map((id) => {\n        const plane = clipper.list.get(id);\n        if (!plane)\n          return null;\n        const origin = plane._controls.worldPosition ?? plane.origin;\n        const { normal } = plane;\n        return {\n          location: { x: origin.x, y: -origin.z, z: origin.y },\n          direction: { x: normal.x, y: -normal.z, z: normal.y }\n        };\n      }).filter((plane) => plane !== null)\n    };\n    if (\"field_of_view\" in this.camera) {\n      result.perspective_camera = this.camera;\n    } else {\n      result.orthogonal_camera = this.camera;\n    }\n    const manager = this._components.get(Viewpoints);\n    const snapshot = manager.snapshots.get(this.snapshot);\n    if (snapshot) {\n      const str = snapshot.toString();\n      const base64Data = btoa(str);\n      const extension = manager.getSnapshotExtension(this.snapshot);\n      result.snapshot = { snapshot_type: extension, snapshot_data: base64Data };\n    }\n    return result;\n  }\n  /**\n   * Serializes the viewpoint into a buildingSMART compliant XML string for export.\n   *\n   * @param version - The version of the BCF Manager to use for serialization.\n   *                   If not provided, the current version of the manager will be used.\n   *\n   * @returns A Promise that resolves to an XML string representing the viewpoint.\n   *          The XML string follows the BCF VisualizationInfo schema.\n   *\n   * @throws An error if the world's camera does not have camera controls.\n   * @throws An error if the world's renderer is not available.\n   */\n  async serialize(version = this._managerVersion) {\n    const fragments = this._components.get(FragmentsManager);\n    const position = this.position;\n    position.applyMatrix4(fragments.baseCoordinationMatrix.clone().invert());\n    const direction = this.direction;\n    direction.normalize();\n    const rotationMatrix = new THREE$1.Matrix4().makeRotationX(Math.PI / 2);\n    const upVector = direction.clone().applyMatrix4(rotationMatrix);\n    upVector.normalize();\n    const cameraViewpointXML = `<CameraViewPoint>\n      <X>${position.x}</X>\n      <Y>${-position.z}</Y>\n      <Z>${position.y}</Z>\n    </CameraViewPoint>`;\n    const cameraDirectionXML = `<CameraDirection>\n      <X>${direction.x}</X>\n      <Y>${-direction.z}</Y>\n      <Z>${direction.y}</Z>\n    </CameraDirection>`;\n    const cameraUpVectorXML = `<CameraUpVector>\n      <X>${upVector.x}</X>\n      <Y>${-upVector.z}</Y>\n      <Z>${upVector.y}</Z>\n    </CameraUpVector>`;\n    const cameraRatioXML = `<AspectRatio>${this.camera.aspect_ratio}</AspectRatio>`;\n    let cameraXML = \"\";\n    if (\"viewToWorld\" in this.camera) {\n      cameraXML = `<OrthogonalCamera>\n        ${cameraViewpointXML}\n        ${cameraDirectionXML}\n        ${cameraUpVectorXML}\n        ${cameraRatioXML}\n        <ViewToWorldScale>${this.camera.viewToWorld}</ViewToWorldScale>\n      </OrthogonalCamera>`;\n    } else if (\"fov\" in this.camera) {\n      cameraXML = `<PerspectiveCamera>\n        ${cameraViewpointXML}\n        ${cameraDirectionXML}\n        ${cameraUpVectorXML}\n        ${cameraRatioXML}\n        <FieldOfView>${this.camera.fov}</FieldOfView>\n      </PerspectiveCamera>`;\n    }\n    const viewSetupHints = `<ViewSetupHints SpacesVisible=\"${this.spacesVisible ?? false}\" SpaceBoundariesVisible=\"${this.spaceBoundariesVisible ?? false}\" OpeningsVisible=\"${this.openingsVisible ?? false}\" />`;\n    const selectionTags = (await this.createComponentTags(\"selection\")).trim();\n    const exceptionTags = (await this.createComponentTags(\"exception\")).trim();\n    const colorTags = this.createColorTags();\n    return `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n    <VisualizationInfo Guid=\"${this.guid}\">\n      <Components>\n        ${version === \"2.1\" ? viewSetupHints : \"\"}\n        ${selectionTags.length !== 0 ? `<Selection>${selectionTags}</Selection>` : \"\"}\n        <Visibility DefaultVisibility=\"${this.defaultVisibility}\">\n          ${version === \"3\" ? viewSetupHints : \"\"}\n          ${exceptionTags.length !== 0 ? `<Exceptions>${exceptionTags}</Exceptions>` : \"\"}\n        </Visibility>\n        ${colorTags}\n      </Components>\n      ${cameraXML}\n    </VisualizationInfo>`;\n  }\n}\nclass ViewpointsConfigManager extends Configurator {\n  constructor() {\n    super(...arguments);\n    __publicField(this, \"_config\", {\n      overwriteColors: {\n        value: false,\n        type: \"Boolean\"\n      }\n    });\n  }\n  get overwriteColors() {\n    return this._config.overwriteColors.value;\n  }\n  set overwriteColors(value) {\n    this._config.overwriteColors.value = value;\n  }\n}\nconst _Viewpoints = class _Viewpoints extends Component {\n  constructor(components) {\n    super(components);\n    __publicField(this, \"enabled\", true);\n    /**\n     * Represents the default world where all viewpoints will be created.\n     * A viewpoint can specify a different world if necessary.\n     */\n    __publicField(this, \"world\", null);\n    /**\n     * A DataMap that stores Viewpoint instances, indexed by their unique identifiers (guid).\n     * This map is used to manage and retrieve Viewpoint instances within the Viewpoints component.\n     */\n    __publicField(this, \"list\", new DataMap$1());\n    /**\n     * A collection of snapshots represented as a mapping between string keys and their corresponding binary data.\n     */\n    __publicField(this, \"snapshots\", new DataMap$1());\n    __publicField(this, \"isSetup\", false);\n    __publicField(this, \"onSetup\", new Event());\n    __publicField(this, \"config\", new ViewpointsConfigManager(\n      this,\n      this.components,\n      \"Viewpoints\",\n      _Viewpoints.uuid\n    ));\n    /** {@link Disposable.onDisposed} */\n    __publicField(this, \"onDisposed\", new Event());\n    components.add(_Viewpoints.uuid, this);\n  }\n  /**\n   * Creates a new Viewpoint instance and adds it to the list.\n   *\n   * @param data - Optional partial data for the Viewpoint. If not provided, default data will be used.\n   *\n   * @returns The newly created Viewpoint instance.\n   */\n  create(data) {\n    const viewpoint = new Viewpoint(this.components, data);\n    viewpoint.world = this.world;\n    if (!data)\n      this.list.set(viewpoint.guid, viewpoint);\n    return viewpoint;\n  }\n  /**\n   * Determines the file extension of a snapshot based on its header bytes.\n   *\n   * @param name - The name of the snapshot from the list to retrieve its extension.\n   * @returns The file extension as a string. Defaults to \"jpeg\" if the snapshot\n   *          does not exist or the header bytes do not match known formats.\n   */\n  getSnapshotExtension(name) {\n    let extension = \"jpeg\";\n    const bytes = this.snapshots.get(name);\n    if (!bytes)\n      return extension;\n    const headerBytes = bytes.subarray(0, 4);\n    let header = \"\";\n    for (let i = 0; i < headerBytes.length; i++) {\n      header += headerBytes[i].toString(16);\n    }\n    if (header.startsWith(\"89504e47\")) {\n      extension = \"png\";\n    }\n    if (header.startsWith(\"ffd8ffe\")) {\n      extension = \"jpeg\";\n    }\n    return extension;\n  }\n  setup() {\n  }\n  /**\n   * Disposes of the Viewpoints component and its associated resources.\n   *\n   * This method is responsible for cleaning up any resources held by the Viewpoints component,\n   * such as disposing of the DataMap of Viewpoint instances and triggering and resetting the\n   * onDisposed event.\n   */\n  dispose() {\n    this.list.dispose();\n    this.onDisposed.trigger();\n    this.onDisposed.reset();\n  }\n};\n__publicField(_Viewpoints, \"uuid\", \"ee867824-a796-408d-8aa0-4e5962a83c66\");\nlet Viewpoints = _Viewpoints;\nclass View {\n  constructor(components, config) {\n    __publicField(this, \"_components\");\n    __publicField(this, \"_cameraOffset\", 10);\n    __publicField(this, \"_planeHelper\");\n    __publicField(this, \"_farPlaneHelper\");\n    __publicField(this, \"_cameraHelper\");\n    __publicField(this, \"onStateChanged\", new Event());\n    __publicField(this, \"onUpdated\", new Event());\n    __publicField(this, \"onDisposed\", new Event());\n    __publicField(this, \"camera\");\n    __publicField(this, \"plane\", new THREE$1.Plane());\n    __publicField(this, \"farPlane\", new THREE$1.Plane());\n    __publicField(this, \"id\", UUID.create());\n    // A flag to indicate when this view has been opened by its manager\n    __publicField(this, \"_open\", false);\n    // Defines how far from the plane the second cut will be made\n    __publicField(this, \"_range\", Views.defaultRange);\n    __publicField(this, \"_world\", null);\n    __publicField(this, \"_helpersVisible\", false);\n    __publicField(this, \"_planesEnabled\", false);\n    this._components = components;\n    this.camera = new OrthoPerspectiveCamera(this._components);\n    const { threeOrtho: camera } = this.camera;\n    if (config == null ? void 0 : config.id)\n      this.id = config.id;\n    if ((config == null ? void 0 : config.normal) && (config == null ? void 0 : config.point)) {\n      const { normal, point } = config;\n      this.plane.setFromNormalAndCoplanarPoint(normal, point);\n    }\n    this._cameraHelper = new THREE$1.CameraHelper(camera);\n    this._planeHelper = new THREE$1.PlaneHelper(this.plane, 50);\n    this._farPlaneHelper = new THREE$1.PlaneHelper(this.farPlane, 50);\n    this.farPlaneHelperColor = new THREE$1.Color(\"blue\");\n    this.update();\n  }\n  get _planeNormalOpposite() {\n    return this.plane.normal.clone().negate();\n  }\n  get _planePosition() {\n    return this.plane.normal.clone().multiplyScalar(-this.plane.constant);\n  }\n  get _cameraPosition() {\n    return this._planePosition.addScaledVector(\n      this._planeNormalOpposite,\n      this._cameraOffset\n    );\n  }\n  set open(value) {\n    this._open = value;\n    this.onStateChanged.trigger([\"open\"]);\n  }\n  get open() {\n    return this._open;\n  }\n  set planeHelperColor(value) {\n    if (!Array.isArray(this._planeHelper.material) && \"color\" in this._planeHelper.material && this._planeHelper.material.color instanceof THREE$1.Color) {\n      this._planeHelper.material.color = value;\n    }\n  }\n  set farPlaneHelperColor(value) {\n    if (!Array.isArray(this._farPlaneHelper.material) && \"color\" in this._farPlaneHelper.material && this._farPlaneHelper.material.color instanceof THREE$1.Color) {\n      this._farPlaneHelper.material.color = value;\n    }\n  }\n  set range(value) {\n    this._range = value;\n    this.update();\n  }\n  get range() {\n    return this._range;\n  }\n  set distance(value) {\n    this.plane.constant = value;\n    this.update();\n  }\n  get distance() {\n    return this.plane.constant;\n  }\n  set world(value) {\n    this._world = value;\n    this.camera.currentWorld = value;\n    if (value) {\n      this.camera.projection.set(\"Orthographic\");\n      this.camera.set(\"Plan\");\n      this.camera.controls.dollySpeed = 6;\n      this.camera.controls.restThreshold = 5e-3;\n      this.update();\n    }\n  }\n  get world() {\n    return this._world;\n  }\n  set helpersVisible(value) {\n    if (!value) {\n      this._helpersVisible = value;\n      this._planeHelper.removeFromParent();\n      this._farPlaneHelper.removeFromParent();\n      this._cameraHelper.removeFromParent();\n      return;\n    }\n    if (!this.world)\n      return;\n    this._helpersVisible = value;\n    this.world.scene.three.add(\n      this._planeHelper,\n      this._farPlaneHelper\n      // this._cameraHelper,\n    );\n  }\n  get helpersVisible() {\n    return this._helpersVisible;\n  }\n  // for debugging purposes\n  // Section the model based on the planes\n  // without using the camera\n  set planesEnabled(value) {\n    const { world } = this;\n    if (!world)\n      return;\n    const { renderer } = world;\n    if (!renderer)\n      return;\n    renderer.setPlane(value, this.plane);\n    renderer.setPlane(value, this.farPlane);\n    this._planesEnabled = value;\n  }\n  get planesEnabled() {\n    return this._planesEnabled;\n  }\n  dispose() {\n    this.helpersVisible = false;\n    const disposer = this._components.get(Disposer);\n    disposer.destroy(this._planeHelper);\n    disposer.destroy(this._farPlaneHelper);\n    disposer.destroy(this._cameraHelper);\n    this.camera.dispose();\n    this.onDisposed.trigger();\n  }\n  // update based on changes made to this.plane\n  update() {\n    if (this.world) {\n      const position = this._cameraPosition;\n      const target = this._planePosition;\n      this.camera.controls.setLookAt(\n        position.x,\n        position.y,\n        position.z,\n        target.x,\n        target.y,\n        target.z,\n        false\n      );\n    }\n    this.farPlane.normal.copy(this._planeNormalOpposite);\n    this.farPlane.constant = this.range - this.plane.constant;\n    this.onUpdated.trigger();\n  }\n  flip() {\n    this.plane.normal.negate();\n    this.update();\n  }\n}\nconst _Views = class _Views extends Component {\n  constructor(components) {\n    super(components);\n    /**\n     * A readonly map that associates string keys with `View` instances.\n     * This map is used to store and manage a collection of views.\n     */\n    __publicField(this, \"list\", new DataMap$1());\n    __publicField(this, \"enabled\", true);\n    /**\n     * The default world to be used when creating views.\n     *\n     * - If `world` is set to `null`, views can still specify another world directly in their instance.\n     * - This property allows views to inherit a default world context unless explicitly overridden.\n     */\n    __publicField(this, \"world\", null);\n    __publicField(this, \"_fragmentsUpdateEvent\", () => {\n      const fragments = this.components.get(FragmentsManager);\n      fragments.core.update(true);\n    });\n    components.add(_Views.uuid, this);\n    this.setupEvents();\n  }\n  /**\n   * Determines whether there are any open views in this component's list.\n   */\n  get hasOpenViews() {\n    return [...this.list.values()].some((v) => v.open);\n  }\n  setupEvents() {\n    this.list.onBeforeDelete.add(({ key, value: view }) => {\n      if (view.open)\n        this.close(key);\n      view.dispose();\n    });\n  }\n  /**\n   * Creates a new view with the specified normal vector, point, and optional configuration.\n   *\n   * @param normal - The normal vector defining the orientation of the view.\n   * @param point - The point in space where the view is centered.\n   * @param config - Optional configuration for the view creation.\n   * @returns The newly created `View` instance.\n   * @remarks The created view will be added to the component's list data map.\n   */\n  create(normal, point, config) {\n    const view = new View(this.components, { id: config == null ? void 0 : config.id, normal, point });\n    view.world = (config == null ? void 0 : config.world) ?? this.world;\n    this.list.set(view.id, view);\n    return view;\n  }\n  /**\n   * Creates a new view from the specified plane and optional configuration.\n   *\n   * @param plane - The `THREE.Plane` object representing the plane to create the view from.\n   * @param config - Optional configuration for creating the view.\n   * @returns The newly created `View` instance.\n   * @remarks The created view will be added to the component's list data map.\n   */\n  createFromPlane(plane, config) {\n    const view = new View(this.components, { id: config == null ? void 0 : config.id });\n    view.plane.copy(plane);\n    view.update();\n    view.world = (config == null ? void 0 : config.world) ?? this.world;\n    this.list.set(view.id, view);\n    return view;\n  }\n  /**\n   * Creates views from IFC storeys based on the provided configuration.\n   * This method iterates through the fragments of the model, filters storeys\n   * based on the configuration, and generates views for each storey.\n   *\n   * @param config - Optional configuration for creating views from IFC storeys.\n   * @returns A promise that resolves to an array of `View` objects created from the IFC storeys.\n   *\n   * @remarks Each IfcBuilsingStorey is represented as a plane in 3D space, with its elevation adjusted by the `offset`. The created views will be added to the component's list data map.\n   */\n  async createFromIfcStoreys(config) {\n    const result = [];\n    const fragments = this.components.get(FragmentsManager);\n    const offset = (config == null ? void 0 : config.offset) === void 0 ? 0.25 : config.offset;\n    for (const [modelId, model] of fragments.list) {\n      if (config && config.modelIds && !config.modelIds.some((regex) => regex.test(modelId))) {\n        continue;\n      }\n      const storeys = Object.values(\n        await model.getItemsOfCategories([/BUILDINGSTOREY/])\n      ).flat();\n      if (storeys.length === 0)\n        continue;\n      const storeysData = await model.getItemsData(storeys);\n      const [, coordHeight] = await model.getCoordinates();\n      const normal = new THREE$1.Vector3(0, -1, 0);\n      for (const storey of storeysData) {\n        if (!(\"value\" in storey.Name && \"value\" in storey.Elevation)) {\n          continue;\n        }\n        const { value: name } = storey.Name;\n        if ((config == null ? void 0 : config.storeyNames) && !config.storeyNames.some((value) => value.test(name))) {\n          continue;\n        }\n        const height = storey.Elevation.value + coordHeight + offset;\n        const plane = new THREE$1.Plane(normal, height);\n        const view = this.createFromPlane(plane, {\n          id: name,\n          world: config == null ? void 0 : config.world\n        });\n        result.push(view);\n      }\n    }\n    return result;\n  }\n  /**\n   * Creates views representing the front, back, left, and right sides of bounding boxes for specified models or a combined bounding box of all models.\n   *\n   * @param config - Optional configuration object for creating bounding views.\n   * @returns A promise that resolves to an array of `View` objects created from the boundings.\n   * @remarks The method calculates bounding boxes for the specified models, optionally combines them into a single bounding box, and creates views for the planes representing the bounding box sides.\n   */\n  createElevations(config) {\n    const result = [];\n    const fragments = this.components.get(FragmentsManager);\n    const combine = (config == null ? void 0 : config.combine) === void 0 ? false : config.combine;\n    const namingFunction = (config == null ? void 0 : config.namingCallback) ?? ((modelId) => {\n      return {\n        front: `${combine ? \"Front\" : `${modelId}: Front`}`,\n        back: `${combine ? \"Back\" : `${modelId}: Back`}`,\n        left: `${combine ? \"Left\" : `${modelId}: Left`}`,\n        right: `${combine ? \"Right\" : `${modelId}: Right`}`\n      };\n    });\n    let boxes = [];\n    for (const [id, model] of fragments.list) {\n      if (config && config.modelIds && !config.modelIds.some((regex) => regex.test(id))) {\n        continue;\n      }\n      boxes.push({ id, box: model.box });\n    }\n    if (combine) {\n      const boxer = this.components.get(BoundingBoxer);\n      boxer.list.clear();\n      boxer.list.add(...boxes.map((data) => data.box));\n      const box = boxer.get();\n      boxes = [{ id: \"combined\", box }];\n    }\n    for (const { id: modelId, box } of boxes) {\n      const { min, max } = box;\n      const xLength = Math.abs(max.x - min.x);\n      const zLength = Math.abs(max.z - min.z);\n      const center = new THREE$1.Vector3();\n      box.getCenter(center);\n      const frontPlane = new THREE$1.Plane(new THREE$1.Vector3(0, 0, -1), max.z);\n      const backPlane = new THREE$1.Plane(new THREE$1.Vector3(0, 0, 1), -min.z);\n      const leftPlane = new THREE$1.Plane(new THREE$1.Vector3(-1, 0, 0), max.x);\n      const rightPlane = new THREE$1.Plane(new THREE$1.Vector3(1, 0, 0), -min.x);\n      const {\n        front: frontName,\n        back: backName,\n        left: leftName,\n        right: rightName\n      } = namingFunction(modelId);\n      const frontView = this.createFromPlane(frontPlane, {\n        id: frontName,\n        world: config == null ? void 0 : config.world\n      });\n      frontView.range = zLength;\n      const backView = this.createFromPlane(backPlane, {\n        id: backName,\n        world: config == null ? void 0 : config.world\n      });\n      backView.range = zLength;\n      const leftView = this.createFromPlane(leftPlane, {\n        id: leftName,\n        world: config == null ? void 0 : config.world\n      });\n      leftView.range = xLength;\n      const rightView = this.createFromPlane(rightPlane, {\n        id: rightName,\n        world: config == null ? void 0 : config.world\n      });\n      rightView.range = xLength;\n      result.push(frontView, backView, leftView, rightView);\n    }\n    return result;\n  }\n  /**\n   * Opens a view by its unique identifier. Ensures that no more than one view\n   * is opened in the same world at a time. If the view is already open, the method\n   * returns without performing any action.\n   *\n   * @param id - The unique identifier of the view to open.\n   * @remarks This method changes world camera to use the view's.\n   */\n  open(id) {\n    const view = this.list.get(id);\n    if (!view) {\n      throw new Error(`Views: the view with id ${id} doesn't exist.`);\n    }\n    if (view.open)\n      return;\n    const { world } = view;\n    if (!world) {\n      throw new Error(`Views: no world found for view with id ${id}.`);\n    }\n    const { renderer } = world;\n    if (!renderer) {\n      throw new Error(\n        `Views: no renderer found for world with id ${world.uuid}.`\n      );\n    }\n    for (const [, existingView] of this.list) {\n      if (existingView.world !== world)\n        continue;\n      this.close(existingView.id);\n    }\n    renderer.setPlane(true, view.plane);\n    renderer.setPlane(true, view.farPlane);\n    view.camera.controls.addEventListener(\"rest\", this._fragmentsUpdateEvent);\n    world.camera = view.camera;\n    view.open = true;\n  }\n  /**\n   * Closes a view by its unique identifier and performs necessary cleanup operations.\n   *\n   * @param id - The unique identifier of the view to be closed. If not provided, all opened views across worlds will be closed.\n   * @remarks This method resets the world to use its default camera.\n   */\n  close(id) {\n    let view;\n    if (id) {\n      view = this.list.get(id);\n    } else {\n      view = [...this.list.values()].find((v) => v.open);\n    }\n    if (id && !view) {\n      throw new Error(`Views: the view with id ${id} doesn't exist.`);\n    }\n    if (!view)\n      return;\n    if (!view.open)\n      return;\n    const { world } = view;\n    if (!world) {\n      throw new Error(`Views: no world found for view with id ${id}.`);\n    }\n    const { renderer } = world;\n    if (!renderer) {\n      throw new Error(\n        `Views: no renderer found for world with id ${world.uuid}.`\n      );\n    }\n    renderer.setPlane(false, view.plane);\n    renderer.setPlane(false, view.farPlane);\n    view.camera.controls.removeEventListener(\n      \"rest\",\n      this._fragmentsUpdateEvent\n    );\n    world.useDefaultCamera();\n    view.open = false;\n  }\n};\n__publicField(_Views, \"uuid\", \"fb22f1f5-6598-4664-a11d-de8963ae420f\");\n/**\n * The default range value used by the Views component.\n * This represents the standard range setting applied unless explicitly overridden.\n */\n__publicField(_Views, \"defaultRange\", 15);\nlet Views = _Views;\nfunction clientWaitAsync(gl, sync, flags, intervalMilliseconds) {\n  return new Promise((resolve, reject) => {\n    function test() {\n      const res = gl.clientWaitSync(sync, flags, 0);\n      if (res === gl.WAIT_FAILED) {\n        reject();\n        return;\n      }\n      if (res === gl.TIMEOUT_EXPIRED) {\n        setTimeout(test, intervalMilliseconds);\n        return;\n      }\n      resolve();\n    }\n    test();\n  });\n}\nasync function getBufferSubDataAsync(gl, target, buffer, srcByteOffset, dstBuffer, dstOffset, length) {\n  const sync = gl.fenceSync(gl.SYNC_GPU_COMMANDS_COMPLETE, 0);\n  gl.flush();\n  await clientWaitAsync(gl, sync, 0, 10);\n  gl.deleteSync(sync);\n  gl.bindBuffer(target, buffer);\n  gl.getBufferSubData(target, srcByteOffset, dstBuffer, dstOffset, length);\n  gl.bindBuffer(target, null);\n}\nasync function readPixelsAsync(gl, x, y, w, h, format, type, dest) {\n  const buf = gl.createBuffer();\n  gl.bindBuffer(gl.PIXEL_PACK_BUFFER, buf);\n  gl.bufferData(gl.PIXEL_PACK_BUFFER, dest.byteLength, gl.STREAM_READ);\n  gl.readPixels(x, y, w, h, format, type, 0);\n  gl.bindBuffer(gl.PIXEL_PACK_BUFFER, null);\n  await getBufferSubDataAsync(gl, gl.PIXEL_PACK_BUFFER, buf, 0, dest);\n  gl.deleteBuffer(buf);\n  return dest;\n}\nclass DistanceRenderer {\n  constructor(components, world) {\n    /** {@link Disposable.onDisposed} */\n    __publicField(this, \"onDisposed\", new Event());\n    /**\n     * Fires after making the visibility check to the meshes. It lists the\n     * meshes that are currently visible, and the ones that were visible\n     * just before but not anymore.\n     */\n    __publicField(this, \"onDistanceComputed\", new Event());\n    /**\n     * Objects that won't be taken into account in the distance check.\n     */\n    __publicField(this, \"excludedObjects\", /* @__PURE__ */ new Set());\n    /**\n     * Whether this renderer is active or not. If not, it won't render anything.\n     */\n    __publicField(this, \"enabled\", true);\n    /**\n     * Render the internal scene used to determine the object visibility. Used\n     * for debugging purposes.\n     */\n    __publicField(this, \"renderDebugFrame\", false);\n    /** The components instance to which this renderer belongs. */\n    __publicField(this, \"components\");\n    /**\n     * The scene where the distance is computed.\n     */\n    __publicField(this, \"scene\", new THREE$1.Scene());\n    /**\n     * The camera used to compute the distance.\n     */\n    __publicField(this, \"camera\", new THREE$1.OrthographicCamera(-1, 1, 1, -1, 0, 1));\n    /**\n     * The material used to compute the distance.\n     */\n    __publicField(this, \"depthMaterial\");\n    /** The world instance to which this renderer belongs. */\n    __publicField(this, \"world\");\n    __publicField(this, \"worker\");\n    __publicField(this, \"_width\", 512);\n    __publicField(this, \"_height\", 512);\n    __publicField(this, \"_postQuad\");\n    __publicField(this, \"tempRT\");\n    __publicField(this, \"resultRT\");\n    __publicField(this, \"bufferSize\");\n    __publicField(this, \"_buffer\");\n    // Prevents worker being fired multiple times\n    __publicField(this, \"_isWorkerBusy\", false);\n    /**\n     * The function that the culler uses to reprocess the scene. Generally it's\n     * better to call needsUpdate, but you can also call this to force it.\n     * @param force if true, it will refresh the scene even if needsUpdate is\n     * not true.\n     */\n    __publicField(this, \"compute\", async () => {\n      if (!this.enabled || this.world.isDisposing) {\n        return;\n      }\n      if (this._isWorkerBusy) {\n        return;\n      }\n      this._isWorkerBusy = true;\n      this.world.camera.three.updateMatrix();\n      const renderer = this.world.renderer.three;\n      renderer.setRenderTarget(this.tempRT);\n      const tempVariableName = \"visibilityBeforeDistanceCheck\";\n      for (const object of this.excludedObjects) {\n        object.userData[tempVariableName] = object.visible;\n        object.visible = false;\n      }\n      renderer.render(this.world.scene.three, this.world.camera.three);\n      for (const object of this.excludedObjects) {\n        if (object.userData[tempVariableName] !== void 0) {\n          object.visible = object.userData[tempVariableName];\n        }\n      }\n      this.depthMaterial.uniforms.tDiffuse.value = this.tempRT.texture;\n      this.depthMaterial.uniforms.tDepth.value = this.tempRT.depthTexture;\n      renderer.setRenderTarget(this.resultRT);\n      renderer.render(this.scene, this.camera);\n      const context = renderer.getContext();\n      try {\n        await readPixelsAsync(\n          context,\n          0,\n          0,\n          this._width,\n          this._height,\n          context.RGBA,\n          context.UNSIGNED_BYTE,\n          this._buffer\n        );\n      } catch (e) {\n        renderer.setRenderTarget(null);\n        this._isWorkerBusy = false;\n        return;\n      }\n      renderer.setRenderTarget(null);\n      if (this.renderDebugFrame) {\n        renderer.render(this.scene, this.camera);\n      }\n      this.worker.postMessage({\n        buffer: this._buffer\n      });\n    });\n    __publicField(this, \"handleWorkerMessage\", (event) => {\n      if (!this.enabled || this.world.isDisposing) {\n        return;\n      }\n      const colors = event.data.colors;\n      let min = Number.MAX_VALUE;\n      for (const value of colors) {\n        if (value === 0) {\n          continue;\n        }\n        if (value < min) {\n          min = value;\n        }\n      }\n      const camera = this.world.camera.three || THREE$1.OrthographicCamera;\n      const normalized = min / 255;\n      const maxFoundDistance = (normalized - 1) * -1 * (camera.far - camera.near);\n      const maxValidDistance = Math.min(maxFoundDistance, camera.far);\n      this.onDistanceComputed.trigger(maxValidDistance);\n      this._isWorkerBusy = false;\n    });\n    if (!world.renderer) {\n      throw new Error(\"The given world must have a renderer!\");\n    }\n    this.components = components;\n    this.world = world;\n    const camera = world.camera.three;\n    this.tempRT = new THREE$1.WebGLRenderTarget(this._width, this._height);\n    this.bufferSize = this._width * this._height * 4;\n    this._buffer = new Uint8Array(this.bufferSize);\n    this.tempRT.texture.minFilter = THREE$1.NearestFilter;\n    this.tempRT.texture.magFilter = THREE$1.NearestFilter;\n    this.tempRT.stencilBuffer = false;\n    this.tempRT.samples = 0;\n    this.tempRT.depthTexture = new THREE$1.DepthTexture(\n      this._width,\n      this._height\n    );\n    this.tempRT.depthTexture.format = THREE$1.DepthFormat;\n    this.tempRT.depthTexture.type = THREE$1.UnsignedShortType;\n    this.resultRT = new THREE$1.WebGLRenderTarget(this._width, this._height);\n    this.depthMaterial = new THREE$1.ShaderMaterial({\n      vertexShader: `\nvarying vec2 vUv;\n\nvoid main() {\n  vUv = uv;\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n}\n    `,\n      fragmentShader: `\n#include <packing>\n\nvarying vec2 vUv;\nuniform sampler2D tDiffuse;\nuniform sampler2D tDepth;\nuniform float cameraNear;\nuniform float cameraFar;\n\n\nfloat readDepth( sampler2D depthSampler, vec2 coord ) {\n  float fragCoordZ = texture2D( depthSampler, coord ).x;\n  float viewZ = perspectiveDepthToViewZ( fragCoordZ, cameraNear, cameraFar );\n  return viewZToOrthographicDepth( viewZ, cameraNear, cameraFar );\n}\n\nvoid main() {\n  //vec3 diffuse = texture2D( tDiffuse, vUv ).rgb;\n  float depth = readDepth( tDepth, vUv );\n\n  gl_FragColor.rgb = 1.0 - vec3( depth );\n  gl_FragColor.a = 1.0;\n}\n    `,\n      uniforms: {\n        cameraNear: { value: camera.near },\n        cameraFar: { value: camera.far },\n        tDiffuse: { value: null },\n        tDepth: { value: null }\n      }\n    });\n    const postPlane = new THREE$1.PlaneGeometry(2, 2);\n    this._postQuad = new THREE$1.Mesh(postPlane, this.depthMaterial);\n    this.scene.add(this._postQuad);\n    const code = `\n      addEventListener(\"message\", (event) => {\n        const { buffer } = event.data;\n        const colors = new Set();\n        for (let i = 0; i < buffer.length; i += 4) {\n          const r = buffer[i];\n          colors.add(r);\n        }\n        postMessage({ colors });\n      });\n    `;\n    const blob = new Blob([code], { type: \"application/javascript\" });\n    this.worker = new Worker(URL.createObjectURL(blob));\n    this.worker.addEventListener(\"message\", this.handleWorkerMessage);\n  }\n  /** {@link Disposable.dispose} */\n  dispose() {\n    this.enabled = false;\n    this.onDistanceComputed.reset();\n    this.worker.terminate();\n    this.tempRT.dispose();\n    this.resultRT.dispose();\n    const children = [...this.scene.children];\n    this.excludedObjects.clear();\n    for (const child of children) {\n      child.removeFromParent();\n    }\n    this._postQuad.geometry.dispose();\n    this._postQuad.removeFromParent();\n    this._buffer = null;\n    this.onDisposed.reset();\n  }\n}\nclass ShadowedScene extends SimpleScene {\n  constructor() {\n    super(...arguments);\n    __publicField(this, \"_distanceRenderer\");\n    /**\n     * Whether the bias property should be set automatically depending on the shadow distance.\n     */\n    __publicField(this, \"autoBias\", true);\n    __publicField(this, \"_defaultShadowConfig\", {\n      cascade: 1,\n      resolution: 512\n    });\n    __publicField(this, \"_lightsWithShadow\", /* @__PURE__ */ new Map());\n    __publicField(this, \"_isComputingShadows\", false);\n    __publicField(this, \"_shadowsEnabled\", true);\n    __publicField(this, \"_bias\", 0);\n    __publicField(this, \"recomputeShadows\", (farthestDistance) => {\n      if (!this._shadowsEnabled) {\n        return;\n      }\n      if (this.autoBias) {\n        this.bias = -5e-3;\n      }\n      const factor = 1.5;\n      farthestDistance *= factor;\n      if (!this.currentWorld) {\n        throw new Error(\n          \"A world needs to be assigned to the scene before computing shadows!\"\n        );\n      }\n      if (!this._lightsWithShadow.size) {\n        throw new Error(\"No shadows found!\");\n      }\n      const camera = this.currentWorld.camera.three;\n      if (!(camera instanceof THREE$1.PerspectiveCamera) && !(camera instanceof THREE$1.OrthographicCamera)) {\n        throw new Error(\"Invalid camera type!\");\n      }\n      const camDirection = new THREE$1.Vector3();\n      camera.getWorldDirection(camDirection);\n      let currentDistance = farthestDistance;\n      const lightDirection = new THREE$1.Vector3();\n      lightDirection.copy(this.config.directionalLight.position);\n      lightDirection.normalize();\n      for (const [index, id] of this._lightsWithShadow) {\n        const light = this.directionalLights.get(id);\n        if (!light) {\n          throw new Error(\"Light not found.\");\n        }\n        const shadowCenter = new THREE$1.Vector3();\n        shadowCenter.copy(camDirection);\n        const isLastShadow = index === this._lightsWithShadow.size - 1;\n        const shadowOffset = isLastShadow ? currentDistance / 2 : currentDistance * 2 / 3;\n        shadowCenter.multiplyScalar(shadowOffset);\n        shadowCenter.add(camera.position);\n        const shadowRadius = currentDistance - shadowOffset;\n        const lightOffset = new THREE$1.Vector3();\n        lightOffset.copy(lightDirection);\n        lightOffset.multiplyScalar(shadowRadius);\n        light.target.position.copy(shadowCenter);\n        light.position.copy(shadowCenter);\n        light.position.add(lightOffset);\n        light.shadow.camera.right = shadowRadius;\n        light.shadow.camera.left = -shadowRadius;\n        light.shadow.camera.top = shadowRadius;\n        light.shadow.camera.bottom = -shadowRadius;\n        light.shadow.camera.far = shadowRadius * 2;\n        light.shadow.camera.updateProjectionMatrix();\n        light.shadow.camera.updateMatrix();\n        if (!isLastShadow) {\n          currentDistance /= 3;\n        }\n      }\n      this._isComputingShadows = false;\n    });\n  }\n  /**\n   * The getter for the bias to prevent artifacts (stripes). It usually ranges between 0 and -0.005.\n   */\n  get bias() {\n    return this._bias;\n  }\n  /**\n   * The setter for the bias to prevent artifacts (stripes). It usually ranges between 0 and -0.005.\n   */\n  set bias(value) {\n    this._bias = value;\n    for (const [, id] of this._lightsWithShadow) {\n      const light = this.directionalLights.get(id);\n      if (light) {\n        light.shadow.bias = value;\n      }\n    }\n  }\n  /**\n   * Getter to see whether the shadows are enabled or not in this scene instance.\n   */\n  get shadowsEnabled() {\n    return this._shadowsEnabled;\n  }\n  /**\n   * Setter to control whether the shadows are enabled or not in this scene instance.\n   */\n  set shadowsEnabled(value) {\n    this._shadowsEnabled = value;\n    for (const [, light] of this.directionalLights) {\n      light.castShadow = value;\n    }\n  }\n  /**\n   * Getter to get the renderer used to determine the farthest distance from the camera.\n   */\n  get distanceRenderer() {\n    if (!this._distanceRenderer) {\n      throw new Error(\n        \"You must set up this component before accessing the distance renderer!\"\n      );\n    }\n    return this._distanceRenderer;\n  }\n  /** {@link Configurable.setup} */\n  setup(config) {\n    super.setup(config);\n    const fullConfig = {\n      ...this._defaultConfig,\n      ...this._defaultShadowConfig,\n      ...config\n    };\n    if (fullConfig.cascade <= 0) {\n      throw new Error(\n        \"Config.shadows.cascade must be a natural number greater than 0!\"\n      );\n    }\n    if (fullConfig.cascade > 1) {\n      throw new Error(\"Multiple shadows not supported yet!\");\n    }\n    if (!this.currentWorld) {\n      throw new Error(\n        \"A world needs to be assigned to the scene before setting it up!\"\n      );\n    }\n    for (const [, light] of this.directionalLights) {\n      light.target.removeFromParent();\n      light.removeFromParent();\n      light.dispose();\n    }\n    this.directionalLights.clear();\n    if (!this._distanceRenderer) {\n      this._distanceRenderer = new DistanceRenderer(\n        this.components,\n        this.currentWorld\n      );\n      this._distanceRenderer.onDistanceComputed.add(this.recomputeShadows);\n    }\n    this._lightsWithShadow.clear();\n    for (let i = 0; i < fullConfig.cascade; i++) {\n      const light = new THREE$1.DirectionalLight();\n      light.intensity = this.config.directionalLight.intensity;\n      light.color = this.config.directionalLight.color;\n      light.position.copy(this.config.directionalLight.position);\n      light.shadow.mapSize.width = fullConfig.resolution;\n      light.shadow.mapSize.height = fullConfig.resolution;\n      this.three.add(light, light.target);\n      this.directionalLights.set(light.uuid, light);\n      this._lightsWithShadow.set(i, light.uuid);\n      light.castShadow = true;\n      light.shadow.bias = this._bias;\n    }\n  }\n  /** {@link Disposable.dispose} */\n  dispose() {\n    super.dispose();\n    if (this._distanceRenderer) {\n      this._distanceRenderer.dispose();\n    }\n    this._lightsWithShadow.clear();\n  }\n  /** Update all the shadows of the scene. */\n  async updateShadows() {\n    if (this._isComputingShadows || !this._shadowsEnabled) {\n      return;\n    }\n    this._isComputingShadows = true;\n    await this.distanceRenderer.compute();\n  }\n}\nclass IDSFacet {\n  constructor(_components) {\n    // Used when the facet is a requirement\n    // On IDSEntity is always required\n    __publicField(this, \"cardinality\", \"required\");\n    // When using this facet as a requirement, instructions can be given for the authors of the IFC.\n    __publicField(this, \"instructions\");\n    __publicField(this, \"evalRequirement\", (value, facetParameter, parameter, checks) => {\n      const checkLog = {\n        parameter,\n        currentValue: value,\n        requiredValue: facetParameter,\n        pass: false\n      };\n      if (checks)\n        this.addCheckResult(checkLog, checks);\n      let pass = false;\n      if (facetParameter.type === \"simple\") {\n        pass = value === facetParameter.parameter;\n      }\n      if (facetParameter.type === \"enumeration\") {\n        pass = facetParameter.parameter.includes(value);\n      }\n      if (facetParameter.type === \"pattern\") {\n        const regex = new RegExp(facetParameter.parameter);\n        pass = regex.test(String(value));\n      }\n      if (facetParameter.type === \"length\") {\n        const { min, length, max } = facetParameter.parameter;\n        if (length !== void 0) {\n          pass = String(value).length === length;\n        }\n        if (min !== void 0) {\n          pass = String(value).length >= min;\n        }\n        if (max !== void 0) {\n          pass = String(value).length <= max;\n        }\n      }\n      if (facetParameter.type === \"bounds\" && typeof value === \"number\") {\n        const { min, minInclusive, max, maxInclusive } = facetParameter.parameter;\n        let minPass = true;\n        let maxPass = true;\n        if (min !== void 0) {\n          minPass = minInclusive ? value >= min : value > min;\n        }\n        if (max !== void 0) {\n          maxPass = maxInclusive ? value <= max : value < max;\n        }\n        pass = minPass && maxPass;\n      }\n      if (this.cardinality === \"prohibited\")\n        pass = !pass;\n      if (this.cardinality === \"optional\")\n        pass = true;\n      checkLog.pass = pass;\n      return checkLog.pass;\n    });\n    this._components = _components;\n  }\n  addCheckResult(check, checks) {\n    const index = checks.findIndex(\n      ({ parameter }) => parameter === check.parameter\n    );\n    if (index !== -1) {\n      checks[index] = check;\n    } else {\n      checks.push(check);\n    }\n  }\n  getItemChecks(collector, modelId, item) {\n    if (!(\"value\" in item._localId && typeof item._localId.value === \"number\")) {\n      return null;\n    }\n    let modelItemResults = collector.get(modelId);\n    if (!modelItemResults) {\n      modelItemResults = new FRAGS.DataMap();\n      collector.set(modelId, modelItemResults);\n    }\n    let result = modelItemResults.get(item._localId.value);\n    if (result) {\n      if (!result.pass)\n        return null;\n    } else {\n      const checks2 = [];\n      result = {\n        guid: Array.isArray(item._guid) ? void 0 : item._guid.value,\n        pass: false,\n        checks: checks2\n      };\n      Object.defineProperty(result, \"pass\", {\n        get: () => checks2.every(({ pass }) => pass)\n      });\n      modelItemResults.set(item._localId.value, result);\n    }\n    const checks = [];\n    const check = {\n      facetType: this.facetType,\n      cardinality: this.cardinality,\n      checks,\n      pass: false\n    };\n    Object.defineProperty(check, \"pass\", {\n      get: () => checks.every(({ pass }) => pass)\n    });\n    result.checks.push(check);\n    return check.checks;\n  }\n}\nconst getParameterXML = (name, parameter) => {\n  let parameterXML = \"\";\n  if (!parameter)\n    return parameterXML;\n  if (parameter.type === \"simple\") {\n    parameterXML = `<simpleValue>${parameter.parameter}</simpleValue>`;\n  }\n  if (parameter.type === \"enumeration\") {\n    const value = parameter.parameter;\n    parameterXML = `<xs:restriction base=\"xs:string\">\n    ${value.map((v) => `<xs:enumeration value=\"${v}\" />`).join(\"\\n\")}\n    </xs:restriction>`;\n  }\n  if (parameter.type === \"pattern\") {\n    const value = parameter.parameter;\n    parameterXML = `<xs:restriction base=\"xs:string\">\n      <xs:pattern value=\"${value}\" />\n    </xs:restriction>`;\n  }\n  if (parameter.type === \"bounds\") {\n    const { min, minInclusive, max, maxInclusive } = parameter.parameter;\n    let minTag = \"\";\n    if (min !== void 0) {\n      minTag = `<xs:min${minInclusive ? \"Inclusive\" : \"Exclusive\"} value=\"${min}\">`;\n    }\n    let maxTag = \"\";\n    if (max !== void 0) {\n      maxTag = `<xs:max${maxInclusive ? \"Inclusive\" : \"Exclusive\"} value=\"${max}\">`;\n    }\n    parameterXML = `<xs:restriction base=\"xs:double\">\n      ${minTag}\n      ${maxTag}\n    </xs:restriction>`;\n  }\n  if (parameter.type === \"length\") {\n    const { length, min, max } = parameter.parameter;\n    let lengthTag = \"\";\n    if (length !== void 0 && min === void 0 && max === void 0) {\n      lengthTag = `<xs:length value=\"${length}\" />`;\n    }\n    let minTag = \"\";\n    if (min !== void 0 && length === void 0) {\n      minTag = `<xs:minLength value=\"${min}\" />`;\n    }\n    let maxTag = \"\";\n    if (max !== void 0 && length === void 0) {\n      maxTag = `<xs:maxLength value=\"${max}\" />`;\n    }\n    parameterXML = `<xs:restriction base=\"xs:string\">\n      ${lengthTag}\n      ${minTag}\n      ${maxTag}\n    </xs:restriction>`;\n  }\n  const xml = `<${name[0].toLowerCase() + name.slice(1)}>\n    ${parameterXML}\n  </${name[0].toLowerCase() + name.slice(1)}>`;\n  return xml;\n};\nclass IDSAttribute extends IDSFacet {\n  constructor(components, name) {\n    super(components);\n    __publicField(this, \"facetType\", \"Attribute\");\n    __publicField(this, \"name\");\n    __publicField(this, \"value\");\n    this.name = name;\n  }\n  serialize(type) {\n    const nameXML = getParameterXML(\"Name\", this.name);\n    const valueXML = getParameterXML(\"Value\", this.value);\n    let attributes = \"\";\n    if (type === \"requirement\") {\n      attributes += `cardinality=\"${this.cardinality}\"`;\n      attributes += this.instructions ? `instructions=\"${this.instructions}\"` : \"\";\n    }\n    return `<attribute ${attributes}>\n  ${nameXML}\n  ${valueXML}\n</attribute>`;\n  }\n  // This can be very ineficcient as we do not have an easy way to get an entity based on an attribute\n  // Right now, all entities must be iterated.\n  // When the new IfcEntitiesFinder comes, this can become easier.\n  // This may be greatly increase in performance if the applicability has any of the other facets and this is applied the latest\n  async getEntities() {\n  }\n  // async getEntities(\n  //   model: FRAGS.FragmentsGroup,\n  //   collector: FRAGS.IfcProperties = {},\n  // ) {\n  //   return [];\n  //   // for (const expressID in model) {\n  //   //   if (collector[expressID]) continue;\n  //   //   const entity = model[expressID];\n  //   //   // Check if the attribute exists\n  //   //   const attribute = entity[this.name];\n  //   //   const attributeExists = !!attribute;\n  //   //   // Check if the attribute value matches\n  //   //   let valueMatches = true;\n  //   //   if (attributeExists && this.value && this.value.value) {\n  //   //     if (this.value.type === \"simpleValue\") {\n  //   //       valueMatches = attribute.value === this.value.value;\n  //   //     }\n  //   //     if (this.value.type === \"restriction\") {\n  //   //       const regex = new RegExp(this.value.value);\n  //   //       valueMatches = regex.test(attribute.value);\n  //   //     }\n  //   //   }\n  //   //   if (attributeExists && valueMatches) {\n  //   //     collector[entity.expressID] = entity;\n  //   //   }\n  //   // }\n  // }\n  // https://github.com/buildingSMART/IDS/tree/development/Documentation/ImplementersDocumentation/TestCases/attribute\n  // Test cases from buildingSMART repo have been tested and they all match with the expected result\n  // All invalid cases have been treated as failures\n  // FragmentsGroup do not hold some of the entities used in the tests\n  async test(items, collector) {\n    const fragments = this._components.get(FragmentsManager);\n    for (const [modelId, localIds] of Object.entries(items)) {\n      const model = fragments.list.get(modelId);\n      if (!model)\n        continue;\n      const data = await model.getItemsData([...localIds]);\n      for (const item of data) {\n        const checks = this.getItemChecks(collector, modelId, item);\n        if (!checks)\n          continue;\n        const attrNames = Object.keys(item);\n        const matchingAttributes = attrNames.filter((name) => {\n          const nameMatches = this.evalRequirement(name, this.name, \"Name\");\n          if (!nameMatches)\n            return false;\n          const attribute = item[name];\n          if (Array.isArray(attribute))\n            return true;\n          if (attribute === null || attribute.value === null) {\n            if (this.cardinality === \"optional\" || this.cardinality === \"prohibited\") {\n              return true;\n            }\n            return false;\n          }\n          if (Array.isArray(attribute.value) && attribute.value.length === 0) {\n            return false;\n          }\n          if (typeof attribute.value === \"string\" && attribute.value.trim() === \"\") {\n            return false;\n          }\n          return nameMatches;\n        });\n        const attributeMatches = matchingAttributes.length > 0;\n        checks.push({\n          parameter: \"Name\",\n          currentValue: attributeMatches ? matchingAttributes[0] : null,\n          requiredValue: this.name,\n          pass: this.cardinality === \"prohibited\" ? !attributeMatches : attributeMatches\n        });\n        if (this.value) {\n          if (matchingAttributes[0]) {\n            const attribute = item[matchingAttributes[0]];\n            if (Array.isArray(attribute)) {\n              checks.push({\n                parameter: \"Value\",\n                currentValue: null,\n                requiredValue: this.value,\n                pass: this.cardinality === \"prohibited\"\n              });\n            } else {\n              const isRef = Array.isArray(attribute.value);\n              if (isRef) {\n                checks.push({\n                  parameter: \"Value\",\n                  currentValue: null,\n                  requiredValue: this.value,\n                  pass: this.cardinality === \"prohibited\"\n                });\n              } else {\n                this.evalRequirement(\n                  attribute.value,\n                  this.value,\n                  \"Value\",\n                  checks\n                );\n              }\n            }\n          } else {\n            checks.push({\n              parameter: \"Value\",\n              currentValue: null,\n              requiredValue: this.value,\n              pass: this.cardinality === \"prohibited\"\n            });\n          }\n        }\n      }\n    }\n  }\n}\nclass IDSClassification extends IDSFacet {\n  constructor(components, system) {\n    super(components);\n    __publicField(this, \"facetType\", \"Classification\");\n    __publicField(this, \"system\");\n    __publicField(this, \"value\");\n    __publicField(this, \"uri\");\n    this.system = system;\n  }\n  serialize(type) {\n    const systemXML = getParameterXML(\"System\", this.system);\n    const valueXML = getParameterXML(\"Value\", this.value);\n    let attributes = \"\";\n    if (type === \"requirement\") {\n      attributes += `cardinality=\"${this.cardinality}\"`;\n      attributes += this.uri ? `uri=${this.uri}` : \"\";\n      attributes += this.instructions ? `instructions=\"${this.instructions}\"` : \"\";\n    }\n    return `<classification ${attributes}>\n  ${systemXML}\n  ${valueXML}\n</classification>`;\n  }\n  async getEntities(_modelIds, _collector) {\n  }\n  async test(_items, _collector) {\n  }\n  // private async processReferencedSource(\n  //   model: FRAGS.FragmentsGroup,\n  //   attrs: Record<string, any>,\n  // ) {\n  //   const sourceID = attrs.ReferencedSource?.value;\n  //   if (!sourceID) return null;\n  //   const sourceAttrs = await model.getProperties(sourceID);\n  //   if (!sourceAttrs) return null;\n  //   if (sourceAttrs.type === WEBIFC.IFCCLASSIFICATIONREFERENCE) {\n  //     sourceAttrs.ReferencedSource = await this.processReferencedSource(\n  //       model,\n  //       sourceAttrs,\n  //     );\n  //   }\n  //   return sourceAttrs;\n  // }\n  // private async getSystems(model: FRAGS.FragmentsGroup, expressID: number) {\n  //   const result: Record<string, any>[] = [];\n  //   const indexer = this._components.get(IfcRelationsIndexer);\n  //   const ocurrenceAssociations = indexer.getEntityRelations(\n  //     model,\n  //     expressID,\n  //     \"HasAssociations\",\n  //   );\n  //   if (ocurrenceAssociations) {\n  //     for (const id of ocurrenceAssociations) {\n  //       const attrs = await model.getProperties(id);\n  //       if (!attrs) continue;\n  //       if (attrs.type === WEBIFC.IFCCLASSIFICATION) {\n  //         result.push(attrs);\n  //       }\n  //       if (attrs.type === WEBIFC.IFCCLASSIFICATIONREFERENCE) {\n  //         attrs.ReferencedSource = await this.processReferencedSource(\n  //           model,\n  //           attrs,\n  //         );\n  //         if (attrs.ReferencedSource) result.push(attrs);\n  //       }\n  //     }\n  //   }\n  //   // As occurence classifications prevail over type clasifications\n  //   // the classification systems used by the occurrence are get\n  //   // so type classifications are not included\n  //   const occurrenceSystems = result\n  //     .map((attrs) => {\n  //       if (attrs.type === WEBIFC.IFCCLASSIFICATION) {\n  //         return attrs.Name?.value;\n  //       }\n  //       if (attrs.type === WEBIFC.IFCCLASSIFICATIONREFERENCE) {\n  //         return attrs.ReferencedSource?.Name?.value;\n  //       }\n  //       return null;\n  //     })\n  //     .filter((name) => name);\n  //   const types = indexer.getEntityRelations(model, expressID, \"IsTypedBy\");\n  //   if (!(types && types[0])) return result;\n  //   const type = types[0];\n  //   const typeAssociations = indexer.getEntityRelations(\n  //     model,\n  //     type,\n  //     \"HasAssociations\",\n  //   );\n  //   if (typeAssociations) {\n  //     for (const id of typeAssociations) {\n  //       const attrs = await model.getProperties(id);\n  //       if (!attrs) continue;\n  //       if (attrs.type === WEBIFC.IFCCLASSIFICATION) {\n  //         if (occurrenceSystems.includes(attrs.Name?.value)) continue;\n  //         result.push(attrs);\n  //       }\n  //       if (attrs.type === WEBIFC.IFCCLASSIFICATIONREFERENCE) {\n  //         attrs.ReferencedSource = await this.processReferencedSource(\n  //           model,\n  //           attrs,\n  //         );\n  //         if (attrs.ReferencedSource) result.push(attrs);\n  //       }\n  //     }\n  //   }\n  //   return result;\n  // }\n  // private getSystemName(attrs: Record<string, any>): string | null {\n  //   if (attrs.type === WEBIFC.IFCCLASSIFICATION) {\n  //     return attrs.Name?.value;\n  //   }\n  //   if (attrs.type === WEBIFC.IFCCLASSIFICATIONREFERENCE) {\n  //     if (attrs.ReferencedSource?.type === WEBIFC.IFCCLASSIFICATIONREFERENCE) {\n  //       return this.getSystemName(attrs.ReferencedSource);\n  //     }\n  //     if (attrs.ReferencedSource?.type === WEBIFC.IFCCLASSIFICATION) {\n  //       return attrs.ReferencedSource.Name?.value;\n  //     }\n  //   }\n  //   return null;\n  // }\n  // private getAllReferenceIdentifications(attrs: Record<string, any>) {\n  //   if (attrs.type !== WEBIFC.IFCCLASSIFICATIONREFERENCE) return null;\n  //   const identifications: string[] = [];\n  //   if (attrs.Identification) identifications.push(attrs.Identification.value);\n  //   if (attrs.ReferencedSource) {\n  //     const identification = this.getAllReferenceIdentifications(\n  //       attrs.ReferencedSource,\n  //     );\n  //     if (identification) identifications.push(...identification);\n  //   }\n  //   return identifications;\n  // }\n  // private evalSystem(attrs: Record<string, any>, checks?: IDSCheck[]) {\n  //   const name = this.getSystemName(attrs);\n  //   return this.evalRequirement(name, this.system, \"System\", checks);\n  // }\n  // private evalValue(attrs: any, checks?: IDSCheck[]) {\n  //   if (!this.value) return true;\n  //   const identifications = this.getAllReferenceIdentifications(attrs);\n  //   if (!identifications) return false;\n  //   const identifier = identifications.find((id) => {\n  //     if (!this.value) return false;\n  //     return this.evalRequirement(id, this.value, \"Value\");\n  //   });\n  //   if (checks) {\n  //     this.addCheckResult(\n  //       {\n  //         parameter: \"Value\",\n  //         currentValue: identifier ?? null,\n  //         requiredValue: this.value,\n  //         pass: !!identifier,\n  //       },\n  //       checks,\n  //     );\n  //   }\n  //   return !!identifier;\n  // }\n  // private evalURI(attrs: any, checks?: IDSCheck[]) {\n  //   if (!this.uri) return true;\n  //   const result = this.evalRequirement(\n  //     attrs.Location?.value,\n  //     {\n  //       type: \"simple\",\n  //       parameter: this.uri,\n  //     },\n  //     \"URI\",\n  //     checks,\n  //   );\n  //   return result;\n  // }\n}\nclass IDSEntity extends IDSFacet {\n  constructor(components, name) {\n    super(components);\n    __publicField(this, \"facetType\", \"Entity\");\n    __publicField(this, \"name\");\n    __publicField(this, \"predefinedType\");\n    this.name = name;\n  }\n  serialize(type) {\n    const nameXML = getParameterXML(\"Name\", this.name);\n    const predefinedTypeXML = getParameterXML(\"Name\", this.predefinedType);\n    let attributes = \"\";\n    if (type === \"requirement\") {\n      attributes += `cardinality=\"${this.cardinality}\"`;\n      attributes += this.instructions ? `instructions=\"${this.instructions}\"` : \"\";\n    }\n    return `<entity ${attributes}>\n  ${nameXML}\n  ${predefinedTypeXML}\n</entity>`;\n  }\n  async getEntities(modelIds, collector) {\n    const fragments = this._components.get(FragmentsManager);\n    const modelCategories = /* @__PURE__ */ new Map();\n    for (const [modelId, model] of fragments.list) {\n      const isValidModel = modelIds.find((regex) => regex.test(modelId));\n      if (!isValidModel)\n        continue;\n      const categories = await model.getCategories();\n      for (const category of categories) {\n        const isValidCategory = await this.evalName(category);\n        if (!isValidCategory)\n          continue;\n        let validCategories = modelCategories.get(modelId);\n        if (!validCategories) {\n          validCategories = [];\n          modelCategories.set(modelId, validCategories);\n        }\n        validCategories.push(category);\n      }\n    }\n    const items = {};\n    await Promise.all(\n      Array.from(modelCategories.entries()).map(\n        async ([modelId, categories]) => {\n          const model = fragments.list.get(modelId);\n          if (!model)\n            return;\n          const regexCategories = categories.map(\n            (cat) => new RegExp(`^${cat}$`)\n          );\n          const categoryItemIds = await model.getItemsOfCategories(regexCategories);\n          const localIds = Object.values(categoryItemIds).flat();\n          items[modelId] = new Set(localIds);\n        }\n      )\n    );\n    if (!this.predefinedType) {\n      ModelIdMapUtils.add(collector, items);\n      return;\n    }\n    for (const [modelId, localIds] of Object.entries(items)) {\n      const model = fragments.list.get(modelId);\n      if (!model)\n        continue;\n      const itemsData = await model.getItemsData([...localIds]);\n      for (const attribute of itemsData) {\n        if (!(\"value\" in attribute._localId))\n          continue;\n        const isValidPredefinedType = await this.evalPredefinedType(\n          modelId,\n          attribute\n        );\n        if (isValidPredefinedType) {\n          ModelIdMapUtils.append(collector, modelId, attribute._localId.value);\n        }\n      }\n    }\n  }\n  async test(items, collector) {\n    const fragments = this._components.get(FragmentsManager);\n    for (const [modelId, localIds] of Object.entries(items)) {\n      const model = fragments.list.get(modelId);\n      if (!model)\n        continue;\n      const data = await model.getItemsData([...localIds]);\n      for (const item of data) {\n        if (!(\"value\" in item._category))\n          continue;\n        const checks = this.getItemChecks(collector, modelId, item);\n        if (!checks)\n          continue;\n        await this.evalName(item._category.value, checks);\n        await this.evalPredefinedType(modelId, item, checks);\n      }\n    }\n  }\n  async evalName(category, checks) {\n    const result = this.evalRequirement(category, this.name, \"Name\", checks);\n    return result;\n  }\n  async evalPredefinedType(modelId, itemData, checks) {\n    if (!this.predefinedType)\n      return null;\n    if (!(\"value\" in itemData.PredefinedType))\n      return null;\n    const isRequirementUserDefined = typeof this.predefinedType.parameter === \"string\" && this.predefinedType.parameter === \"USERDEFINED\";\n    let value = itemData.PredefinedType.value;\n    if (value === \"USERDEFINED\" && !isRequirementUserDefined) {\n      const attrNames = Object.keys(itemData);\n      const key = attrNames.find((str) => /^((?!Predefined).)*Type$/.test(str));\n      if (key) {\n        const keyValue = itemData[key];\n        if (\"value\" in keyValue)\n          value = keyValue.value;\n      } else {\n        value = \"USERDEFINED\";\n      }\n    }\n    if (!value) {\n      const fragments = this._components.get(FragmentsManager);\n      const model = fragments.list.get(modelId);\n      if (model && \"value\" in itemData._localId) {\n        const [data] = await model.getItemsData([itemData._localId.value], {\n          relations: { IsTypedBy: { attributes: true, relations: false } }\n        });\n        if (Array.isArray(data.IsTypedBy)) {\n          const typeAttrs = data.IsTypedBy[0];\n          if (typeAttrs && \"value\" in typeAttrs.PredefinedType) {\n            value = typeAttrs.PredefinedType.value;\n            if (value === \"USERDEFINED\" && !isRequirementUserDefined) {\n              const attrNames = Object.keys(typeAttrs);\n              const key = attrNames.find(\n                (str) => /^((?!Predefined).)*Type$/.test(str)\n              );\n              if (key) {\n                const keyValue = typeAttrs[key];\n                if (\"value\" in keyValue)\n                  value = keyValue.value;\n              } else {\n                value = \"USERDEFINED\";\n              }\n            }\n          }\n        }\n      }\n    }\n    const result = this.evalRequirement(\n      value,\n      this.predefinedType,\n      \"PredefinedType\",\n      checks\n    );\n    return result;\n  }\n}\nclass IDSProperty extends IDSFacet {\n  constructor(components, propertySet, baseName) {\n    super(components);\n    __publicField(this, \"facetType\", \"Property\");\n    __publicField(this, \"propertySet\");\n    __publicField(this, \"baseName\");\n    __publicField(this, \"value\");\n    __publicField(this, \"dataType\");\n    __publicField(this, \"uri\");\n    // These are defined by the IDS specification\n    __publicField(this, \"_unsupportedTypes\", [\n      \"IFCCOMPLEXPROPERTY\",\n      \"IFCPHYSICALCOMPLEXQUANTITY\"\n    ]);\n    this.propertySet = propertySet;\n    this.baseName = baseName;\n  }\n  serialize(type) {\n    const propertySetXML = getParameterXML(\"PropertySet\", this.propertySet);\n    const baseNameXML = getParameterXML(\"BaseName\", this.baseName);\n    const valueXML = getParameterXML(\"Value\", this.value);\n    const dataTypeXML = this.dataType ? `dataType=${this.dataType}` : \"\";\n    let attributes = \"\";\n    if (type === \"requirement\") {\n      attributes += `cardinality=\"${this.cardinality}\"`;\n      attributes += this.uri ? `uri=${this.uri}` : \"\";\n      attributes += this.instructions ? `instructions=\"${this.instructions}\"` : \"\";\n    }\n    return `<property ${dataTypeXML} ${attributes}>\n  ${propertySetXML}\n  ${baseNameXML}\n  ${valueXML}\n</property>`;\n  }\n  async getEntities(modelIds, collector) {\n    const fragments = this._components.get(FragmentsManager);\n    for (const [modelId, model] of fragments.list) {\n      const isValidModel = modelIds.find((regex) => regex.test(modelId));\n      if (!isValidModel)\n        continue;\n      const items = await model.getItemsOfCategories([\n        /PROPERTYSET/,\n        /ELEMENTQUANTITY/\n      ]);\n      const localIds = Object.values(items).flat();\n      if (localIds.length === 0)\n        continue;\n      const data = await model.getItemsData(localIds, {\n        relations: {\n          HasProperties: { attributes: true, relations: false },\n          DefinesOcurrence: { attributes: true, relations: false }\n        }\n      });\n      for (const set of data) {\n        if (!(\"value\" in set._localId && \"value\" in set._category && \"value\" in set.Name && Array.isArray(set.DefinesOcurrence))) {\n          continue;\n        }\n        const nameMatches = this.evalRequirement(\n          set.Name.value,\n          this.propertySet,\n          \"PropertySet\"\n        );\n        if (!nameMatches)\n          continue;\n        let propsListName;\n        if (set._category.value === \"IFCPROPERTYSET\")\n          propsListName = \"HasProperties\";\n        if (set._category.value === \"IFCELEMENTQUANTITY\")\n          propsListName = \"Quantities\";\n        if (!propsListName)\n          continue;\n        const props = set[propsListName];\n        if (!Array.isArray(props))\n          continue;\n        for (const prop of props) {\n          const keys = Object.keys(prop);\n          const nameKey = keys.find((key) => /Name/.test(key));\n          if (!(nameKey && \"value\" in prop[nameKey]))\n            continue;\n          const attribute = prop[nameKey];\n          if (!(\"value\" in attribute))\n            continue;\n          const propNameMatches = this.evalRequirement(\n            attribute.value,\n            this.baseName,\n            \"BaseName\"\n          );\n          if (!propNameMatches)\n            continue;\n          if (this.value) {\n            const valueKey = keys.find((key) => /Value/.test(key));\n            if (!valueKey)\n              continue;\n            const attribute2 = prop[valueKey];\n            if (!(\"value\" in attribute2))\n              continue;\n            const valueMatches = this.evalRequirement(\n              attribute2.value,\n              this.value,\n              \"Value\"\n            );\n            if (!valueMatches)\n              continue;\n          }\n          const items2 = set.DefinesOcurrence.map((ocurrence) => {\n            if (!(\"value\" in ocurrence._localId && typeof ocurrence._localId.value === \"number\")) {\n              return null;\n            }\n            return ocurrence._localId.value;\n          }).filter((id) => id !== null);\n          ModelIdMapUtils.append(collector, modelId, ...items2);\n        }\n      }\n    }\n  }\n  async test(items, collector) {\n    const fragments = this._components.get(FragmentsManager);\n    for (const [modelId, localIds] of Object.entries(items)) {\n      const model = fragments.list.get(modelId);\n      if (!model)\n        continue;\n      const data = await model.getItemsData([...localIds], {\n        relations: {\n          IsDefinedBy: { attributes: true, relations: true },\n          IsTypedBy: { attributes: true, relations: false },\n          HasPropertySets: { attributes: true, relations: true },\n          DefinesOcurrence: { attributes: false, relations: false }\n        }\n      });\n      for (const item of data) {\n        const checks = this.getItemChecks(collector, modelId, item);\n        if (!checks)\n          continue;\n        const sets = await this.getPsets(item);\n        const matchingSets = sets.filter((set) => {\n          if (!(\"value\" in set.Name))\n            return false;\n          const result = this.evalRequirement(\n            set.Name.value,\n            this.propertySet,\n            \"PropertySet\"\n          );\n          if (!result)\n            return false;\n          checks.push({\n            currentValue: set.Name.value,\n            parameter: \"PropertySet\",\n            pass: true,\n            requiredValue: this.propertySet\n          });\n          return true;\n        });\n        if (matchingSets.length === 0) {\n          checks.push({\n            currentValue: null,\n            parameter: \"PropertySet\",\n            pass: false,\n            requiredValue: this.propertySet\n          });\n          continue;\n        }\n        for (const set of matchingSets) {\n          const propsListName = this.getPropertyListName(set);\n          if (!propsListName)\n            continue;\n          const props = set[propsListName];\n          if (!Array.isArray(props)) {\n            checks.push({\n              currentValue: null,\n              parameter: \"BaseName\",\n              pass: false,\n              requiredValue: this.baseName\n            });\n            continue;\n          }\n          const matchingProps = props.filter((item2) => {\n            if (!(\"value\" in item2._category && \"value\" in item2.Name))\n              return false;\n            if (this._unsupportedTypes.includes(item2._category.value)) {\n              return false;\n            }\n            const result = this.evalRequirement(\n              item2.Name.value,\n              this.baseName,\n              \"BaseName\"\n            );\n            if (!result)\n              return false;\n            checks.push({\n              currentValue: item2.Name.value,\n              parameter: \"BaseName\",\n              pass: true,\n              requiredValue: this.baseName\n            });\n            return true;\n          });\n          if (matchingProps.length === 0) {\n            checks.push({\n              currentValue: null,\n              parameter: \"BaseName\",\n              pass: false,\n              requiredValue: this.baseName\n            });\n            continue;\n          }\n          for (const item2 of matchingProps) {\n            this.evalValue(item2, checks);\n            this.evalDataType(item2, checks);\n            this.evalURI();\n          }\n        }\n      }\n    }\n  }\n  getPropertyListName(item) {\n    let propsListName;\n    if (!(\"value\" in item._category))\n      return propsListName;\n    if (item._category.value === \"IFCPROPERTYSET\")\n      propsListName = \"HasProperties\";\n    if (item._category.value === \"IFCELEMENTQUANTITY\")\n      propsListName = \"Quantities\";\n    return propsListName;\n  }\n  getValueKey(item) {\n    return Object.keys(item).find(\n      (name) => /Value/.test(name) || /Values/.test(name)\n    );\n  }\n  getTypePsets(item) {\n    if (!Array.isArray(item.IsTypedBy))\n      return [];\n    const [type] = item.IsTypedBy;\n    if (!(type && Array.isArray(type.HasPropertySets))) {\n      return [];\n    }\n    return type.HasPropertySets;\n  }\n  async getPsets(item) {\n    const typeSets = this.getTypePsets(item);\n    if (!Array.isArray(item.IsDefinedBy))\n      return typeSets;\n    const sets = [];\n    for (const definition of item.IsDefinedBy) {\n      if (!(\"value\" in definition.Name))\n        continue;\n      const definitionName = definition.Name.value;\n      const propsListName = this.getPropertyListName(definition);\n      if (!(definitionName && propsListName))\n        continue;\n      const typeSet = typeSets.find((set) => {\n        if (!(\"value\" in set.Name))\n          return false;\n        return set.Name.value === definitionName;\n      });\n      if (typeSet && Array.isArray(typeSet.HasProperties) && Array.isArray(definition.HasProperties)) {\n        for (const prop of typeSet.HasProperties) {\n          if (!(\"value\" in prop.Name))\n            continue;\n          const name = prop.Name.value;\n          const existingProp = definition.HasProperties.find((p) => {\n            if (!(\"value\" in p.Name))\n              return false;\n            return p.Name.value === name;\n          });\n          if (!existingProp)\n            definition.HasProperties.push(prop);\n        }\n      }\n      sets.push(definition);\n    }\n    return sets;\n  }\n  // IFCPROPERTYBOUNDEDVALUE are not supported yet\n  // IFCPROPERTYTABLEVALUE are not supported yet\n  // TODO: Work must to be done to convert numerical value units to IDS-nominated standard units https://github.com/buildingSMART/IDS/blob/development/Documentation/UserManual/units.md\n  evalValue(item, checks) {\n    const valueKey = this.getValueKey(item);\n    const valueAttr = item[valueKey];\n    if (!(\"value\" in valueAttr))\n      return false;\n    if (this.value) {\n      if (!valueKey) {\n        checks == null ? void 0 : checks.push({\n          parameter: \"Value\",\n          currentValue: null,\n          pass: false,\n          requiredValue: this.value\n        });\n        return false;\n      }\n      const facetValue = structuredClone(this.value);\n      if (valueAttr.type === \"IFCLABEL\" && facetValue.type === \"simple\") {\n        facetValue.parameter = String(facetValue.parameter);\n      }\n      const result = this.evalRequirement(\n        valueAttr.value,\n        facetValue,\n        \"Value\",\n        checks\n      );\n      return result;\n    }\n    if (!valueKey)\n      return true;\n    if (typeof valueAttr.value === \"string\" && valueAttr.value.trim() === \"\") {\n      checks == null ? void 0 : checks.push({\n        parameter: \"Value\",\n        currentValue: \"\",\n        pass: false,\n        requiredValue: this.value\n      });\n      return false;\n    }\n    return true;\n  }\n  evalDataType(item, checks) {\n    if (!this.dataType)\n      return true;\n    const valueKey = this.getValueKey(item);\n    if (!(valueKey && \"value\" in item[valueKey])) {\n      checks == null ? void 0 : checks.push({\n        parameter: \"DataType\",\n        currentValue: null,\n        pass: false,\n        requiredValue: this.dataType\n      });\n      return false;\n    }\n    const valueAttr = item[valueKey];\n    const result = this.evalRequirement(\n      valueAttr.type ?? null,\n      {\n        type: \"simple\",\n        parameter: this.dataType\n      },\n      \"DataType\",\n      checks\n    );\n    return result;\n  }\n  evalURI() {\n    return true;\n  }\n}\nclass IDSMaterial extends IDSFacet {\n  constructor() {\n    super(...arguments);\n    __publicField(this, \"_ifcMaterialEntities\", [\n      /^IFCMATERIALLAYERSETUSAGE$/,\n      /^IFCMATERIALCONSTITUENTSET$/,\n      /^IFCMATERIAL$/,\n      /^IFCMATERIALLIST$/\n    ]);\n    __publicField(this, \"facetType\", \"Material\");\n    __publicField(this, \"value\");\n    __publicField(this, \"uri\");\n  }\n  serialize(type) {\n    if (!(this.value && this.uri))\n      return \"<material />\";\n    const valueXML = getParameterXML(\"Value\", this.value);\n    let attributes = \"\";\n    if (type === \"requirement\") {\n      attributes += `cardinality=\"${this.cardinality}\"`;\n      attributes += this.uri ? `uri=${this.uri}` : \"\";\n      attributes += this.instructions ? `instructions=\"${this.instructions}\"` : \"\";\n    }\n    return `<material ${attributes}>\n  ${valueXML}\n</material>`;\n  }\n  async getEntities(modelIds, collector) {\n    const fragments = this._components.get(FragmentsManager);\n    for (const [modelId, model] of fragments.list) {\n      const isValidModel = modelIds.find((regex) => regex.test(modelId));\n      if (!isValidModel)\n        continue;\n      const items = await model.getItemsOfCategories(this._ifcMaterialEntities);\n      const localIds = Object.values(items).flat();\n      if (localIds.length === 0)\n        continue;\n      const data = await model.getItemsData(localIds, {\n        relations: {\n          AssociatedTo: { attributes: true, relations: false },\n          MaterialConstituents: { attributes: true, relations: true },\n          ForLayerSet: { attributes: true, relations: true },\n          MaterialLayers: { attributes: true, relations: true },\n          Materials: { attributes: true, relations: false }\n        }\n      });\n      for (const item of data) {\n        if (!(\"value\" in item._localId && \"value\" in item._category && Array.isArray(item.AssociatedTo))) {\n          continue;\n        }\n        const isValid = this.hasValidMaterial(item);\n        if (!isValid)\n          continue;\n        const relations = item.AssociatedTo.map((relation) => {\n          if (!(\"value\" in relation._localId && relation._localId.value))\n            return null;\n          return relation._localId.value;\n        }).filter((value) => value !== null);\n        ModelIdMapUtils.append(collector, modelId, ...relations);\n      }\n    }\n  }\n  async test(items, collector) {\n    const fragments = this._components.get(FragmentsManager);\n    for (const [modelId, localIds] of Object.entries(items)) {\n      const model = fragments.list.get(modelId);\n      if (!model)\n        continue;\n      const data = await model.getItemsData([[...localIds][0]], {\n        relations: {\n          AssociatedTo: { attributes: false, relations: false },\n          HasAssociations: { attributes: true, relations: true },\n          MaterialConstituents: { attributes: true, relations: true },\n          ForLayerSet: { attributes: true, relations: true },\n          MaterialLayers: { attributes: true, relations: true },\n          Materials: { attributes: true, relations: false }\n        }\n      });\n      for (const item of data) {\n        const checks = this.getItemChecks(collector, modelId, item);\n        if (!checks)\n          continue;\n        if (!Array.isArray(item.HasAssociations)) {\n          checks.push({\n            parameter: null,\n            currentValue: null,\n            requiredValue: this.value,\n            pass: false\n          });\n          continue;\n        }\n        for (const association of item.HasAssociations) {\n          if (!this._ifcMaterialEntities.some((parent) => {\n            if (!(\"value\" in association._category))\n              return false;\n            return parent.test(association._category.value);\n          })) {\n            continue;\n          }\n          const isValid = this.hasValidMaterial(association, checks);\n          if (isValid)\n            break;\n        }\n      }\n    }\n  }\n  hasValidMaterial(item, checks) {\n    let isValid = false;\n    if (\"value\" in item._category && item._category.value === \"IFCMATERIAL\") {\n      const result = this.evalValue(item, checks);\n      if (result)\n        isValid = true;\n    } else {\n      for (const [name, attribute] of Object.entries(item)) {\n        if (![\n          \"ForLayerSet\",\n          \"MaterialLayers\",\n          \"Material\",\n          \"MaterialConstituents\",\n          \"Materials\"\n        ].includes(name))\n          continue;\n        if (!Array.isArray(attribute))\n          continue;\n        for (const item2 of attribute) {\n          const isMaterial = \"value\" in item2._category && item2._category.value === \"IFCMATERIAL\";\n          if (isMaterial) {\n            const result = this.evalValue(item2, checks);\n            if (result) {\n              isValid = true;\n              break;\n            }\n          } else {\n            const result = this.hasValidMaterial(item2);\n            if (result) {\n              isValid = true;\n              break;\n            }\n          }\n        }\n      }\n    }\n    return isValid;\n  }\n  evalValue(item, checks) {\n    if (!this.value) {\n      checks == null ? void 0 : checks.push({\n        parameter: null,\n        currentValue: item.Name && \"value\" in item.Name ? item.Name.value : null,\n        pass: true\n      });\n      return true;\n    }\n    if (!(\"value\" in item._category && item._category.value === \"IFCMATERIAL\")) {\n      return null;\n    }\n    let result = false;\n    if (item.Name && \"value\" in item.Name) {\n      result = this.evalRequirement(\n        item.Name.value,\n        this.value,\n        \"Value\",\n        checks\n      );\n    }\n    if (result)\n      return result;\n    if (item.Category && \"value\" in item.Category) {\n      result = this.evalRequirement(\n        item.Category.value,\n        this.value,\n        \"Value\",\n        checks\n      );\n    }\n    return result;\n  }\n}\nclass IDSPartOf extends IDSFacet {\n  constructor(components, entity) {\n    super(components);\n    __publicField(this, \"facetType\", \"PartOf\");\n    __publicField(this, \"_entityFacet\");\n    __publicField(this, \"_entity\");\n    __publicField(this, \"relation\");\n    __publicField(this, \"cardinality\", \"required\");\n    this._entity = entity;\n    this._entityFacet = new IDSEntity(components, entity.name);\n    this._entityFacet.predefinedType = entity.predefinedType;\n  }\n  set entity(value) {\n    this._entity = value;\n    const { name, predefinedType } = value;\n    this._entityFacet = new IDSEntity(this._components, name);\n    this._entityFacet.predefinedType = predefinedType;\n  }\n  get entity() {\n    return this._entity;\n  }\n  serialize() {\n    return \"\";\n  }\n  async getEntities(_modelIds, _collector) {\n  }\n  async test(_items) {\n  }\n}\nclass IDSSpecification {\n  constructor(components, name, ifcVersion) {\n    __publicField(this, \"name\");\n    __publicField(this, \"ifcVersion\", /* @__PURE__ */ new Set());\n    __publicField(this, \"identifier\", UUID.create());\n    __publicField(this, \"description\");\n    __publicField(this, \"instructions\");\n    __publicField(this, \"requirementsDescription\");\n    __publicField(this, \"applicability\", new FRAGS.DataSet());\n    __publicField(this, \"requirements\", new FRAGS.DataSet());\n    __publicField(this, \"components\");\n    this.components = components;\n    this.name = name;\n    for (const version of ifcVersion) {\n      this.ifcVersion.add(version);\n    }\n  }\n  set(data) {\n    const _data = data;\n    const _this = this;\n    for (const key in data) {\n      if (key === \"identifier\")\n        continue;\n      const value = _data[key];\n      if (key in this)\n        _this[key] = value;\n    }\n    const manager = this.components.get(IDSSpecifications);\n    manager.list.set(this.identifier, this);\n    return this;\n  }\n  /**\n   * Tests the model to test against the specification's requirements.\n   *\n   * @param modelId - The modelId of the model to be tested.\n   * @returns An array representing the test results.\n   * If no requirements are defined for the specification, an empty array is returned.\n   */\n  async test(modelIds) {\n    const result = new FRAGS.DataMap();\n    if (this.requirements.size === 0)\n      return result;\n    const entities = {};\n    const applicabilityPromises = [];\n    for (const facet of this.applicability) {\n      applicabilityPromises.push(facet.getEntities(modelIds, entities));\n    }\n    await Promise.all(applicabilityPromises);\n    const requirementPromises = [];\n    for (const requirement of this.requirements) {\n      requirementPromises.push(requirement.test(entities, result));\n    }\n    await Promise.all(requirementPromises);\n    return result;\n  }\n  /**\n   * Serializes the IDSSpecification instance into XML format.\n   *\n   * @remarks This method is not meant to be used directly. It is used by the IDSSpecifications component.\n   *\n   * @returns The XML representation of the IDSSpecification.\n   */\n  serialize() {\n    const name = `name=\"${this.name}\"`;\n    const identifier = this.identifier ? `identifier=\"${this.identifier}\"` : \"\";\n    const description = this.description ? `description=\"${this.description}\"` : \"\";\n    const instructions = this.instructions ? `instructions=\"${this.instructions}\"` : \"\";\n    const xml = `<specification ifcVersion=\"${[...this.ifcVersion].join(\" \")}\" ${name} ${identifier} ${description} ${instructions}>\n      <applicability minOccurs=\"1\" maxOccurs=\"unbounded\">\n        ${[...this.applicability].map((facet) => facet.serialize(\"applicability\")).join(\"\\n\")}\n      </applicability>\n      <requirements>\n        ${[...this.requirements].map((facet) => facet.serialize(\"requirement\")).join(\"\\n\")}\n      </requirements>\n    </specification>`;\n    return xml;\n  }\n}\nconst getParameterValue = (property) => {\n  if (!property)\n    return void 0;\n  const result = {};\n  if (\"simpleValue\" in property) {\n    result.type = \"simple\";\n    result.parameter = property.simpleValue;\n  }\n  if (\"restriction\" in property) {\n    const restriction = property.restriction;\n    const keys = Object.keys(restriction);\n    if (\"pattern\" in restriction) {\n      result.type = \"pattern\";\n      result.parameter = restriction.pattern.value;\n    }\n    if (\"enumeration\" in restriction) {\n      result.type = \"enumeration\";\n      const enumeration = restriction.enumeration.map(\n        ({ value }) => value\n      );\n      result.parameter = enumeration;\n    }\n    if (keys.some(\n      (key) => [\n        \"minInclusive\",\n        \"minExclusive\",\n        \"maxInclusive\",\n        \"maxExclusive\"\n      ].includes(key)\n    )) {\n      result.type = \"bounds\";\n      const parameter = {};\n      const minKey = keys.find((key) => key.includes(\"min\"));\n      const maxKey = keys.find((key) => key.includes(\"max\"));\n      if (minKey) {\n        parameter.minInclusive = minKey === \"minInclusive\";\n        parameter.min = restriction[minKey].value;\n      }\n      if (maxKey) {\n        parameter.maxInclusive = maxKey === \"maxInclusive\";\n        parameter.max = restriction[maxKey].value;\n      }\n      result.parameter = parameter;\n    }\n    if (keys.some((key) => [\"minLength\", \"length\", \"maxLength\"].includes(key))) {\n      result.type = \"length\";\n      const parameter = {};\n      if (restriction.length !== void 0) {\n        parameter.length = restriction.length.value;\n      }\n      if (restriction.minLength !== void 0) {\n        parameter.min = restriction.minLength.value;\n      }\n      if (restriction.maxLength !== void 0) {\n        parameter.max = restriction.maxLength.value;\n      }\n      result.parameter = parameter;\n    }\n  }\n  if (result.parameter === void 0)\n    return void 0;\n  return result;\n};\nconst createEntityFacets = (components, elements) => {\n  const facets = [];\n  for (const element of elements) {\n    const nameParameter = element.name;\n    const name = getParameterValue(nameParameter);\n    if (!name)\n      continue;\n    const facet = new IDSEntity(components, name);\n    if (element.cardinality)\n      facet.cardinality = element.cardinality;\n    facet.predefinedType = getParameterValue(element.predefinedType);\n    facet.instructions = element.instructions;\n    facets.push(facet);\n  }\n  return facets;\n};\nconst createAttributeFacets = (components, elements) => {\n  const facets = [];\n  for (const element of elements) {\n    const nameParameter = element.name;\n    const name = getParameterValue(nameParameter);\n    if (!name)\n      continue;\n    const facet = new IDSAttribute(components, name);\n    if (element.cardinality)\n      facet.cardinality = element.cardinality;\n    facet.value = getParameterValue(element.value);\n    facet.instructions = element.instructions;\n    facets.push(facet);\n  }\n  return facets;\n};\nconst createMaterialFacets = (components, elements) => {\n  const facets = [];\n  for (const element of elements) {\n    const facet = new IDSMaterial(components);\n    if (element.cardinality)\n      facet.cardinality = element.cardinality;\n    const value = getParameterValue(element.value);\n    if ((value == null ? void 0 : value.type) === \"enumeration\" && Array.isArray(value.parameter)) {\n      value.parameter = value.parameter.map(String);\n    }\n    facet.value = value;\n    facet.uri = element.uri;\n    facet.instructions = element.instructions;\n    facets.push(facet);\n  }\n  return facets;\n};\nconst createPropertyFacets = (components, elements) => {\n  const facets = [];\n  for (const element of elements) {\n    const psetParameter = element.propertySet;\n    const baseNameParameter = element.baseName;\n    const pset = getParameterValue(psetParameter);\n    const baseName = getParameterValue(baseNameParameter);\n    if (!(baseName && pset))\n      continue;\n    const facet = new IDSProperty(components, pset, baseName);\n    if (element.cardinality)\n      facet.cardinality = element.cardinality;\n    const value = getParameterValue(element.value);\n    facet.value = value;\n    facet.dataType = element.dataType;\n    facet.uri = element.uri;\n    facet.instructions = element.instructions;\n    facets.push(facet);\n  }\n  return facets;\n};\nconst createClassificationFacets = (components, elements) => {\n  const facets = [];\n  for (const element of elements) {\n    const systemParameter = element.system;\n    const system = getParameterValue(systemParameter);\n    if (!system)\n      continue;\n    const facet = new IDSClassification(components, system);\n    if (element.cardinality)\n      facet.cardinality = element.cardinality;\n    const value = getParameterValue(element.value);\n    if ((value == null ? void 0 : value.type) === \"simple\") {\n      value.parameter = String(value.parameter);\n    }\n    if ((value == null ? void 0 : value.type) === \"enumeration\" && Array.isArray(value.parameter)) {\n      value.parameter = value.parameter.map(String);\n    }\n    facet.value = value;\n    facet.uri = element.uri;\n    facet.instructions = element.instructions;\n    facets.push(facet);\n  }\n  return facets;\n};\nconst createPartOfFacets = (components, elements) => {\n  const facets = [];\n  for (const element of elements) {\n    const entityName2 = getParameterValue(element.entity.name);\n    if (!entityName2)\n      continue;\n    const entityPredefinedType = getParameterValue(\n      element.entity.predefinedType\n    );\n    const facet = new IDSPartOf(components, {\n      name: entityName2,\n      predefinedType: entityPredefinedType\n    });\n    facet.relation = element.relation;\n    if (element.cardinality)\n      facet.cardinality = element.cardinality;\n    facet.instructions = element.instructions;\n    facets.push(facet);\n  }\n  return facets;\n};\nconst _IDSSpecifications = class _IDSSpecifications extends Component {\n  constructor(components) {\n    super(components);\n    __publicField(this, \"enabled\", true);\n    __publicField(this, \"list\", new DataMap());\n    components.add(_IDSSpecifications.uuid, this);\n  }\n  /**\n   * Processes the results of an IDS check and categorizes the items into passing and failing.\n   *\n   * @param result - An `IDSCheckResult` object containing the check results for various model IDs.\n   * @returns An object containing two `ModelIdMap` objects:\n   *          - `pass`: A ModelIdMap representing items that passed the check.\n   *          - `fail`: A ModelIdMap representing items that failed the check.\n   */\n  getModelIdMap(result) {\n    const pass = {};\n    const fail = {};\n    for (const [modelId, items] of result) {\n      const passingResults = [...items].filter(([, result2]) => result2.pass);\n      const passingIds = passingResults.map(([localId]) => localId);\n      ModelIdMapUtils.append(pass, modelId, ...passingIds);\n      const failingResults = [...items].filter(([, result2]) => !result2.pass);\n      const failingIds = failingResults.map(([localId]) => localId);\n      ModelIdMapUtils.append(fail, modelId, ...failingIds);\n    }\n    return { pass, fail };\n  }\n  /**\n   * Creates a new IDSSpecification instance and adds it to the list.\n   *\n   * @param name - The name of the IDSSpecification.\n   * @param ifcVersion - An array of IfcVersion values that the specification supports.\n   *\n   * @returns The newly created IDSSpecification instance.\n   */\n  create(name, ifcVersion, identifier) {\n    const specification = new IDSSpecification(\n      this.components,\n      name,\n      ifcVersion\n    );\n    if (identifier)\n      specification.identifier = identifier;\n    this.list.set(specification.identifier, specification);\n    return specification;\n  }\n  /**\n   * Parses and processes an XML string containing Information Delivery Specification (IDS) data.\n   * It creates IDSSpecification instances based on the parsed data and returns them in an array.\n   * Also, the instances are added to the list array.\n   *\n   * @param data - The XML string to parse.\n   *\n   * @returns An array of IDSSpecification instances created from the parsed data.\n   */\n  load(data) {\n    const result = [];\n    const ids = _IDSSpecifications.xmlParser.parse(data).ids;\n    const { specifications } = ids;\n    if (specifications && specifications.specification) {\n      const specs = Array.isArray(specifications.specification) ? specifications.specification : [specifications.specification];\n      for (const spec of specs) {\n        const { name, ifcVersion, description, instructions, identifier } = spec;\n        if (!(name && ifcVersion))\n          continue;\n        const applicabilities = [];\n        const reqs = [];\n        const { applicability, requirements } = spec;\n        if (applicability) {\n          const { maxOccurs, ...rest } = applicability;\n          const facets = Array.isArray(rest) ? rest : [rest];\n          for (const facet of facets) {\n            for (const facetName in facet) {\n              const elements = Array.isArray(facet[facetName]) ? facet[facetName] : [facet[facetName]];\n              if (facetName === \"entity\") {\n                const facets2 = createEntityFacets(this.components, elements);\n                applicabilities.push(...facets2);\n              }\n              if (facetName === \"attribute\") {\n                const facets2 = createAttributeFacets(this.components, elements);\n                applicabilities.push(...facets2);\n              }\n              if (facetName === \"material\") {\n                const facets2 = createMaterialFacets(this.components, elements);\n                applicabilities.push(...facets2);\n              }\n              if (facetName === \"classification\") {\n                const facets2 = createClassificationFacets(\n                  this.components,\n                  elements\n                );\n                applicabilities.push(...facets2);\n              }\n              if (facetName === \"property\") {\n                const facets2 = createPropertyFacets(this.components, elements);\n                applicabilities.push(...facets2);\n              }\n              if (facetName === \"partOf\") {\n                const facets2 = createPartOfFacets(this.components, elements);\n                applicabilities.push(...facets2);\n              }\n            }\n          }\n        }\n        let requirementsDescription;\n        if (requirements) {\n          const { maxOccurs, ...rest } = requirements;\n          requirementsDescription = requirements.description;\n          const facets = Array.isArray(rest) ? rest : [rest];\n          for (const facet of facets) {\n            for (const facetName in facet) {\n              const elements = Array.isArray(facet[facetName]) ? facet[facetName] : [facet[facetName]];\n              if (facetName === \"entity\") {\n                const facets2 = createEntityFacets(this.components, elements);\n                reqs.push(...facets2);\n              }\n              if (facetName === \"attribute\") {\n                const facets2 = createAttributeFacets(this.components, elements);\n                reqs.push(...facets2);\n              }\n              if (facetName === \"material\") {\n                const facets2 = createMaterialFacets(this.components, elements);\n                reqs.push(...facets2);\n              }\n              if (facetName === \"classification\") {\n                const facets2 = createClassificationFacets(\n                  this.components,\n                  elements\n                );\n                reqs.push(...facets2);\n              }\n              if (facetName === \"property\") {\n                const facets2 = createPropertyFacets(this.components, elements);\n                reqs.push(...facets2);\n              }\n              if (facetName === \"partOf\") {\n                const facets2 = createPartOfFacets(this.components, elements);\n                reqs.push(...facets2);\n              }\n            }\n          }\n        }\n        const specification = this.create(\n          name,\n          ifcVersion.split(/\\s+/),\n          identifier\n        );\n        specification.description = description;\n        specification.instructions = instructions;\n        specification.requirementsDescription = requirementsDescription;\n        specification.applicability.add(...applicabilities);\n        specification.requirements.add(...reqs);\n        result.push(specification);\n      }\n    }\n    return result;\n  }\n  /**\n   * Exports the IDSSpecifications data into an XML string.\n   *\n   * @param info - The metadata information for the exported XML.\n   * @param specifications - An optional iterable of IDSSpecification instances to export.\n   * If not provided, all specifications in the list will be exported.\n   *\n   * @returns A string containing the exported IDSSpecifications data in XML format.\n   */\n  export(info, specifications = this.list.values()) {\n    const _specifications = specifications ?? this.list;\n    const xml = `<ids xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://standards.buildingsmart.org/IDS http://standards.buildingsmart.org/IDS/1.0/ids.xsd\" xmlns:ids=\"http://standards.buildingsmart.org/IDS\">\n  <!-- Made with That Open Engine ${Components.release} (https://github.com/thatopen/engine_components) -->\n  <info>\n    <title>${info.title}</title>\n    ${info.copyright ? `<copyright>${info.copyright}</copyright>` : \"\"}\n    ${info.version ? `<version>${info.version}</version>` : \"\"}\n    ${info.description ? `<description>${info.description}</description>` : \"\"}\n    ${info.author ? `<author>${info.author}</author>` : \"\"}\n    ${info.date ? `<date>${info.date.toISOString().split(\"T\")[0]}</date>` : \"\"}\n    ${info.purpose ? `<purpose>${info.purpose}</purpose>` : \"\"}\n    ${info.milestone ? `<milestone>${info.milestone}</milestone>` : \"\"}\n  </info>\n  <specifications>\n    ${[..._specifications].map((spec) => spec.serialize()).join(\"\\n\")}\n  </specifications>\n</ids>`;\n    return xml;\n  }\n};\n__publicField(_IDSSpecifications, \"uuid\", \"9f0b9f78-9b2e-481a-b766-2fbfd01f342c\");\n__publicField(_IDSSpecifications, \"xmlParser\", new fxp.XMLParser({\n  allowBooleanAttributes: true,\n  attributeNamePrefix: \"\",\n  ignoreAttributes: false,\n  ignoreDeclaration: true,\n  ignorePiTags: true,\n  numberParseOptions: { leadingZeros: true, hex: true },\n  parseAttributeValue: true,\n  preserveOrder: false,\n  processEntities: false,\n  removeNSPrefix: true,\n  trimValues: true\n}));\nlet IDSSpecifications = _IDSSpecifications;\nconst _MeasurementUtils = class _MeasurementUtils extends Component {\n  constructor(components) {\n    super(components);\n    /** {@link Component.enabled} */\n    __publicField(this, \"enabled\", true);\n    components.add(_MeasurementUtils.uuid, this);\n  }\n  /**\n   * Utility method to calculate the distance from a point to a line segment.\n   *\n   * @param point - The point from which to calculate the distance.\n   * @param lineStart - The start point of the line segment.\n   * @param lineEnd - The end point of the line segment.\n   * @param clamp - If true, the distance will be clamped to the line segment's length.\n   * @returns The distance from the point to the line segment.\n   */\n  static distanceFromPointToLine(point, lineStart, lineEnd, clamp2 = false) {\n    const tempLine = new THREE$1.Line3();\n    const tempPoint = new THREE$1.Vector3();\n    tempLine.set(lineStart, lineEnd);\n    tempLine.closestPointToPoint(point, clamp2, tempPoint);\n    return tempPoint.distanceTo(point);\n  }\n  // /**\n  //  * Method to get the face of a mesh that contains a given triangle index.\n  //  * It also returns the edges of the found face and their indices.\n  //  *\n  //  * @param mesh - The mesh to get the face from. It must be indexed.\n  //  * @param triangleIndex - The index of the triangle within the mesh.\n  //  * @param instance - The instance of the mesh (optional).\n  //  * @returns An object containing the edges of the found face and their indices, or null if no face was found.\n  //  */\n  // getFace(\n  //   mesh: THREE.InstancedMesh | THREE.Mesh,\n  //   triangleIndex: number,\n  //   instance?: number,\n  // ) {\n  //   if (!mesh.geometry.index) {\n  //     throw new Error(\"Geometry must be indexed!\");\n  //   }\n  //   const allEdges = new Map<string, MeasureEdge>();\n  //   const indices = mesh.geometry.index.array;\n  //   // Find out the raycasted face plane\n  //   const { plane: targetPlane } = this.getFaceData(\n  //     triangleIndex,\n  //     instance,\n  //     mesh,\n  //   );\n  //   // Get the face where the given triangle belongs\n  //   const coplanarFacesIndices: {\n  //     index: number;\n  //     edges: { id: string; distance: number; points: THREE.Vector3[] }[];\n  //   }[] = [];\n  //   for (let faceIndex = 0; faceIndex < indices.length / 3; faceIndex++) {\n  //     const { plane, edges } = this.getFaceData(faceIndex, instance, mesh);\n  //     if (plane.equals(targetPlane)) {\n  //       coplanarFacesIndices.push({ index: faceIndex, edges });\n  //       for (const { id, points, distance } of edges) {\n  //         allEdges.set(id, { points, distance });\n  //       }\n  //     }\n  //   }\n  //   // Now, let's get all faces (groups of adjacent triangles)\n  //   // To visualize this, draw all possible cases on paper, it's easy\n  //   let nextFaceID = 0;\n  //   const edgeFaceMap = new Map<string, number>();\n  //   const faceEdgesMap = new Map<\n  //     number,\n  //     { edges: Set<string>; indices: Set<number> }\n  //   >();\n  //   for (const { index, edges } of coplanarFacesIndices) {\n  //     const commonEdgesFaces = new Map<string, number>();\n  //     for (const { id: edge } of edges) {\n  //       if (edgeFaceMap.has(edge)) {\n  //         const commonFace = edgeFaceMap.get(edge) as number;\n  //         commonEdgesFaces.set(edge, commonFace);\n  //       }\n  //     }\n  //     const edgesIDs = edges.map((edge) => edge.id);\n  //     // Triangle is isolated, just create a new face\n  //     if (!commonEdgesFaces.size) {\n  //       const faceID = nextFaceID++;\n  //       for (const { id: edge } of edges) {\n  //         edgeFaceMap.set(edge, faceID);\n  //       }\n  //       faceEdgesMap.set(faceID, {\n  //         edges: new Set(edgesIDs),\n  //         indices: new Set([index]),\n  //       });\n  //       continue;\n  //     }\n  //     // Triangle has common edges with existing faces\n  //     let firstFaceID: number | null = null;\n  //     const otherFaces = new Set<number>();\n  //     const edgesToAdd = new Set(edgesIDs);\n  //     // First, remove all common edges\n  //     for (const [edge, faceID] of commonEdgesFaces) {\n  //       if (firstFaceID === null) {\n  //         firstFaceID = faceID;\n  //       } else if (faceID !== firstFaceID) {\n  //         otherFaces.add(faceID);\n  //       }\n  //       edgeFaceMap.delete(edge);\n  //       const { edges: foundFaceEdges } = faceEdgesMap.get(faceID)!;\n  //       foundFaceEdges.delete(edge);\n  //       edgesToAdd.delete(edge);\n  //     }\n  //     // If we hadn't found a face, we wouldn't be here\n  //     if (firstFaceID === null) {\n  //       throw new Error(\"Error computing face!\");\n  //     }\n  //     // Now, let's merge this triangle with the first face\n  //     const firstFace = faceEdgesMap.get(firstFaceID)!;\n  //     const { indices: firstFaceIndices } = firstFace;\n  //     firstFaceIndices.add(index);\n  //     for (const edge of edgesToAdd) {\n  //       edgeFaceMap.set(edge, firstFaceID);\n  //       const { edges: firstFaceEdges } = firstFace;\n  //       firstFaceEdges.add(edge);\n  //     }\n  //     // Finally, if there were other faces in common\n  //     // merge them with the first one\n  //     for (const faceID of otherFaces) {\n  //       const otherFace = faceEdgesMap.get(faceID)!;\n  //       const { edges: otherEdges, indices: otherIndices } = otherFace;\n  //       const firstFace = faceEdgesMap.get(firstFaceID)!;\n  //       const { edges: firstEdges, indices: firstIndices } = firstFace;\n  //       for (const edge of otherEdges) {\n  //         firstEdges.add(edge);\n  //         edgeFaceMap.set(edge, firstFaceID);\n  //       }\n  //       for (const index of otherIndices) {\n  //         firstIndices.add(index);\n  //       }\n  //       faceEdgesMap.delete(faceID);\n  //     }\n  //   }\n  //   for (const [_faceID, { indices, edges }] of faceEdgesMap) {\n  //     if (indices.has(triangleIndex)) {\n  //       const foundEdges: MeasureEdge[] = [];\n  //       for (const edgeID of edges) {\n  //         const foundEdge = allEdges.get(edgeID)!;\n  //         foundEdges.push(foundEdge);\n  //       }\n  //       return { edges: foundEdges, indices };\n  //     }\n  //   }\n  //   return null;\n  // }\n  // /**\n  //  * Method to get the vertices and normal of a mesh face at a given index.\n  //  * It also applies instance transformation if provided.\n  //  *\n  //  * @param mesh - The mesh to get the face from. It must be indexed.\n  //  * @param faceIndex - The index of the face within the mesh.\n  //  * @param instance - The instance of the mesh (optional).\n  //  * @returns An object containing the vertices and normal of the face.\n  //  * @throws Will throw an error if the geometry is not indexed.\n  //  */\n  // getVerticesAndNormal(\n  //   mesh: THREE.Mesh | THREE.InstancedMesh,\n  //   faceIndex: number,\n  //   instance: number | undefined,\n  // ) {\n  //   if (!mesh.geometry.index) {\n  //     throw new Error(\"Geometry must be indexed!\");\n  //   }\n  //   const indices = mesh.geometry.index.array;\n  //   const pos = mesh.geometry.attributes.position.array;\n  //   const nor = mesh.geometry.attributes.normal.array;\n  //   const i1 = indices[faceIndex * 3] * 3;\n  //   const i2 = indices[faceIndex * 3 + 1] * 3;\n  //   const i3 = indices[faceIndex * 3 + 2] * 3;\n  //   const p1 = new THREE.Vector3(pos[i1], pos[i1 + 1], pos[i1 + 2]);\n  //   const p2 = new THREE.Vector3(pos[i2], pos[i2 + 1], pos[i2 + 2]);\n  //   const p3 = new THREE.Vector3(pos[i3], pos[i3 + 1], pos[i3 + 2]);\n  //   const n1 = new THREE.Vector3(nor[i1], nor[i1 + 1], nor[i1 + 2]);\n  //   const n2 = new THREE.Vector3(nor[i2], nor[i2 + 1], nor[i2 + 2]);\n  //   const n3 = new THREE.Vector3(nor[i3], nor[i3 + 1], nor[i3 + 2]);\n  //   const averageNx = (n1.x + n2.x + n3.x) / 3;\n  //   const averageNy = (n1.y + n2.y + n3.y) / 3;\n  //   const averageNz = (n1.z + n2.z + n3.z) / 3;\n  //   const faceNormal = new THREE.Vector3(averageNx, averageNy, averageNz);\n  //   // Apply instance transformation to vertex and normal\n  //   if (instance !== undefined && mesh instanceof THREE.InstancedMesh) {\n  //     const transform = new THREE.Matrix4();\n  //     mesh.getMatrixAt(instance, transform);\n  //     const rotation = new THREE.Matrix4();\n  //     rotation.extractRotation(transform);\n  //     faceNormal.applyMatrix4(rotation);\n  //     p1.applyMatrix4(transform);\n  //     p2.applyMatrix4(transform);\n  //     p3.applyMatrix4(transform);\n  //   }\n  //   return { p1, p2, p3, faceNormal };\n  // }\n  /**\n   * Method to round the vector's components to a specified number of decimal places.\n   * This is used to ensure numerical precision in edge detection.\n   *\n   * @param vector - The vector to round.\n   * @returns The vector with rounded components.\n   */\n  round(vector) {\n    const factor = 1e3;\n    vector.x = Math.trunc(vector.x * factor) / factor;\n    vector.y = Math.trunc(vector.y * factor) / factor;\n    vector.z = Math.trunc(vector.z * factor) / factor;\n  }\n  /**\n   * @deprecated Use {@link getItemsVolume} instead.\n   *\n   * Calculates the volume of a set of items.\n   */\n  async getVolumeFromFragments(modelIdMap) {\n    console.warn(\n      \"getVolumeFromFragments is deprecated. Use getItemsVolume instead.\"\n    );\n    return this.getItemsVolume(modelIdMap);\n  }\n  /**\n   * Calculates the total volume of items for a given map of model IDs to local IDs.\n   * @param modelIdMap A map where the key is the model ID and the value is an array of local IDs.\n   * @returns A promise that resolves to the total volume of the specified items.\n   */\n  async getItemsVolume(modelIdMap) {\n    let volume = 0;\n    const fragments = this.components.get(FragmentsManager);\n    for (const [modelId, localIds] of Object.entries(modelIdMap)) {\n      const model = fragments.list.get(modelId);\n      if (!model)\n        continue;\n      volume += await model.getItemsVolume([...localIds]);\n    }\n    return volume;\n  }\n  // private getFaceData(\n  //   faceIndex: number,\n  //   instance: number | undefined,\n  //   mesh: THREE.Mesh | THREE.InstancedMesh,\n  // ) {\n  //   const found = this.getVerticesAndNormal(mesh, faceIndex, instance);\n  //   const { p1, p2, p3, faceNormal } = found;\n  //   // Round numbers to make sure numerical precision\n  //   // doesn't affect edge detection\n  //   this.round(p1);\n  //   this.round(p2);\n  //   this.round(p3);\n  //   this.round(faceNormal);\n  //   // To make sure the edge AB === the edge BA\n  //   const vertices = [\n  //     { id: `${p1.x}|${p1.y}|${p1.z}`, value: p1 },\n  //     { id: `${p2.x}|${p2.y}|${p2.z}`, value: p2 },\n  //     { id: `${p3.x}|${p3.y}|${p3.z}`, value: p3 },\n  //   ];\n  //   vertices.sort((a, b) => {\n  //     if (a.id < b.id) {\n  //       return -1;\n  //     }\n  //     if (a.id > b.id) {\n  //       return 1;\n  //     }\n  //     return 0;\n  //   });\n  //   const [\n  //     { id: id1, value: v1 },\n  //     { id: id2, value: v2 },\n  //     { id: id3, value: v3 },\n  //   ] = vertices;\n  //   // Create IDs to identify the edges\n  //   const edges = [\n  //     {\n  //       id: `${id1}|${id2}`,\n  //       distance: v1.distanceTo(v2),\n  //       points: [v1, v2],\n  //     },\n  //     {\n  //       id: `${id2}|${id3}`,\n  //       distance: v2.distanceTo(v3),\n  //       points: [v2, v3],\n  //     },\n  //     {\n  //       id: `${id1}|${id3}`,\n  //       distance: v1.distanceTo(v3),\n  //       points: [v1, v3],\n  //     },\n  //   ];\n  //   const plane = new THREE.Plane();\n  //   plane.setFromNormalAndCoplanarPoint(faceNormal, p1);\n  //   plane.constant = Math.round(plane.constant * 10) / 10;\n  //   return { plane, edges };\n  // }\n  /**\n   * Converts a value from one unit to another for length, area, or volume without using external libraries.\n   *\n   * @param value - The value to convert.\n   * @param fromUnit - The unit of the input value (e.g., \"m\", \"cm\", \"mm\" for lengths; \"m2\", \"cm2\" for areas; \"m3\", \"cm3\" for volumes).\n   * @param toUnit - The unit to convert to (e.g., \"cm\", \"mm\", \"m\" for lengths; \"cm2\", \"m2\" for areas; \"cm3\", \"m3\" for volumes).\n   * @param precision - The number of decimal places to round the result to, as number between 0 and 5. (default is 2).\n   * @throws {Error} If the rounding value is not a valid integer or is out of range (0-5).\n   * @returns The converted value rounded to the specified precision.\n   */\n  static convertUnits(value, fromUnit, toUnit, precision = 2) {\n    const unitFactors = {\n      // Length\n      m: 1,\n      cm: 0.01,\n      mm: 1e-3,\n      km: 1e3,\n      // Area\n      m2: 1,\n      cm2: 1e-4,\n      mm2: 1e-6,\n      km2: 1e6,\n      // Volume\n      m3: 1,\n      cm3: 1e-6,\n      mm3: 1e-9,\n      km3: 1e9\n    };\n    if (!unitFactors[fromUnit] || !unitFactors[toUnit]) {\n      throw new Error(\"Invalid units provided for conversion.\");\n    }\n    if (!Number.isInteger(precision) || precision < 0 || precision > 5) {\n      throw new Error(\"Precision must be an integer between 0 and 5.\");\n    }\n    let factor = unitFactors[fromUnit] / unitFactors[toUnit];\n    if (fromUnit.endsWith(\"2\") && toUnit.endsWith(\"2\")) {\n      factor **= 2;\n    } else if (fromUnit.endsWith(\"3\") && toUnit.endsWith(\"3\")) {\n      factor **= 3;\n    }\n    const convertedValue = value * factor;\n    const roundingFactor = 10 ** precision;\n    return Math.round(convertedValue * roundingFactor) / roundingFactor;\n  }\n};\n/**\n * A unique identifier for the component.\n * This UUID is used to register the component within the Components system.\n */\n__publicField(_MeasurementUtils, \"uuid\", \"267ca032-672f-4cb0-afa9-d24e904f39d6\");\nlet MeasurementUtils = _MeasurementUtils;\nexport {\n  AsyncEvent,\n  BCFTopics,\n  BCFTopicsConfigManager,\n  Base,\n  BaseCamera,\n  BaseRenderer,\n  BaseScene,\n  BaseWorldItem,\n  BoundingBoxer,\n  Classifier,\n  Clipper,\n  Comment,\n  Component,\n  Components,\n  ConfigManager,\n  Configurator,\n  ControlsUtils,\n  DataMap,\n  DataSet,\n  Disposer,\n  Event,\n  EventManager,\n  FinderQuery,\n  FirstPersonMode,\n  FragmentsManager,\n  Grids,\n  Hider,\n  IDSAttribute,\n  IDSClassification,\n  IDSEntity,\n  IDSFacet,\n  IDSMaterial,\n  IDSPartOf,\n  IDSProperty,\n  IDSSpecification,\n  IDSSpecifications,\n  IfcFragmentSettings,\n  IfcLoader,\n  ItemsFinder,\n  MeasurementUtils,\n  ModelIdMapUtils,\n  Mouse,\n  OrbitMode,\n  OrthoPerspectiveCamera,\n  PlanMode,\n  ProjectionManager,\n  Raycasters,\n  ShadowedScene,\n  SimpleCamera,\n  SimpleGrid,\n  SimpleGridConfigManager,\n  SimplePlane,\n  SimpleRaycaster,\n  SimpleRenderer,\n  SimpleScene,\n  SimpleSceneConfigManager,\n  SimpleWorld,\n  Topic,\n  UUID,\n  VertexPicker,\n  View,\n  Viewpoint,\n  Viewpoints,\n  Views,\n  Worlds,\n  XML,\n  extensionsImporter\n};\n"],
  "mappings": "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",
  "names": ["_Disposer", "_UUID", "_ConfigManager", "_FragmentsManager", "_IfcLoader", "_Hider", "_BoundingBoxer", "_ItemsFinder", "_Classifier", "_Raycasters", "_Worlds", "_Grids", "_Components", "_Topic", "_BCFTopics", "PerspectiveCamera", "Color", "_Clipper", "_Viewpoints", "_Views", "camera", "_IDSSpecifications", "_MeasurementUtils"]
}
